<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='Average UE' />
          <alias key='2' value='# Policy Type' />
        </aliases>
        <members>
          <member alias='Average UE' value='1' />
          <member alias='# Policy Type' value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='adj_customer_analysis_clean' inline='true' name='federated.0kmd8y60u0cori14g08m30vkwslf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='adj_customer_analysis_clean' name='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p'>
            <connection class='textscan' directory='C:/Users/Fredo/Documents/GitHub/IronAlfred/End to End Project' filename='adj_customer_analysis_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;de&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;de_DE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lifetime_value</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_lifetime_value]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>customer_lifetime_value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coverage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coverage]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>coverage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>education</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_to_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[effective_to_date]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>effective_to_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employmentstatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employmentstatus]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>employmentstatus</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_code]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>location_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marital_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[marital_status]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>marital_status</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>monthly_premium_auto</remote-name>
            <remote-type>20</remote-type>
            <local-name>[monthly_premium_auto]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>monthly_premium_auto</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_last_claim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_since_last_claim]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_last_claim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_policy_inception</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months_since_policy_inception]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_policy_inception</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_open_complaints</remote-name>
            <remote-type>129</remote-type>
            <local-name>[number_of_open_complaints]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_open_complaints</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_policies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_policies]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_policies</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renew_offer_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[renew_offer_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>renew_offer_type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sales_channel]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>sales_channel</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_claim_amount</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_claim_amount]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>total_claim_amount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_class]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_class</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_size]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_size</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
      </column>
      <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
      </column>
      <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
      </column>
      <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
      </column>
      <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
      </column>
      <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
      </column>
      <column caption='Multi-Metric' datatype='real' name='[Calculation_1185572651833106448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN ([Calculation_1185572646113837064])&#13;&#10;WHEN  2 THEN COUNT([policy_type])&#13;&#10;END' />
      </column>
      <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='adj_customer_analysis_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
      <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
      </column>
      <column datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='CountD' name='[ctd:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
      <group caption='Action (MONTH(effective_to_date))' hidden='true' name='[Action (MONTH(effective_to_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(effective_to_date),state)' hidden='true' name='[Action (MONTH(effective_to_date),state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.960563' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0394366' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1185572646178607119:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='Average UE' />
            <alias key='2' value='# Policy Type' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='adj_customer_analysis_clean.csv' id='adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629'>
            <properties context=''>
              <relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='string' name='customer_lifetime_value' ordinal='2' />
                  <column datatype='string' name='response' ordinal='3' />
                  <column datatype='string' name='coverage' ordinal='4' />
                  <column datatype='string' name='education' ordinal='5' />
                  <column datatype='date' name='effective_to_date' ordinal='6' />
                  <column datatype='string' name='employmentstatus' ordinal='7' />
                  <column datatype='string' name='gender' ordinal='8' />
                  <column datatype='integer' name='income' ordinal='9' />
                  <column datatype='string' name='location_code' ordinal='10' />
                  <column datatype='string' name='marital_status' ordinal='11' />
                  <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
                  <column datatype='string' name='months_since_last_claim' ordinal='13' />
                  <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
                  <column datatype='string' name='number_of_open_complaints' ordinal='15' />
                  <column datatype='integer' name='number_of_policies' ordinal='16' />
                  <column datatype='string' name='policy_type' ordinal='17' />
                  <column datatype='string' name='policy' ordinal='18' />
                  <column datatype='string' name='renew_offer_type' ordinal='19' />
                  <column datatype='string' name='sales_channel' ordinal='20' />
                  <column datatype='string' name='total_claim_amount' ordinal='21' />
                  <column datatype='string' name='vehicle_class' ordinal='22' />
                  <column datatype='string' name='vehicle_size' ordinal='23' />
                  <column datatype='string' name='vehicle_type' ordinal='24' />
                  <column datatype='string' name='month' ordinal='25' />
                  <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0kmd8y60u0cori14g08m30vkwslf'>
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]'>
        <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]'>
        <groupfilter function='level-members' level='[none:education:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]'>
        <groupfilter function='level-members' level='[none:employmentstatus:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]'>
        <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]'>
        <groupfilter function='level-members' level='[none:income (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]'>
        <groupfilter function='level-members' level='[none:policy:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]'>
        <groupfilter function='level-members' level='[none:policy_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]'>
        <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]'>
        <groupfilter function='level-members' level='[none:vehicle_class:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_2417176E5DAA43728AC11C20C19221E6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action3_574DD359BDAD492B84528F89AD06587F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Product Coverage' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Product Coverage' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1 1' name='[Action4_39561062C4F24947ADFEF31116E36E50]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Percentage of Total' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Percentage of Total' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg UE over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' field-type='quantitative' max='9596.789368503305' min='5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:qk]</cols>
      </table>
      <simple-id uuid='{3EC2E204-369C-4DBE-8C38-06AB9355D967}' />
    </worksheet>
    <worksheet name='CLTV vs. Claims'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_claim_amount]' derivation='CountD' name='[ctd:total_claim_amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Year' name='[yr:effective_to_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:total_claim_amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='177' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok] / ([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]))</cols>
      </table>
      <simple-id uuid='{990EC2F2-4DF0-4D03-9E71-98C46AE9598A}' />
    </worksheet>
    <worksheet name='Coverage and Premia'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column datatype='string' name='[coverage]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[monthly_premium_auto]' role='measure' type='quantitative' />
            <column-instance column='[coverage]' derivation='None' name='[none:coverage:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[monthly_premium_auto]' derivation='Sum' name='[sum:monthly_premium_auto:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] * [federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:qk]</cols>
      </table>
      <simple-id uuid='{7168EE3A-22E6-49D3-B553-38F6E23BA31D}' />
    </worksheet>
    <worksheet name='First insights &amp; Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='Average UE' />
                <alias key='2' value='# Policy Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Multi-Metric' datatype='real' name='[Calculation_1185572651833106448]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN ([Calculation_1185572646113837064])&#13;&#10;WHEN  2 THEN COUNT([policy_type])&#13;&#10;END' />
            </column>
            <column-instance column='[policy_type]' derivation='Count' name='[cnt:policy_type:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572651833106448]' derivation='User' name='[usr:Calculation_1185572651833106448:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:policy_type:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572651833106448:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Metric Swap Parameter'>
              <formatted-text>
                <run>Metric Swap Parameter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok])</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6880125D-A9D7-4141-9FB5-7767B42BD089}' />
    </worksheet>
    <worksheet name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='134' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' max='200000000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' max='200000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' min='200000.0' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' max='20000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' separate-domains='true' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:ok]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BC0B5DF5-EE6E-41A1-8042-1395EEC0D915}' />
    </worksheet>
    <worksheet name='MotherSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day' name='[dy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok]' value='192' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok])</rows>
        <cols total='true' />
      </table>
      <simple-id uuid='{F0571B18-B653-4024-9270-D4B97814C8B2}' />
    </worksheet>
    <worksheet name='UE Overall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>UE Overall</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='108' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F55BBB2C-5750-4271-BD62-8DC9A312E1B6}' />
    </worksheet>
    <worksheet name='UE Overall static'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='68' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</rows>
        <cols total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F82F4FC4-BC98-44AE-8AB0-1C0E6A9DFC01}' />
    </worksheet>
    <worksheet name='UE per Education'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='104' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='Education'>
              <formatted-text>
                <run>Education</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{9F8A447D-DD64-4D79-9413-84935F93EEA6}' />
    </worksheet>
    <worksheet name='UE per Employment'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='92' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='88' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='Employmentstatus'>
              <formatted-text>
                <run>Employmentstatus</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{48D21B27-31A5-41CF-8863-D4CD71FC5B47}' />
    </worksheet>
    <worksheet name='UE per Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' value='Gender'>
              <formatted-text>
                <run>Gender</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{FF18F2E9-C6F8-4273-B62D-81BDB6E35C9C}' />
    </worksheet>
    <worksheet name='UE per Income (bins)'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='136' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='96' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
        <show-full-range>
          <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[income (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{04C8E511-F059-4C91-A0B2-5FC282E6F2AD}' />
    </worksheet>
    <worksheet name='UE per Policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8D39DD11-BBC6-41F0-94F6-DD83E3519CF7}' />
    </worksheet>
    <worksheet name='UE per Policy_Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' member-value='&quot;Special Auto&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{EE7454C3-6CCF-408C-8049-EFF2338BB4A5}' />
    </worksheet>
    <worksheet name='UE per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8E108FBB-59A4-4D32-9D79-F8EB37A660F4}' />
    </worksheet>
    <worksheet name='UE per State GrandTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F3C5E436-12E2-4F7A-A556-16A57A9C6938}' />
    </worksheet>
    <worksheet name='UE per Vehicle Class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{CC125929-FCA9-47D4-9AB8-8063CC079124}' />
    </worksheet>
    <worksheet name='UE total per Income (bins)'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5AC73F9F-4D19-4BD9-A93F-FA19D7D185A6}' />
    </worksheet>
    <worksheet name='UE total per Policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AB35B5E5-305C-43C7-B949-77E8A10234C4}' />
    </worksheet>
    <worksheet name='UE total per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E642883-3768-4280-A98B-4797AA3B38E0}' />
    </worksheet>
    <worksheet name='UE total per Vehicle Class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{011759AD-8D3F-4773-95F1-E17F852707D3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='UE Demografics'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93668' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5402'>
            <zone h='93668' id='6' type-v2='layout-basic' w='82400' x='800' y='5402'>
              <zone h='21575' id='3' name='UE Overall' w='40100' x='800' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36163' id='5' name='UE per State' w='40100' x='800' y='26977'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21886' id='16' name='UE per Gender' w='42300' x='40900' y='41292'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35890' id='18' name='UE per Education' w='42300' x='40900' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35930' id='19' name='UE per Employment' w='40100' x='800' y='63140'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35892' id='20' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93668' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5402'>
              <zone h='6511' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='18424'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31446'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='37957'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='44468'>
                <formatted-text>
                  <run bold='true'>NOTES:</run>
                  <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='3721' id='36' is-fixed='true' type-v2='empty' w='16000' x='83200' y='67375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='71096'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9951' id='40' type-v2='empty' w='16000' x='83200' y='89119'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: DEMOGRAFICS</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='100' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='99' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: DEMOGRAFICS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='21575' id='3' is-fixed='true' name='UE Overall' w='40100' x='800' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35890' id='18' is-fixed='true' name='UE per Education' w='42300' x='40900' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36163' id='5' is-fixed='true' name='UE per State' w='40100' x='800' y='26977'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='21886' id='16' is-fixed='true' name='UE per Gender' w='42300' x='40900' y='41292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='44468'>
                  <formatted-text>
                    <run bold='true'>NOTES:</run>
                    <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='18424'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35930' id='19' is-fixed='true' name='UE per Employment' w='40100' x='800' y='63140'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='37957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35892' id='20' is-fixed='true' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='71096'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6801E51E-3935-43B4-87BA-6C623D64C93A}' />
    </dashboard>
    <dashboard name='UE Percentage of Total'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93669' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5401'>
            <zone h='93669' id='6' type-v2='layout-basic' w='82400' x='800' y='5401'>
              <zone h='21227' id='3' name='UE Overall' w='40000' x='800' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='21227' id='35' type-v2='text' w='42400' x='40800' y='5401'>
                <formatted-text>
                  <run bold='true'>NOTES:</run>
                  <run>
- More than 50% of UE via 0-40k Income classes (low Avg. UE)
- Almost 2/3 of UE via Cali and Oregon (have Avg. UE)
- 70% of UE from Personal Policy Type (have Avg. UE)
- 60% of UE from Four &amp; Two Door Cars (Signif. low Avg. UE)
-&gt;  If Profit up then Four &amp; Two Door Cars Volumes down</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37036' id='68' name='UE total per State' w='41200' x='800' y='62034'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35406' id='70' name='UE total per Income (bins)' w='41200' x='800' y='26628'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35406' id='71' name='UE total per Policy' w='41200' x='42000' y='26628'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37036' id='72' name='UE total per Vehicle Class' w='41200' x='42000' y='62034'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93669' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5401'>
              <zone h='6511' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='48' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='52' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='18423'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='53' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24934'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='75' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='76' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='37956'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='77' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='44467'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='78' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='50978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='79' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='57489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8559' id='80' type-v2='empty' w='16000' x='83200' y='64000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='72559'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8488' id='69' name='UE total per State' pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type-v2='color' w='16000' x='83200' y='90582'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: % of Total per Dimension</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='100' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='99' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: % of Total per Dimension</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='48' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='52' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='18423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='53' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24934'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='75' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='76' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='37956'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='77' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='44467'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='78' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='50978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='79' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='57489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='175' h='21227' id='3' is-fixed='true' name='UE Overall' w='40000' x='800' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='21227' id='35' type-v2='text' w='42400' x='40800' y='5401'>
                  <formatted-text>
                    <run bold='true'>NOTES:</run>
                    <run>
- More than 50% of UE via 0-40k Income classes (low Avg. UE)
- Almost 2/3 of UE via Cali and Oregon (have Avg. UE)
- 70% of UE from Personal Policy Type (have Avg. UE)
- 60% of UE from Four &amp; Two Door Cars (Signif. low Avg. UE)
-&gt;  If Profit up then Four &amp; Two Door Cars Volumes down</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35406' id='70' is-fixed='true' name='UE total per Income (bins)' w='41200' x='800' y='26628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35406' id='71' is-fixed='true' name='UE total per Policy' w='41200' x='42000' y='26628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37036' id='68' is-fixed='true' name='UE total per State' w='41200' x='800' y='62034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8488' id='69' name='UE total per State' pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type-v2='color' w='16000' x='83200' y='90582'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37036' id='72' is-fixed='true' name='UE total per Vehicle Class' w='41200' x='42000' y='62034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='72559'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ADD37467-3320-447E-8417-FB7BA34A4170}' />
    </dashboard>
    <dashboard name='UE Product Coverage'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93669' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5401'>
            <zone h='93669' id='6' type-v2='layout-basic' w='82400' x='800' y='5401'>
              <zone h='21343' id='3' name='UE Overall' w='41200' x='800' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42675' id='46' name='UE per Vehicle Class' w='41199' x='800' y='56395'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29651' id='49' name='UE per Policy_Type' w='41199' x='800' y='26744'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72326' id='51' name='UE per Policy' w='41201' x='41999' y='26744'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='21343' id='35' type-v2='text' w='41200' x='42000' y='5401'>
                <formatted-text>
                  <run bold='true'>NOTES</run>
                  <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93669' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5401'>
              <zone h='12209' id='10' mode='checklist' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22907' id='48' mode='checklist' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17610'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14883' id='52' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40517'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25647' id='53' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='81047'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: PRODUCT/COVERAGE</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='89' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='88' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: PRODUCT/COVERAGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12209' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='21343' id='3' is-fixed='true' name='UE Overall' w='41200' x='800' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='21343' id='35' type-v2='text' w='41200' x='42000' y='5401'>
                  <formatted-text>
                    <run bold='true'>NOTES</run>
                    <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14883' id='52' mode='checkdropdown' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40517'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='29651' id='49' is-fixed='true' name='UE per Policy_Type' w='41199' x='800' y='26744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25647' id='53' mode='checkdropdown' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72326' id='51' is-fixed='true' name='UE per Policy' w='41201' x='41999' y='26744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22907' id='48' mode='checkdropdown' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17610'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42675' id='46' is-fixed='true' name='UE per Vehicle Class' w='41199' x='800' y='56395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='81047'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F9CB26C-0CF5-4EAD-A282-C6C4CC8C9D27}' />
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='MotherSheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92D88251-54C2-42B4-A852-932CB8D8B527}' />
    </window>
    <window class='dashboard' name='UE Demografics'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Education' />
        <viewpoint name='UE per Employment' />
        <viewpoint name='UE per Gender' />
        <viewpoint name='UE per Income (bins)' />
        <viewpoint name='UE per State' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{15026B6D-72D0-454B-9CE3-DE499E7E7FC4}' />
    </window>
    <window class='worksheet' maximized='true' name='First insights &amp; Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E1BEF68-1AC6-41A8-944E-A3A0B3BB9C7D}' />
    </window>
    <window class='worksheet' name='Coverage and Premia'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Special Auto&quot;</bucket>
                </multibucket>
                <axis>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BC544A4-B5D8-4309-9E88-EE66CF056F2E}' />
    </window>
    <window class='worksheet' name='CLTV vs. Claims'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DBF16AB-628E-492A-B166-7775E3098634}' />
    </window>
    <window class='worksheet' name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4FBCAD3-1166-407F-AEE1-6F1B6577B5DA}' />
    </window>
    <window class='worksheet' name='Avg UE over time'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5B77E72-1DB3-4C5D-8BCF-CA917018C965}' />
    </window>
    <window class='worksheet' name='UE Overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{926AB694-2F41-461C-A0F1-D3F7DE68F7A8}' />
    </window>
    <window class='worksheet' name='UE per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{571D9F91-5B9E-4C2B-876F-594EF21253E6}' />
    </window>
    <window class='worksheet' name='UE per State GrandTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CA5D7A0-8D75-47F3-B0C0-384D823C2121}' />
    </window>
    <window class='worksheet' name='UE per Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55DC0922-D522-4886-BE1C-C792434C4B55}' />
    </window>
    <window class='worksheet' name='UE Overall static'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C51AA5D-1BDC-4DAA-8334-242024EFE6C7}' />
    </window>
    <window class='worksheet' name='UE per Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61C2422-9BE0-40DE-827E-9982F198DAF3}' />
    </window>
    <window class='worksheet' name='UE per Employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E58FE37C-D19E-4E01-A537-19B622DFDBBB}' />
    </window>
    <window class='worksheet' name='UE per Income (bins)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94175CF4-1A77-4373-B760-061A77B8C188}' />
    </window>
    <window class='worksheet' name='UE total per Income (bins)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DA89B20-0AFC-424B-8596-6FB986691B1A}' />
    </window>
    <window class='worksheet' name='UE total per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71CE377D-2FF7-4402-803B-844984E3BAA5}' />
    </window>
    <window class='worksheet' name='UE per Policy_Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B32AC5F-FDFA-4A99-9263-6475FA16523C}' />
    </window>
    <window class='worksheet' name='UE per Policy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA120B4F-28D7-4442-AB34-537B02E7E450}' />
    </window>
    <window class='worksheet' name='UE total per Policy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D954D41E-880E-478A-8A2E-95A4E5FDBB08}' />
    </window>
    <window class='worksheet' name='UE per Vehicle Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B79FAB93-ED7C-4FF1-BBA7-23E0469E361C}' />
    </window>
    <window class='worksheet' name='UE total per Vehicle Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D7DED04-316D-4779-B469-51ACC763BC7B}' />
    </window>
    <window class='dashboard' name='UE Product Coverage'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Policy' />
        <viewpoint name='UE per Policy_Type' />
        <viewpoint name='UE per Vehicle Class' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BF153190-DF2C-40A8-99A0-30824F11BF18}' />
    </window>
    <window class='dashboard' name='UE Percentage of Total'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE total per Income (bins)' />
        <viewpoint name='UE total per Policy' />
        <viewpoint name='UE total per State' />
        <viewpoint name='UE total per Vehicle Class' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{28581EE2-B9C5-48EF-9F1B-A6A4CCA1E934}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg UE over time' width='192'>
      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
    </thumbnail>
    <thumbnail height='126' name='CLTV vs. Claims' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB+CAYAAAByHB4CAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAR30lEQVR4nO2cf3hNV9bHPzOMmqi8HUYrNQ01UkFE414zV9pcTcNFIw0N1SbEkFb8yvRt
      yhR5xYumShXT0IeatFKCaLWDSkuI5s4Tr6lIJgQhJg3q96C9JM8judd5/zj3SqL5Ib+qM3t9
      nscf95x91l5r7fM9e52ds/1M0zQNQVCUn99rBwThXiICEJRGBCAojQhAUBoRgKA0IgBBaUQA
      gtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAojQhA
      UBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASlEQEI
      SiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0IgBB
      aUQAgtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAo
      jQhAUBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASl
      EQEISiMCEJRGBCAojQhAUBoRgKA0IgBBaUQAgtKIAASlEQEISiMCEJRGBCAojQhAUBoRgKA0
      IgBBaUQAgtK0rKtBdnb2j+GHINwTfqZpmnavnRCEe4WUQILSiAAEpREBCErTKAGcSo7AaDRW
      /AuwMCE+ldyr9qoNrXMxGo3MtTamN5cpI0bjXJrAlPLYi7YwfWQg/Y3q5rQJZoBglmZnk52d
      zb4tSxliX8eU4CiSi+x1X1ojp0iOMGJsCsX8pPpqPPpDpylu1hMkTV9ITvfZ7NifTXb2PMxN
      4F+9sM7FaIwg+dSP3XEFTVoCtXrQh+ff3MAc/xMkTk/ihOuEeR7Z2dnMa4IMm+fdo8H6j+MC
      506Dx2OP0a7OxfD/XJrhHcAdy+hQ3E9/TvpR56FTyURUKYHsnM9YyARLQJXS6ZDN1TaMxOPA
      jtjb5ZXr2jufgK7f6WfSWTZlOAFGI8aA4cTvvFTJp6r99Q8cyfStp+rsqyo12HCeu5qbXFFO
      BAxnyqp9VFSC1c0ydx5z/U7nTPoypgzX+wkYHo8ein4+THeWWFfZWcPMVXYmnYUTLHo++gcy
      Nn4bJ8qcJ61zMRpj2QEcTwxzxl39rGI7VDkuCxMSD1JS7ZhWc8x+noyFE7AE6L4GWCYQn3oI
      G85SNnYHcJzEMGcsEcnczujVXJKnjySwvxGjMYDhU1axr1JprY/7TNb9bfVt/wKGT2fLiUvk
      psYzNrA/RmN/hv33FioXI3fGg9YIiteGawZDvJZ554kbO7RYg0GLXP+tq6EWbjBo8a6G//pE
      m2QI1GanXdRuappWXnJOO7D2Fe3drNuWtbXhBs0Q/wPLP+hT/23Rpq2yaoXf39Q07aaW884w
      zRC4WMt2tvn+yxnak6aR2mKr3t/Ni4e11C//UWdflanNRnn2Ys1isGgztp12ntulxVsMmmV+
      lnajxj7uPOb8bZmmrbIWanooOdo7wwxa4OLsiqtqynllLnyiTTKZtMgVOdqVck0rLzmqJUWa
      NFPkeq34dqNMLd5g0MLXFtdopvzIKm2UyaJN23RUKynXtPKSIs26JUv7Vnek6phWc+xfn0zS
      DIGztbSLNzVNK9dKzh3Q1r7yrnZ7mDPjNYMhXPuBC+XZ2mKLQbPM2Kad1hOq7Yq3aAbLfC3r
      RuU8DNfitx3WzpWUa9rNPG35CINmGB6vbTt8TtMPLddGGEzafFeHxeu1SNNwbaFzDMuv5GjN
      swrU5n7uB+z2Gt4DbtzARhse7NSOVkBLNw+M45YT49/QDk2Mig6gm3sroBXt2ruD7Yb+pOIg
      qxdl8MALc3g14EFa4SzVBveph/3abFxh619SsT0dy9yQR5znBjEnLhjb1nV8eaW+oYwiOqAb
      eijt0EMpqZeJgx+t5IDHH4ib6ke7ltDSrQcT5k+i65EkNh+8WytX2Jq4hqLfTSNhdA/cWkJL
      t0cJeM6fTndp4cYNG7R5kE7tWgEtcfMwMm55DHUN85WtfyHV9jSxc0N4RE8og+bEEWzbyroq
      CfUlKMQHD7eW0MoXv96AbxAhPh7oh/zoTTmu2/Dg5iSOPB3DdOcYtmzn10zLoCU3uAG4339/
      9ec7P8Wzfb5jXfQgxk5fxebsbyhtzDtzbZwtIN8Gff186/7uo0E2jnP0H9C1lzdtKh1t2bkr
      XTnAoSMN7bShnKUg3wa9e/BY5cOdH6UbNv6Rf7dvnHpc3fv64t5ATzo/9Sx9vltH9KCxTF+1
      mexvSrmbYT6uJxTvqgmla1c40OCEOvOy80+YKq1cNo8ACo6Qiwc+PdrX0KAzo5P2kLHubUK6
      nWT7jHDMgVGkNGrlSPjJ0Xk0SXsyWPd2CN1ObmdGuJnAqBTuzTDb9Zlg8GL2O1cts7Ozm0MA
      NtI2fIrNcxiDetbWrhXu3Yw8P2kJ69JTmOKZx4qUr5venU5+/M4DcnIP3dXTp/42utPzcSg6
      UkDlQqWk4AhF9MO3V0M7bSid8PZxh8PHKlbhAE4c4zDuPO7T+S7t9MHgD8dz9JfWBtPKnW7G
      55m0ZB3pKVPwzFtBXcPcXU8oBVUTypEi6NfghHbGy/sX8H9fk1NpEJtUAGW2k6QviGLBvseI
      WRJVdQquzL5EJi5L56RNX5awl93EDvyy9X23nfV53B327yHjqh0oo6ysJmN10ZOxkwfwr00L
      WPa3S5QB9tJv2L4zrx591WajPaEvjcY9Yynztp+hDCi7lM7ipRm4h45lSHuAX9OhI3DyJEV2
      sJeeJ3/7Zvacr380nX0ex5397Mm4ih0oqyYxhsip9Du/loSVuVy1g730GB8krOV8ryieN9xt
      T22wRI3HM2sFcanH9BK17BLZafs4C/DrDughFWHHTun5fLZv3kPlkPYlTmRZ+kn0YbZTdtMO
      /JLbw9zLl34UkbHnhJ7TsjLsQPvQlxjtnsHSeds5oyeU9MVLyXAPZeyQmqqKuvld2Bg8bZ8w
      Z/Z2vim1A/amEEDFkpx/8BQ2lo/kvR1JjOtaS8XtM4QQPmNm6ACMRiOmoCns8ohheXTF6Bii
      lxPTO4+5FhPG/oP5c27DPXR/ZhGfJvTl2IIw/I1GAoLjOcAD9eqrNhstDa+ycU04t5IjGWA0
      4h+2kssj3mXjLH/ne0EbLFNn8eT3a3je1J9BkQtIb23iSY8GBGOIZnlMb/LmWjAZ+zO4Omcf
      CuPPm+fjffB1Qk16fvd2nkXymgju9vkP0LLnVNZ+EM59H08hyGTEGDSRD87ep0fdxsLUWU/y
      /ZrnMfUfROSCdFqbnqRySD5DQuCzmYQOMGI0mgiasguPmOXcHub2ocQvfpZb68bhbzQS+Mdt
      XNQTyqsb1xB+K5nIAUaM/mGsvDyCdzfOwr/NnV7WN54YehctJdxswmgMlM+hBbWRj+EEpREB
      CEojAhCURgQgKE2dfxwtLS39MfwQhHuCzACC0ogABKURAQhK0ygBnE6Jwmw2V/yzhDL5jS0c
      uuao2jArAbPZTEJWY3pzmTJjNifQBKaUx1G8lbgxwQSZf2o5PU1KlBlzU9wwLrISMJujSDld
      9XATzACDWWi1YrVa2Z2ykEGOjbw6cgopxY66L62RZkjAT6KvxqM/dJriZi0kefY75Hm9xid7
      rVitcTzxgzZZJJjNRN1519wlWQlmzFEpNOzqH4em3RPcoSfPzf2A139/ktWzkyl0nXgiDqvV
      StwPM1xvnoirabCE+nGJ89/CQ9268asW99qXe0ez7AkOCgvG/dsv2VvgPHQ6hagqJZCDC5lL
      mBxqqVI65dtcbcewuhDYOet2eeW69s4noOt3xtkMVsa+iMVsxmx5kYQ9lyv5VLW/oOAxxO04
      XWdfVanBhvPctUMpFeWE5UVik/5ORSVY3Sxz5zHX7wzOZqwk9kW9H8uLCeih6OfH6M4yy1V2
      1jBzlZ3NYMnkUD0fQcG8/EYaJ10fjmYlYDbPYidQuHqMM+47ZpVq21QqIRzXOJQSx5jgIKef
      sST9/Rp6yPrMMUu/mDFOX10zSWnBVt6YHEZwkLkilyn5jfvsGgAb+ZV9Cp3M6tyalvEvk7Uy
      tnleglv08MGXCxzMO1d9gyuf89acr+g4LYXdVit7//o+Lz/6NVlHAc8IkqzrifYCBi/E6iyv
      ap89DpC2szVD5yWzy7qbFSEOdi7bgOs7Sdue/yVyfh7ef9L7+2LtbAytv69XXzXaABy5Kxg/
      7WN+Hv4+X1it7E55mfbbZzB+yX7q/VeUA2nsbD2Uecm7sO5eQYhjJ8s25AKeRCRZWa87e7vs
      tFbn7KWt/CkygUK/BaTutbJ3+1ICzrxDdEyqXo48EYfVupDBgFf0emfcd8yq1bZJIsITwEHu
      ivFM+/jnhL//BVbrblJebs/2GeNZsr8UeII4q5WF+sWsd/qapF/Mdxeu8ejYt9n0hRWrdTeb
      XuvBkdUz+cvBxpTNDgo+iOGVj28yYul29lr38td3x+Jx87sa2l/gPAObaRXIrQ1tqGVPcMkN
      ruNGBw99T3ALt4foG7GIaFNDO+zHiAn+dG2r7wl+oF1bsN1w3ny5fLgskwfCXmfaEx30Pbsd
      evJcUO962K/NxhU+T97C9QExzHqmk/Pc08ycMZjrOzaRXt89wf1GMMG/K3ooD6CHUj8Z5W5c
      Q85DEUyf6MuvWkALt+5Exk2gy7F1fNaIz8pvc+VzkrdcZ0DMLJ7ppOe8w9MzmTH4Ojs2pVNX
      yA8/9QciXDHSig5Ph/FMRxtHCs42yqdVa7/BMDGesO5utKAFbp39edb0cA0X9Gbk1GeaSQCl
      JZQAbe+v4eNtzwCe6f0dm155lpdnJ/Fp7ilKGyP+2jh3gqM26NPHhwaXurXaKKTgMHTx9sKt
      0tEWj3ShCznkF/zggmbmHCeO2qBXd7wqH/bsQldsHDraBK+khQUcpgveXlUi5pEuXSAnnzpD
      tuWz5Y3JhDlLFbN5IusvNIVPXvTxudsdzA4uZK5sJgEcP8YhOtKze027dzwJW/k5O9a8wdDf
      /pMv/mcCQ4ZOJbVRK0fCvweX2Br/Cu+d8SNu7RfO0spZhv6IOHJXMGlOevPsCd718TZsvxlC
      oHdt7VrRtqsfz0W9yZptSbz0yGHeTz3Q9O483AdDR8jLy6fB8qrVhhfevaG4oLBKvV9aWEAx
      ffGpNQfNwcM81tMdjhyvWIUDKDzOEdzx7enZ+C68vOlNMQWFVSKmsKAY+vpQe8iF5OeUYw6P
      om+HVo33xYWvH7+nkLz8u3uVPnv0EFcffa6J9wRfLyJj0VQW/b0b0W+Oo0ZR719NzMoMiq7r
      yxKOmzdxUHlPsCc9fd3hwFdkXnPQuD3B3rzw0pNc2bKIFVmXKQMcpadI23O4Hn3VZqM9w8aF
      0TYzkYVpZ/U9wZczWJaYSdvgFxjk2hP8EFD0T4od4Ci9yNG0z8i8WP9oPHv64s4BvsrUV1yq
      2xPs9+LL9L2YwpL3D3HNAY7S43y0JIWLPcYywq8+vXnj0xeKrV/pK0iOMsocQPthjAtrS2bi
      QtLOlgFlXM5YRmJmW4JfGIRr3vfWL+Yr/WLKyhzAg3j8Bg58lck1h/OeWbKADcX1z0UV3IKI
      HPMb9r8/ny3HS/XcXM5h1/7qF2J+3fFhfvFNZlMIoGJJbmDYq3xcPpxln7xHRJdaKu6eAxnK
      58S/MBSz2UxgSCx7Okbz1viK0fEb/xbRvfJJCA3EHDSC9/JqNlcX7pYFpMT3oWBxBAPNZiyj
      3iBH+6969VWbjRZ+0/hwxShubZjIULOZgRFruBLyNh9ONznfC9wImvga/b9PJjIwiGcnLmJv
      6370f6gBwfiN563oXuQnhBJoDmJEdc4+GMrij+Lwyp3D6EA9v3975DVWJ46mfs//9gybuYCh
      t1KJHmjGPHQGaRcBWuA37UNWjLrFholDMZsHErHmCiFvf8h0U8V7QfthM1kw9Bap0QMxm4cy
      I+0i4MXI2X/gt18nEBoYxIjYDVwb8grhXRqQiyq0wHviKt4bdR+fxYYQaDYz7I/rOXffA9W2
      dntqKq8PLq17T7B8Di38J6Pw/wss/HtwmpQo5x8ra8IrmvVJEfWc3XT+H2hJ+vlBozGJAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Coverage and Premia' width='192'>
      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
      9WDzsGT6oOytbWdmRe6Q9xVFZsHUQjZVDX8yvP1QCyW5qVw0Po+0ZAeH6jsH3B8DCiDYt+Ud
      ao7V0+E9dx6R3+N4q4cf/Xkdy2YWM3fSSbcl6W4noYh+Vq3LSPCHVLzByCBfPylJdtLdzmEP
      w4619HK81cOVleX9m2jJThvfuO1i+oIRnl1dNeSz3mCEHzy6lq6+wfOGsKqz7XAzS2dGJ6F3
      XT2Ll949hPd9S5CGabJxfwOB8Oh5mN5X287MitM73bp8Tilrd9cNa9VMCMHbO2r55KXR46A3
      LpnMKxuPDGhkxoACSCy++pNkJjuwcu6GQKpm8PSqKh59YzdfvWkel84uHZSmIj+d2pazn2Sd
      DRurGlk0rWhQrGVJkrhqXgXv7Dh2xnG8phv8ecVevnDd7EEuFi2KzOevvYi6Ng/bY3iY1g2T
      B1/YyvSybP7vpW39HiTeY+WOY1wyq6TfSVVqsoNPLJvM42/u6ZfrSEMXP3x0La9tqh61pcmw
      qtPtDVGQdXpDx3S3E7fLzjOrq9i4v4GjTT30+kIxFaK5y8fUkmwy3FHHWSW5qVgVZYBD4Lgr
      gCRJ5BdVcN31H6O1vrr/el93OwcPHSLQ1023L0x9Q9OIyzja1MP9j60lyWHlh3dfQlFOaky7
      8ZkVueyvPXfzACEEm/Y3snhG7Ogv08tyqG3uwRsInzaft7bVMqU0m6Kc2JVFkWX+6RPzeW7N
      Adp6/APKf2ZVFZOLs7j1smnMm1zAX9/Z198iqprB2j11XDm3fIBpxoKpheiGyepdx3nob9t5
      6d3D/MONc/nW7YvYuL9x2MM2XzDCgy9upaN3cM9zvLWXktzUM/pMBfjyx+dQmpdGR2+AlTuP
      8du/bee7f1zF7prWflmEELyw9iALp500oJQkiRuWTOLVU3qBMWVUc+pHr6trwOpwEPD1sbvm
      MAsXjNwYrqXbyz/cMCc67BAm+hBxCCry03h9c/U5M7Zr7w1gUWTcTsuQZdy8bBK/emEr3/jU
      Apwx3ERWN/WwcX8D37tzCcZpls1cdoUvXjeL37y0jfs+sxi7VWHzwWZaurz82y0LMAyDq+eV
      8ZuXtvPu3noWTy9k/b4GZk/Iw6pIg+T73FUz+MWzW7j+4gnMm5Lf34PZrQqN7Z7Tum+EqK/T
      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
      is1WlCIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='126' name='First insights &amp; Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Float CLTV vs. Claims &amp; UnitEconomics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MotherSheet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Demografics' width='192'>
      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
      /xTzdjPBCQsTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='128' name='UE Overall' width='192'>
      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
      C8T/A61VCqJFYnjyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='86' name='UE Overall static' width='152'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Percentage of Total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Product Coverage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE per Education' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE per Employment' width='192'>
      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
      6v4fCQiPXUYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='128' name='UE per Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACACAYAAABdhGZrAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPaUlEQVR4nO3de1hU9b7H8fduAkExEXHLSHLRUMFQEUFANEqRoI2R9shJ7REvJ9J2B2mf
      TNs+7nD7HNt0dp5upyz1aJJuKk0jb9u7KaLAoFFc1Li1E/ACGBsYZ5rt+WMGGAQBY2yU9X09
      j88ja9ZavwWuz6zv+jHL729u3LhxAyEU6j5rH4AQ1iQBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIom
      ARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIp2
      f0crZGVl/RrHIYRV/ObGjRs3rH0QQliLlEBC0SQAQtEkAELROrwJbk/ppllMf6ew1fJhL27j
      kznuXdm1whSwJXENR+0iWLp6Gp7WPpw7qoI9Kz+E51YQ6XLTS2fWE5/tz9r5o02r7mHln3bw
      Y6t9uBKT1Mb2v0CXAmD0BG9mJTGx6ztSrgINmofjeLbhS3KKp+HZvRNwewIXNgfiDpAS6C5Q
      oNHg7R/IWH9XMnOKrX04imKBK4DomgI0Gm/8Y1XY6f1x3fUNZdM8cTO9ashL4ZUjXqxaNA47
      s63Kdi5nq8NLvDLJCajjwp6NbNr3HZcawH7QGGbMm0vIQJVx5Yo9rNylZsV8Ly7sfJ93953H
      97m1zB8NdRcOsvWzPZwtqUWHqvW2gOFKNp9/vJ3jhVfQYUtvj+EMcvIiNn4KxirEwJXsLXy0
      9TQltTpsnYcxaVY8MT69fpWfYFdIAKytQIPG259YFaDyw99lFTllT+JmSoBq2BhGbzjCWe04
      xjUloJisDBcm/skJgIq/v8u2hqm89MYL9LXRU52fxvtvbaZ3Uhy+Tds0ULzzXT6pfoxX3kxE
      bVp+seQKw2OXMdu9H3YqPdX5O3jnf7/iwVVPGkNYd4aNb3zKz9GLeSNBjZ1KT92321i13dD0
      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
      blICCUX7f+4d/Z2d4wTIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Income (bins)' width='192'>
      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
      989G7g/wH/w8mQzfL/HhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Policy' width='192'>
      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
    </thumbnail>
    <thumbnail height='170' name='UE per Policy_Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE per State' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='UE per State GrandTotal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3Qcx5mv/fT05DzIaZBB5EACTGISFShSkmUrOMi7a3ttae/ut+v9fO17
      zt09G+/dcL4Nvrt3vd7oLAfZki0rUiTFnJEIgsg5x8EkTJ7p6e8PUBIJgiZISiKXmOccnAM0
      uqurq+utqq56318JsizLJEiwRlHc6QwkSHAnSRhAgjVNwgASrGkSBpBgTZMwgHuYiYmJO52F
      u56EAdzDRCKRO52Fu56EASRY0yQMIMEHgywx23uWb//zP/CDt84TDIcZaT3IN/7PN3ijaYhb
      XW3yT1/gBz89iCsQ+2Dze5mEAST4QIj6XfzoWy9g2/wYn9hVS2Sum29+Zz+bPvFJdlfbV53O
      wtnv8NW/fh3X5b+lsJfJaQdR6fbXaxtf+iv++oVzVx0T//zP//zPbzvlBHclLpcLm832gacb
      dI7w5k++z0tvnWROSKY8T8mR736Xl08043DMMe+a5/zbb3GqZxz/3Cw+QzYllgD7f/oCL75x
      lJmoldLCNMR4hJHWw3zn+z/hWOsEVkuQV1/4IacvDTAy0EXIso6iTJHpER/5eRYOvvI6hsIS
      rBolE5cO8maLl6riZIbP7effvv8iTd0zZBaXYtWK1+R5sfcwX//Wz+nuH6avYxhdQSFZ+mjC
      AO5lPhwDCPDyP32dSO1n+OLjlTS/8A1GMx7mgU3F9F1s4+O/90d8bPtGCrIUNA7B//rjr1Jb
      YOPVf/87vMWf4PmnNtHxyr/Spa7DNneEf3qxh8/83m+zq8SCMqWMGvMsLd46/vCPv0RNhpmQ
      p5MXXmhm8+56ho6+zIh5A7U5eg59/19wZG0i3XGK753y8tv/7/Pkxzr41itd1DVUoVcKV+Va
      nZSHafESnqwn+JPff4pss4LD3/06yg+4dBLc6/gHOH22B3nuu3QdkFkYn6JkbA5Flh6FQoFS
      pUKlVKJUKlEoFKjUKpTiFOeOtBEYlek9KuKeniGvdJru+TOkNHyKwlQrasFKEjAviigUIiq1
      +qrKKajN1NfZeeFiD5EGiYEpBTs+mcfQoe/QfSnAP/5VL7Gwm2kpj2BIAu3Vo3tBIaIUFShE
      JWq1isiii9be+YQBJLhJ5DiqpHw+/ft/zOY8He+2syH3zK+4KI5gzuOzv/sHbC+2vnf0xLd+
      yqp9MQUl67buQPzrw7SdmmIq/T7Kcg20xQWKH/gsf/WF7Tf5IAICiY/gBDeLsYS67ACv7T+M
      Y2GBsYGLtPbO3eCibOrLZV7ff5TpBScTA5209UxQtHkn7pYjdI5OMTPUxbgnhiUjh6h3iPFx
      B75Q9KpUFEnlVGZO8vOXT1O+ZRNWEQpq6/Gce53TA9M4Zic439KG9zozRpa0bBbHB5hxuImp
      dGyqyUl8A9zLfDjfAGrKNtQRH7vAoVPNTHnVrG+oxKgWCEclCssqsOpUyPEoUcFAdVkhSlFJ
      aV09iulLHDrRyPiiguraKnJyiynPlDl64B06p+JU1q7DmlFMNqOcOtVEPKWUvCQVUUlPWUUh
      OrUGm0Fg1JnCx5/cjFUlYssppSpTwdFDh2jvHSeloJqCTCuiQrgm58mZRZiD/bx9vAdr0To2
      bdmMkIgHuHcZGhqisLDwTmfjI6f1tW/w8/NXDsnMbP/Us+ytzWW5WSQM4B5mrRrAzZD4Bkiw
      pkkYQII1TcIAEqxpEgaQ4EPBOd7Ej18+SSQWv9NZ+ZUkDCDBh8LiwiAnz3Zxl9f/xEpwgg+b
      OM7B8/zgxYMsBGXyN+7hmUc2o5pv48UDY6wrlTlxpANb7R6+9LHNOJpf4rCnmk/vKcc/eJ5X
      zrv49Gf34m4/xM/eOIMzJJC/+VF+fW89mtlG/vmwh6d2Z/DTX17kyc88TX6K/qZyl+gBEnzI
      SPhDep753T/kz/7oy4RO/Yg3Lo4RdU9y8uRxQhk7+PJzTzH86ot0BcN4xttp7Z8nBgSd4zS1
      9REB4sokPvm7/5M/+sqv4dr/bxwcCoBnnGNH3uHHLx7CWlCESXPz7XmiB0jw4SKL2KwKXvjW
      3zDlCjA5ssAGbxj0oDfmsa4kFdWsExUQlUGzYhpxtOooP/+Pv2fC7WFsYpxUdxyMEI4p2Pzk
      b7KjKOmWspcwgAQfClIoiKjVQGCSb/3dv5P93J/xfLmFY9/+W4ZvNrHwKD/4xosUfOEPeb5O
      y/6/+RPcl/9lSrGTn3lrlR8SQ6AEHyhR5icmmJ4a5vzpQco21aBWCogqgVgowNRgO2ea+4n+
      ihRMtlSCc6NMTEzQ2dWDLwwIICoVSCEfw5daaewd5YP6tk44w93DfFgRYdcnzmDTQfafuEhy
      3aM8/VAdWp2RdYXJNB07xkzEytatNWTk5JNt1RJXWykrz0Mry0ioKKxchz2/FGm0mfa+ObLL
      asjJzqKivJqiLDVtZ87i1WVRX1lKZkEZmSYIq5KpKrWzQhDYqkj4At3DJHyBbkxiCJRgTbNi
      DzAxMZEQVboH8Pl8GI3GO52Nu5rEEOgeJjEEujGJIVCCNc1NrQN0Hfkhvzw3xaNf+h/Upa9s
      O33Hf8zpcDVfeLga4dqotP9C+GjafxypYAMbyzK5xUmGex9ZItx8CH/zCO8PJVIw/vrjaEza
      5ScjTffiO3kB7UPPokkCOeTA//ZBwnNBNFsfxVCViSCAHJjDd+AdInN+lCUbMW6vQVRfUefk
      KNGuJhZPt4M6Gf3Dj6DJNl8T8XUjbsIAgrxz7DwWtcj+0z1UPVWx4sVSNEww8uHI2H2UhKf6
      6A1pSBrvIViYjlGd6CxXRoF6w0Oo65aqv+yfx/tOM6JwbXnJ0UUC57qIe0aIBUCtd+H75X4U
      9Xuw7VXh+/kr+OL7MJZr8B9uRFm/F0OahvDx1/BdTMKyMfe9tCIXjuGf1GP5jS8ihB2ExxeQ
      P0wDkB1tjC7m8htP5fDtQ004Hy0nTRvkyIs/gupHUXW8zljyfWwymtGHgPAcr/3wx5wfnkeO
      S+gKNvE7n/0YancnP3nxDSYWVex65tfZXZXFRNubHOzRUKIc5ESng8qHPsXH7ivC1XuWl147
      yrQ3St6GB3jmsZ3YtIqbfsibRo4xPuykpLKI0OAA7mAEo1rLeG8LQVMJJZlmZClCx8UWsss2
      ovYOcvREIwuSgW0PPkJJmoGZsS4iqnQcHUdYSN3MA+sMNJ05TveoC2NWCQ/cv51knUA8OMex
      g0cZdQQxphewccsG8lOMLAy1cOjUJWSLnV277yfLrLo7e1RBQBCVLHWRMtL8CEJSPgq96qrT
      ZDlOrOsM8dQaNOIUMiD7/MiWdLT5aShUAvqNFXj7RqB6E/q9+1CoRGRZRpWdTNjz7vJZjEjT
      YVy/PASmHFwjXWh2P4qpuuCWsr/KZi3G4OljiBU7KKzfjHn+AmNzXiDKSGcTR157iRankSJ7
      Ct7pXtr7Z0CTxhPPfYW//NOvsSVTxJhWhMLXx//5ux9Q8rHf4k+/+hRnv/P37L80h2e2n5NH
      Wyl48HP8P19o4OiPf8GcN0xETOHp577G//5fX0Nu/jmvNg7e0kPeLPFIkNFAlLz0LMozoHvC
      A4BWlBkYHgNkoouDjEyrUMouWi5NsOWxT/Nrj29k8NQRJgJxfAujNB49TNi+k921diLhGFnV
      O/j8l36T7YUqWpp7iIScHD1wFFvdXr7wpc9RpPMw5woRmOimeUrFJ379CzxWn8H50+fwR+9y
      v2KAmIfghQm0DdUolqkyxGe68Q8ZMG0v5r3OQaVE9jqRFsPI8tLzxf0BEEQUKhHkKLHeFnxd
      EfQVWZcvUqLeuAN9ZT223/8KKV9+HlNV9i1neVU9gBxxcq6pD/uuzxL1KUnTeWgfc9CQmwIx
      CXVWPc8/ex8GtciFriuuk2N0n3yFk64CvvZ8FcGel3AZy1ifm4JKl8a2dVpO9YySawZb/jry
      kvS4IxoUkkQ8rsCkXOSnP/hHJh1+pgfdVPqDt/ygN0PIP4t/UQQ5giYtiYVzw/gr0klKzyR0
      qYegXMFCTzfmsr0Ivm46Wi7SPzaMAIRjEtmeCDpZgbV4I1vL0hAAQSMy03qaI2/OEw4G0eU2
      4PcYiafkUWW3oBAE1Fo1ceLMTo4w2DbMRG8zxKMsiBnsjkpwNw/DZJnYwEWklGrU5uVdVYxQ
      80VU63Yie73EQ1Hi/kVIs6GryMH38+8Rj4BoNSIrMpeSi4UInX2H0IIe44O7UVp176UVaTqO
      v62F4IwDhUq71APcohGsygB8U8M0OlXYL77Edy/KeGQFfU3dfH77DlBpsRfmYVBf+5kYmLrI
      C6/18MRX/pAMnciUUoksSe9JZUejMZTKlT8v4745Xvj2j8l88r/zfH0uZ7/11zTd0iPePK7B
      NkadUYIH3gIg5A8yMr+ByrQ0ak3nuDAyiXvGxvbNeoQ5kdya+9mzb8NVanz9CzoyLFYEQQA5
      Rk/7BaS0Oj73YB6BuT5Otc4hy/JlfbLlaKja/XF2Va1eVflOI0d9BHud6O5rWOGJvMRdUaJN
      hwk3gTQ8gTzzFson96Gr3k5S9ZKqW7T7DIFZPRAl0nSYSLwYy8dKUYhXpqhEvXEfZpcLOfcR
      9KXJtzU0XJUBTA5dRJn/CP/ja08hCODuOsiffPM8w8Ed171GDs/y5g+/j7r2CbLEABOzMtbM
      DRSr/4N3mi6xMcXNqQkdjzxaCAMnrk1AEFArFIT8bsZ6ZjjWMoIh55afc9XIkpv+YSWPf/Zp
      CvRLJTt26SgDY1OUp+aTX1/C8Z8cJ7WhAYsCouZsBO8BLvUlk2dT4XTMYstdf23C8ThSNIRj
      ZpT+llbmYjlozSZEVzPtA5PYjRL9Q1NkpNWTmZvBueMt9FjUWBVBpt1RytcVoVUtWVg06CWI
      DrNWSTjgI6bUYtCorr3nR4ZMfL6fuCIble2KgJRokJg/jmhNwvS5z793OPjGPxOv+zS6jBCR
      vm5krRlF3IO/bRLt/Y/C4hT+gRCGB2xIjjkkQGGwIhrfd5ZWF5fiPXkYUb8DUfIRWxTQ1BTf
      9Lz+qpzhfAse0stryU+zIAgCWqMJtSKKNasUq0ZBRn4pmdbLU15yHENKLvkWgWGHH9k/z2B/
      H32zQcoqatjaUMJI6znahhZ58DOfY1NhEsgyelsO6/JTQQaF0kxpdTmlBSn0t7YyHU1m19Zy
      UrPzsScbP9yP4LAPtyaZdVnW9wpTrTUgyzJJNjOiLgVF2ElOSTk2vRpRqceeZWO8t5OB0Vl0
      qUXkZ5hQCDI6oxWjTgWCgM1mZnakh4EpL1nrKslNsZKSnkl+toWBSxcZnvWj1ysxJOeQl59H
      bhJ0tV1i3OEj3V5IqlWH4nJTtzjRwYDPQJZVzexQN/OSgRTz8inHj9YZLj4/g1hcg8p4RZu6
      OEGgy4XKnnL1O4vHUSTnIGoF5MA8odYLRGYCaHc8hCbTAOEQ8YVJIv1DREdGiY6MEtemo059
      f1VbYU1HnaIk2NhCdD6IqqwcpVF903UjsRJ8Jwn76O4bQDRY0QgR2ts6qNzxKIUp11bmWyGx
      EnxjEgExdxKVljSLlva+PqKoKdvyEPnJH0zlT7A61nwPIMsy8fh/gSnGW2BoeBh7bu6NT1zD
      rPkeIB6PEw6H73Q2PhTCkSgzTteNT1zD3MUTywkSfPgkDCDBmmbND4GuQY4w2HScMz0zGDPW
      8eDuzZgEPxdPncFYu5Ni25XCHQFO/+QHXAwaMKkUaMzJ1G3eRkmGCSHo5FTLMBu2bUAnS/Q0
      HqC1301K8Qa21+XQfe4desZjFG/ezqbSzERLdIdIGMBy/DP0eKw8/ez9zLQepn82SJFiAp/B
      TqVFfc3pal0aDz/+FMX6KO7ZAc41nsP84INk6K1s3lyLEplIMMCkw8e2vU+SZVEScs/hkkzs
      e3IbZp0aQY4TjUaR4iAqlaiUIrIcR5JkBOLE4qBWKZHjEtFoDFlQoFar3lsXSHDrJAxgOZEw
      kt6EXqVCp1cx7nUw5prDaLZyoa2TwnXrSF5hwUUQVdiyyinLmWBwbIH07Agvnhjk1x+p5dK5
      k3T0DjPlfQt7fjaRmXH6puZwLARYV7+ZXOUMrZeG8YbCiIZsHnhoO6rQAM2nFxBVDhzKHB5u
      KGKkq5n+cSeRuERO2U4aqjJRJ2zgtkgYwHJMSVg8bQzNWHBMBVDbHAR0ahZnXGTYRBrb+9m3
      tYLrOaDobEmI7hDyu4MapZn1Ox5kMRKkcuczpBkg5CrG1DvI+o1b0IkRmg+0kFu/jQwtzHWe
      pXnYw9b0KONjk9Tv28XmnBT8s/04wma27V6PGPPT3NjEfP5jZJsSoTq3Q8IAlqNKpmFjPmcb
      2zBk5yNKCpI0AZT2cqryZIZODCLDdZfcQx43MXUOAqsNCnIy3D0O4Rj9AAqR/DxAUGEvqaLI
      nopKAL9rnMHeGTyuqaVsmtPRCmt6CecDIWEAK2BILeKhfXYGLpwjlt2AbvESjmAEKSaAYuWA
      HFmOE1qcY2wqTN62FAR+1b65V2IiLTeJrG17KE7SIEVDxFAjhWYRRfG9jkZjSCIj38ru+9ej
      FSEcCqFUJ17f7ZIowRWJ4xnrZCSayf0ZeqLqTHrONPHWiIgtv+aqM6NhF+cPv0W/RgAZsiu3
      kmsRwbvaexkoLs3g7LH99Om0KFVqSuq2kb5MJdaamo+t9zgH9s+gViowpmRTV1NFZKKLuXgW
      FQVJzA+141DZKbXbErNKq2TNu0JIkrTCSrBMLBwiKqjQqZVLrbt/kWAUDCYTauW7vUCc4KIX
      fzgGggKNzoBBp16anYnHWAxGMeq1gEwoGECtNSIqIC5JRKJR1BotCgHkeIyAb5FgJI5SrcVk
      1CMQJRwW0OpUS/eSZaRoCK8vgCQL6Awm9Bol0bCfiKzBqFMRCfqIChr02qVrhkZGMSbdunDs
      WiBhACsawL1BwgBuTKKnTLCmWbEHmJycXDPSiLIsI0nSnc7Gh4LP70epvnbxLsH7rGgA96p7
      8FpjeHiYgoJbkwtZK6w4C6RQJEZG9wKCICTe5Q1Y/TSoHGWovYm+CSdKcw7rN1SQbFihe435
      6W5pRle6E7vRR+vpNrLrGsiy6PA7hmhs7gZTIZu3lXNz+/m9T1yK0nHmJMaKTRQmf1jqxyGG
      O/qQk/PIz7QkPpauhxwnNtpFeGThCmlEI9otNSi1ywP1ZeLuGcL9YygrNqMygBz1E+7oIOYJ
      I2YWoCnOQSEKyOFFwp1dxBbDKNIL0BZno1BeKY0oIU2PEBqYANGAuqISpU130zHBq3qvcjxA
      x5vf43sHuhDNSciOKcbc15nojrg48uK/0zwNUtTFGz/5Gf3zPsDLge9/i+ZpGZvVcFtam/FY
      hKM/+wFtU+4bn3yr93CPcaKlh87OTsKxNT1RdkMEnRExKWnpx6gk3NVFPHztSrgsRQk1N+E/
      +RYRF8hSkNCxA4RmwohWC9H2E/jaRpCjbvwHDhHxKRAtRmJtxwkMLlyVVmykncVTHQgmKwpV
      mHDfGLfyllanCzR2if94vYff/frfU2p818Zkgq5xGs+1Mu0OYc4sZuvmOq7UIFCqMnj82SdI
      tyrpOvcWB870krKthKlpF8XlmYxfOEXbwCymnEq21Fdg0Qa5dKIJTekGpIEWvLZSTP4ewoZs
      vKNdzPq03LdvD9k6NQ986vOoM8wgBem/0MjFoWlklZmKhq2U59hQ3JaTmMRk/zgFG+qITI7i
      DUbQmTQsTA0T1WWQbtNBPMbE2DDWzEJUoTk6O/vxxrWU19SRYVbjdkwSU1rxjV/CYyymOkvL
      YG8XE/M+tElZVFeWYlQLyJFFOtsvMecJo7NlUFycT6pZi29umItdo2BIoaKqApvuLvX5ERSI
      6fmI6Ut/xkbbUBaVoDSuIIw71kwkmo2ucGzpUMhP2Cti2LMFlUmN2ibj7ZiE2mz0ez6GQqsC
      ZNQaF95ZF5SmAhKxwQ68r7+FnFqFNDOPsmoDRvutTfeuqgeYm+4haKugxHDl0Tiu2RkkXRoV
      FUWMn/gpL53o4cr5lHgswjuv/Ije+SCpOXZSjEayC8spKUhh+uSP+c6BfjJKylhofpn/fK2R
      OF7O/OJF3njjDX769hlmXH5a3vwWPzzQhiWnEHH0AN97u5uIFOXMqz+jdcIFYRfjCxJ56ypI
      ksf5t2+9hC9ye7M6cjTEiCdGflYmReY4Q44AAAHnJJ0Dk0sqaMEZOi5OEIn6aGu9iGjLJNsq
      0XTsPAsRmfnJHtpOHqHDoSLZoiPocbIYV2HPz0PlH6O5fYxY1MeFE+8wETGSV5DL4mgnw3OL
      RJwjnL00SYo9F5Ps4Mz5S4T+K/RC8RCRzj5UlbUI4tUtkOydJNDqwbCrFsW7za7WiCYJgh39
      RKenCHUPo8y2g6haqvxynLhzhkCPC21+6uWLBBQ2K4Lahra2EnVxIUqzjltlVQYgSREUiuUu
      wCJp9gI04Wlamttw+hYZHplGWuk9KcT3DCCnqJySLAVH9p+n9vFPs31DHfse2cXwiaPMAfFo
      BBeZfPkP/ycf37YOpcrIuuo6aqrrqMg3sTDrutrNTJ/GuhwNg+0t9I86mR0ZZuE2pzXDQReB
      sBKryUhOcToTPeOEgYzsHFyz08QA98AFKKhFHRyjr2eG8aE++keduB2djM1HIBLApS3g0fs3
      kJNkQJ+UjFkI09/bw/iUg7n5WXwuJ9NiKrs3V1NUWERmqgEhLjM9NMzs/BQDPT2MTy/QPzJE
      YIUhxd2FjDR1iUisEG3O8rG4TOjCBcTKDaj07w86BEFEmZGFPNWJ//gJoiEDyiQTICDLEtGe
      83gPnEKsuR+t3fb+feYmic3PE+68ROhSF1Gn/5ZzvaohkNlqR/K14JbA9u4VsQAnfvafnJOq
      eHr3A0xq3Zz0rfKukkQwCpmXu3VRVKIIhQkBgkpLWXUNSfrVKZ0t9p/gmz86x55PPU1dbJLu
      0ZOrzMT18Y2109Y5wNj0MIIcJRAxMumppNCSRmG8hZ4FJ84hFbWP2ZDnB9GmFFK7vgSVAIK4
      GYtNxcSChdKCrMvSiBLD7U0M+83U1G0g6BylYzRCLCaj06iXDddkIuEoKbll1BakAbBBqcOi
      u7vdtuRYiNClKTR1O1doVR2EzrYT04wQPCQgTfYhd34b9t1HbHAc/cOfQGlSEZ/sxH2+Da19
      F9JgI/7eKPq9j6Gy6a8wKAViVhma0ouQV4Eux4RgM91yvlfVA6Tk17DTOs333mzDG5FwDg8x
      5nQxO+0ibV05BRlG5qdmf+X+r1ehS2JTdQpNx5vxRGJ0X2hELK0iiyU3Y1EUV/0173fOsqhK
      o6a8ADE8j9O76lxchyDD/T4ef/73eP6553ju+d/hsc0pTIzNIyv0VNVn0Pb2ORwpWWSpBTTm
      TBTBKaJqCxlpySgiHoIRBQggvKv8Kcu4fSHSsnLJSDURcs7ji4HGoCEwO8WUO4IU8TE95SCG
      grQMC47peTS2NNKSTISDfqT43T0Ekr2TxIJG1OmWFf6biu0P/ojU//5lUr78e5i3r8P0a19C
      X5CE7PMQ8wRBkIk7ZpAlBYTm8DXPY9i7A/VVlR9AQGFOQldRRmxkBEVqBqIQJDI0eUt7B69K
      GlGhNlLW0IC75TVefu0A7RMhSqqrKM/Wc2r/a5zrdVFQlInalENNcRLTwyMkV+0izywxNjSA
      vWozWRaB8b5J0qsbyE3Wk1lai9R/mJd+8SazujJ+49OPkmaQmeqfwFq+kcKUJXfIudFeNPb1
      rMuyEJwbYk5VSH1pKnPDQ9jK11NVXEho8BS/eOscQnIBJp2a2voaTNcR3b0Rsm+OLo+e9aWZ
      KC+XvFJU4HQHyUxPQWVKZaarheyqDWRa9YgqA6mmGI0njnK2tYuwLoMCewqxoBtRm4zNrAEE
      zDpoO3uMc5dG0aVlYzMYyS0owG6ROHbwIE2d44haJZb0PAoL8rHFZ3jn4FEu9IygTc4lO9WM
      eNk3er7rKI3zRgpStAxdOMVw0ECm7dpJ5Y9OGlEm2n8Bwb4ZdYr2/VghRzee4+OoSq6OeY47
      JiCtHKVVhzrVSPDEAXzHzhET0jDt2owYcRO62EywsYlAYyOBxkZiinQ02db30lAkZ6CUZ/G+
      +hbBjnHEglJUScuN5caseWe4O0okwOj0AimZWeiEEEfefI3MhsepzLn1Lv1KEtKIN+buHlje
      64giisUxXjl6kDAaKrc8yLqsxLamHyWJHuAeJtED3Jg13wPcy/EAgVCYkZnZO52Nu5qEi0uC
      NU3CABKsadb8EOga5DiOkTaOnuklqXwTO+uKUBJl7GIrUsF6Cq1XesCGaD/0Bi1TQVRKNSl5
      pWzeUIlVr7paGhGZ6b4mzrYOYcyvY2d9ITM952m8NEteQ0Ia8U6SMIDlhGdp6fLz0NOfYOrc
      YXrm7RSKUwwFtWwzLV+djhP2K9j+1G9QpA0x3tPIiePN7HpwC1ZdEtu3LzloxaNh+oYn2Lzv
      k+RYlYTcs/TPhtn39NOYtYmqfydJGMByAj7C1lRsWh2hZB29Thda/xgp6cW4XS7MFgsa1bUr
      1QqVlryq+/B7DzIw6aU+LcxbLRM8uqWQxiNHaL7YQ/90iNxCO5HpMfqn55madlG2eQdVKVEu
      NLYw6gyRVrSeXRvLiAdH6e4MoVdO0uU2sXdbNZ6xDs609hFS6Nm442GKMgyIt+X1miBhAMvR
      GVB7hnCFQ7icQTSmWeYkHYHuZsZQoMuuYHddwcrSiIISW0YqHrcXOVmB0+sDlYWND+wjKEtU
      7vzkZWnEeZLfk0aUuHTiCBkb97DNAv1njtAymUutJUB/ezs5GxvYt6sAyTXGgENk3zOfQRma
      4djx01h3P0SaPtGD3A4JA1iONp36dVMcevkXmHOLSZLBZoii1DfQUACvnxkHrh9nGwsGkUQR
      Vh2e4aSntQvv6AznWIp2y00NgEVBUnYpG6oL0IkKpheG6WruY3iwAwGIa61URiRIGMBtkTCA
      5QgiqcUNfKq4nume88yqctDHevHFVShEGUGWr68NKoeYnXSStD4ZBY5V3lCFLXK56QQAACAA
      SURBVKuA7U98jEzt+6n6vU50BgNKcamCK5QGiurvZ/d9pYlhzwdIwgBWRCY030fnnIFt221E
      55Lobe+kbVGJznr1nreSFGR8sBdJE2NhYohoRgN1qRpYXO29LOTmCJw/eZYyexKRgBtdVg1Z
      y3zbrKk5RNrP0HwxhkUL/lCMotIaVOE5/LKJNJsev3MGv8JCqvXmY2PXKqvyBr2XuZ4uUDgY
      xZaVhVWnQq0zY1RF8cR0VJYVoVMrL1cwAaVaSWBxkUhUJqWgitridJQKAQQRg9FEktm4tLm4
      3oTFYkUlgqAQ0en1GA0GFIKANT0Hg+xnwRtAbVryJlWJKvQGI0ajBgFQagzYs5LwLCwQiMRJ
      txeTYlYT8s7ji+mwGjUE3HP4ZB1mw9I1LrcHte7Wo6XWAmveF+hedoVISCPemMQXVII1zYrf
      AC6X656VC1xOPB4nFrvb421vDSkWJeS/9XjZtcCKBqBSqdaUophGo7nxSf8FWVxcJCMl+U5n
      465mRQMwGhNBGfcCCwsLWCwrxegmeJdVTYPGY2GcCwugsZFk1aEgjs/lRNJYsKxSvWF1fFjp
      3goSPrcXWWPAqLt2V8gEl5FlgsEQ3qB0xdKfAqtVh/aKBQuv10fgCr0ChUpJklEDUgyPP0JU
      klGqVVgMapQKAUGWkaQYiwEJo1l7bUWVZSLhCK5AFAQFJqMWnWrl7at+FasygNBMF3/1p38B
      xR/nD776OdK1ft761//F7Mav8uWHP0j14Q8r3VsgMMErLx7CuG49j95fj2btjAhvEpm56VnO
      DnmRAFmK0TMW4tnPNFBpft9ztr9niB7P0u/RSJgJv4rfeqyCuaER2qdCxBUQCcXILS/iwSIz
      wUU3R5oHudAHn/vtBnKX3dXndnKsdQKXJKCQZVKys9lVlcJyPbobsfqFMGsdpZZxmruneGy9
      +Yrnlwn7XEzOOogJGjKyszGrwoxPekjNykSrFPAvTLEoWEg2wvz0LL5wDFFjJDs7A61SQSzs
      Y25mFl/Ej9O/tC+BLMVwO6ZxeALIgoqULDs2g+ojaoll5odHSKltQPA68IWiaPQqgn4PcdGA
      XqsEOY5v0YPGYEERC7Kw4CaKiC0lFYNaJBz0EVdoiC46CKuspBhFPC4ni8EoSo2B5GQbalFA
      liI4HQ4CEQmlxoDFakavFokEvDicXlDpSEpORqu8S/sgQUFeUT55RUt/Li440Brc5Oqu7sHr
      N9VQD4DM7PAgp11WrDolxuI8SspVqJUCrolJXh5w8mCRloERH0WVdhaviWiTCSwGONU6iM+Q
      yVa7CbNZi0EpcitjhtUbgKBm6+YKXmts4ZH1u987HPHN8uoLLzCnTkLrn8Vr3cIXn87nG3/9
      f/nUH/4VDXnwzrf/jvGa3+UzpQvsP3gJUR1npLObdc98jWe35ND06n/wRo/EuqJUxhYCZAIR
      v5vTh19nPqwnNNPLXNIuvvzFvSR9FCMjKczQTJjiKjuRrhkmPCGS9SqmepqZVJawoyYXKeLi
      7NHz1D2wi9mOU0x6BeJRH7K+mPvvr2FqoAWHU2bS4SGvdiv6cIDWi51EJJFIOERG6TYa1pkZ
      vXCSxvEwVr2ShTkXJfc9QH0mNJ5rIxCTiYQCGLJr2b6+ENVd3wvFGR+ZJjmnGIPqOgYbDdA0
      EGLDtmTUCgG1TgOyTMjvp33EhT0jG1BTXWMHfPRc4/chs+haoH14kZRCE+2DAfJL7GzIvNm2
      f4mbKtLM6k2UuNo5OR5679h873HODgtUV9dSt6WW2aa3GHBlsqlIzaWRKWLzA7ROG9i6sQBr
      ZjkP3L+V2tp6NhbrOH+ui2C0n1cPjfH4r/03PvfZp6i1L2m/qAwWNm1/mPr1NTRsr8HZeowP
      UQz6KiJBL96oTIrFRmGhlYG+JTnEzBw7C7NTxJEJjF0klFaNLjbN6GScnLw8iopLUTgvMjwf
      haCLvgUVex97jIaiVHTWdCrKKykqKiQnzcz85Dh+9zwdCwJ79z7Cnj17qMozgyQzOzCEV6En
      L7+AotxMxkd68Yfu9qlamYjHQbtTz/o87coVS5aZHJkhkppGrv7dih3gzTea+b+vXsKhtlCZ
      aeT6uzADCBjMRtJMOvKzkym1J5FhvHWPnpu6UlCnc/+eQr775hnSL7+P4MwEkz4Pk6OjaES4
      74mPkWNRYlhfwgsdfUyrFwlk1lCRLDJ++i2+dWiMyopCYothJIWE7J7GJRhItpoRhMX3vIz9
      jm5+8O8vYy0vx6ZzI0sxPipxtOB8LxdaOplyOFBKXmY9ycxvXkdmcjpWdyeT4SDz3V5Kd+cg
      u88x41zEMDuDAjDZK0nTg0djo7a6DINWiSDHmRvpoKl3HrPZQHjRhTeuJhyMY7KY0WuUCAII
      CgGI4/Us4F2IMyMsrcXk5RegvV6LercQj9Pd7yCjxI71OtLccSlG16SPimr7FQai57GPNbA3
      GmWgd5T97dP81vZcrm8EMkF/hEAsSP+Yi4hZhWwwknWLUko3bTqpFXtJO/o3dI67yd8KBnsh
      VuEi63c+QlmaDrfLgUqtwFbRgOLt/exHoLLhGXRA36UmUuu/wNN7Cuh9c4jmYQEsmdhibqYc
      LoqMUXzBpakCz0QXc+pivvjUU+A8R9PB4Vt7wpsmymjPBLt+47eoSV1SlxtsOcjImJOMdTY2
      rTfx1jstYLDztFEgLKWTZFqgvH4r6XoR36ILUaPCoxAQhcuzEnKcyXkPRdVbKLMbmOhuomkE
      VFoFvgUnnmCMJI2E1+tHmaYgKdmMMqhl47Z6tERxL4ZQ3uXrMuGAjwGvwM4qw3XP8TkmWRDT
      2G5bGsfGYzEcniAGswG9SkVWsh7v6CISv6piKkjNzuDhWjdNi3p2NeSgjsdY8ASxWHQ3XaFv
      2gBEjYVNZfm8cbSNfCClZCdP1nTwzb/5M6xmM9llDTyxbw/Z6QWst0zzw0tW/viJDABKqht4
      44Vv8rc9tRRo3UvTZupCHn8kn5e++RecX1eC3xkiFbBmV2D1/Ct/9/9NUF6bRvQjav5l3xR9
      vnT25BjRXa5z6Vl2JsbHkYqTMOSvx//Kd8h59DMoBNAYsyjN7eLtn72AhEhafjnb7ku5OlFB
      QXaKkUNHX+G8Uk+yRYskpKI2p1KdpeTVn3wfVAbUiiglxQLJBVXkjL/Dj7/XjkKlIbusgfvr
      TbzrgjffdZQOqthdnsTQhdO4rRVsKFx2z48UmZmxCVRpdmxXTpe5ZnmpO8be+7IxSSFaLnoo
      31qF7nIPIcclRgZGaBr3EZRArdFQX1WEGFzklVN9DLkCTIz6ufTTRbIz7Ty70867rn15hXam
      W/r5l5cnUCiUVFYXsesWDGBVznBXniIIcOUVAiuHflxzniCw4q2Wn/irs7tiINYHyXt5FIT3
      OuH38y0gCDLvn7KU92tz/36pCMLS7ys+ohTF5fVjMFtQCVHOHnoTU/kD1ORZVjxfuPzw7+bn
      yrIXViiYj04Ya1mZvHf4ctkIwntxFFe+w5v2w7zinaxY7lf+f5WsymCWF+7ysr7eTa8573q1
      98Ou1TfBSnm8+tgyI7xuof+Ka95FjjLb28j57nEklKQX1VKdYbr++Svk5+4ouevk98qyWaGc
      rlsfVnXLm6/sKyaz1t2h72US0og3Zs1HhEmSRDR6u3sK3J2EIhGmF5x3Oht3NWveAODe3Rg8
      HpcJ36PG/UFxd8+tJUjwIZPoAVYgsDDM+eYBbOvWU1uQgoDEwvAA4dRCsoxX+mJEGWlrpGvK
      g6BQk5q/jpqSHNSiAsJe2rqnKKstRQt4ZgZo6xhGk1HC+opcfJO9tHVPk15WS0VeSqIlukMk
      yn05USctjUNkV5YR6mtk0C0R8c7TMeHGdI0zTpS54QnSqjZRX1eGMNvO4fN9hCQZVHqKiuyo
      gLgUobOjg5TiGsoLMpD9Tlq6hymqqiU/zXyXzOSsTRI9wHIWF3Cas9mRY2fa1UffjAdNbBCb
      vQKj+tp9xwRBhcWWQpoJ0tJSaDl8gL7ZXGqSIvSMLdCwLpULp0/T0tFPkktgIS+LyMw4/ZOz
      eHxQvH4jVVlqulubGXJEsFc0UF+cRjg0x+QEGBWTXJwR2bGxEsk5zOmmTkJKK/ft3EFKQhTr
      tkkYwHLUGsTgHMFYlFAwiooZxhc1RMaO8KNzAqX122goTlt5DluhJcOeysick7hRoGd4koaK
      fMo2bGbe46J060Okm5WE7BmI1mGq6xow6dUMthxHSq/igXKZrrNnaDc/RpHGSee5LjR5edTV
      lhFfnKa5d4667btR+sc5e/QM9z28DZs60X/cDgkDWI4hnTJTL6/89CV0tkyyUsPoTFE86vU8
      s0XB/pZRGorTrnu5IIqXV7bfrZgKNFodavWSzo9OC4JOh0ajwWA0oBHd9F7oxmWZp0eAmG8e
      Y/oCRUUykjqVzZtqsWiUzA6MMtjRzeTkKALgDUZxL27Clqy+bl4S3JiEASxH0FC08UHy6yWc
      411MBFMwK0aJqMxo9HFESSIOrLgJqxxlYXIOQ3EVAqv13Y6hsxaz6RMPkXrZ41NQiIR8XlLS
      M9Crl15RPK4gb/1OtjcUXpZGFBDFxBDodkmU4AoICgEx6qRnOEBuUSYGnQ6PYwb3ghO0mmWF
      thS7Gg37GGg5wUjcTkmG4SY+bG0kWZx09k4Tl+N450cYd7wfb/FuQiZrCgtjXSwEoshSmPHR
      AbyhJYeydzfRjl/+PbG0v3oS0ogrSiPKuCYnUGQUYrfq0ButxOZ7OT/gpb5hAxb9u6GZMj7n
      JBeaW+juG0WRUcmujaXolALEJfwxAXt6MiATDodJSstGowQ5Hicmg82WhCgoSMvOwTPYwqmm
      dhxhI2XrclAJMWKSluQUIwpArbeRmyRw9sQJLnaPYMouJSdVx/xgC/0ONVkpBmZ6GhlY1JKR
      ZEhII66SNe8LlJBGXNskhkAJ1jSJj2Bu0y33LkYQQCmu+Lme4DJr3gBEUUR3j46TdRoNOal3
      MlLs7icxBEqwpll9DyD5Obv/l7SNONFnVbLnoW1kmu9NUdkl/LQfP4+UU01NUerK8/4JQI4z
      PDDC6QEv7wu36Nh9fxF5uiurl0zA7eKdlgk8spK6qgIqM3QQCXCmdYQhT4yS0gI25plQCuCZ
      HOeV9oXL1ypZ31BMbeoV2j+yxNz4DIe655GVWhrqCliXvHyK+sasThs07OTt//wH2ow7+cwn
      djF5/pf84z+P8tWvfJ70e9QfJTo7yMW5EEmRLtbl7ry+0NOaRyDLns2+tAxkQAoFeLt1CuWy
      EAu/Y55ftsxRv74QqxDDF40RiYQ4dbIXwZ7L3lIFJ8/0ckouZVe+gbGhGbIqK9lgWbqHXn/1
      ivfY4Cgnx+Ps2liCMhJkwuEjnKzhZgezqzIA5/AFftEJf/mPD5GhEShIeYaetv/NW62P8NQ6
      B/uPzrNrayaHX21lx/OfxDTeyo9+eZyIJo1HPvUslRk65PACx998nca+OTIKKsgrLmb7+jKE
      wCQv/fBFRhdFGvY8w46aHHwDZ9nf7qM4yc3p5glyNz/CJ7aXL2099JEgMTE0T1F1KeHhITzB
      MAaVlqnBS4SNBeSnG5GlKH3d7aQX1qL2j3HqTAtOycCWXbspSNYxN9lPVJ2Gq/sEDtsGdhTr
      aWs8S9+EC0NGMTu2bcKmFYiHnZw5eoKxhSDGtALWb6jEnmzENdbOsbNdYMnmvu33kX4b4k8f
      KoKARqtBc7lxnl90YExKJkV3dZ/ZP+Ygp9hOWdr7yuMBtxufxsCDBUmYVALbK1PYP+FiV76S
      Ga+e0iw9Kdc8dpyx3mF+cLyfmMGGx+Oloq6E+0tvTRhoVc230zGCwlpC+mUjFLTpVBaYGR0c
      xeMd5eThw7z+8ms4NRYCI+f5hx+cYd9v/g7PPpzDj77xL4w6vLzz/X/m5EI6v/k7/40ifytv
      tkwQ9gzzL3/5t1D3NF/63GO0vvB13m6bwDfTy6EDh4nn7+SZves5/NKPmQt/dMpo8XCQYV+U
      /IwsSlNleqaWdrwTY0F6B8dAlon5RhgYjiLEPbS0DVKx/REe215C17FjTAVkPHNDNB05hMNc
      w8bSdEKBEOb8ap548kmq0yI0N/cRCbs4eeAQYsEWPv7kE6RJ00w5gwSmejk/HOX+x59ga7GB
      M6ca8Uf/C0StSWE6+lyUl2WiXtZYORZcDPaP8M2XzvIPLzXydo8TSVAQDYVwhyRkWUYpiniC
      EYjFkVUhfvbzM3z9Z+f43tEBpv3vvn+B7KIsarLS+OzjG/jC3mrus19fi+hGrLJZiV+jjKBQ
      KJAvL7sHvX4q9n2FreVp9Bz8J/p7OvjuP/wtshShezbK/OwcLd2zbP/yRtIsFqZ0IrIXnBP9
      tAQy+dfNeeiIcd96GwdaRqgrBUPGOioK0mF0GlUsRPgjXK8LhxaIhLWYjFr0hVmcOTVOsCyV
      5IxMfD2DRCjH2X8JbfHDiP5+LrVcond0yUktEAyQ6dyNSYqjyq5lV23ukiSMyYC/4yQ/e2ea
      cCiEPrcBn0tH0GJna3E6alHAYNQSkuPMTgwzdGmQif42kCJMx5PZFW7AoLqbHd9kPNPTTOvS
      2Ga5VqY8KkF+SQG7Ck1EF9389Ow43sxS1mdqef1gEwFJIFWvYlFhBqWePXvq2QNI0QgXm7o4
      PujhMzXJQJzxvlFOD8zQ5g1hEJVUN5Sxp8i8Qp5uzKoMICmlEMlzAkcUUtUgh2e4NOCl6PFC
      NCygS82nzJ6EyJL8naVqL3/xp596rxAi3jn2S9INhzB3y6K0u7+ZjiEnE98bAECSREYc1ZQn
      p1OjPc+F8WlcYxa2fMIIswL22gfY80gtmiseb8BlINeacln3SKKr5RxeUzmf+81HCcz3c7J1
      7r1WbzlxSUXV7k+woyL7o3rk2yYejXB+0MeG6kxWMtMki4FFGURBQKE3kGpUEZMFiipK+J2K
      EgBmR8c4Ma9ElpfqgkIhIKpUFGQYaFt4111FQV55KU+5g0SyS9mee3tT2KsaAtnyang0P8i3
      f36aWZeL1kO/pEes5qGatGssPatoPerRdzjUOcOi10Vb20W8YSjNMXDubDdOj4Ph0SXJ66Sc
      Eur107x2fgzH3AhnLjipr8+/rQe6XWR5kaFh+PgXv8Rzzz3Hc889xyOb7cyOzxJHTeGGfLrf
      Pk0kMwObQkBjyiTmuET/xALBgJfRgQ7mfct1e2RisTgajYqQz0H3hTbmw6A16onNTdA/7cHv
      mWd4ZJooCjKykxhtv8CEO4Df66Crb4hI7P3GIR6LEInFQZaRohGi0p0eHsn4F1144gayr9gT
      gHiccHTJe7Yo20Zv1yjji2Hm5xw4giJGjcD4lJPZxTA+r5vTPS5K7MlEvW7eOj/IqCuM17vI
      yW4XOSnvVnQBQRDIy0qi49IQk4tRvJ5FOoYWCN5CzlflDKdQGSjfshWp7xj73znJvKaUL3z+
      SbJNKuKxMGHJRGVlAWqlAn1yLlsq0jj6xqucbulEk1pMaXEeldVlTF84ztHWcQyKRRz6Eh7c
      sp7NW2voPPgzjjb10/Dk8zxYlwORAFF1MpWluYhSlGBUoKyqHP1H4f4bcDNJElW5ye+1DmqN
      llA4QmqyDaUxjcjCKDllNaQYNYgqA7mZRjobz9DaOYQyqYjCbAuyFEFjsGI2qEEQSLYZGGpv
      pLVvlrSSCrKTzKRl2SnKNtB68jjtgw4MJg2mFDv5hYXkmsOcOX6S7uE5UuwlZCTpUVwehjr7
      z9HuMpKbrGG8s5mJiJF067UtocvlwmazffhlBrhmnBhzc8gxXtGjeRy81blITrYJq8VCsTnG
      wTOD9HoUPHxfEek6BRGvm0ONQ7SO+6mrL6UmXYtSqyVdHeVI4yDNwx7sZUVsLzAjXjEMN1rM
      FJsk9p8d4NKUH3tBBpkG5U2Hl340znDRIF3tF5CTcklW+nn1e9/FuPu3eHZbIR/ZxM7dSMRH
      39A4hqQ0tEKI8yfPULLtMUrS9Te+dhUkhLFuzEcztyaqsBkUHD7yOgtBmZIHvsDurWu88gMo
      NVhVERrPHCeCmtKND1OY9sFU/gSrY827Q8uyfNd8fH/QDA0Pk5uXd6ezcVdzl66ufHTE4/F7
      Nh4gFI4w5Vi48YlrmHvTjyFBglWSMIAEa5o1PwS6BjnKWPtZTrWPYc6tYve2OvRCkO5z59FU
      bqXIeqUHbJDzv3iRNo8SvVLEmJrFhoaN5KYYEIJOTrUMs2HbBnSyxGDbMZq7ZrEVbWDH+lwG
      Wo7RMRSgcNN2NpVmJlqiO0TCAJYTnKVjRs0Tn/4U082H6Zsro1icxCGmstW8fI1TRqGw8MAz
      T1Gkj+AY76TxTCP6PfeTqkti+/aleFwpFmNi1s3OJz5Dllkk5J5jPqLnY5/eh0mdqPp3koQB
      LCcUJGa0YlSrMZrUTLoXGPVMYbVl0Nc3RHZu7hWqEO+jENWk5dVR7jjIwOgCKVlhfnJymGcf
      qqLpyBGa23vpn3mR3EI7kekx+qfnGR+fp2zzDkoMLppbOplbDGNMK+Gh3ZtRBPtpPe9Bo5pm
      NJbBo1vLmept4ULvBGFZQXn9Q9SuSyXhpX17JAxgOUYLelcnM4tZzMz40Vjn8aq0+EZGMRtE
      znui7NlUuvK2ToKAITkFwR1ElhVI8TioLGx8YB9BWaJy5ydJM0DINU9y7yDrN25BJ/7/7Z15
      dBzXdae/Wrqq9wYa3Y3GvgNcAII7RXGRRCqSLDnabMdxEidOxrHPSTzJJDmZM3Nm5swkM4mT
      45M5ThwryUSxFS+xLCmxLdFaqIWiJFLcF5AASGLfgcbSe3d1dVfV/AGam0gRohyLJvv7r4Hu
      eq9e1X3Lfff+XoGTe07Tsu1Bdrhg/NibHB1JsiGQZ2RggPad23iksYLs/CCzeikPPX4nUj7G
      vrcPM1f1ABXu4gjyYSgawJUoIe5YP88bL+3G19iKQxQpVTModatZV2/x/FuDXCp8eCVaIk7B
      VoXAlVpD12KeM8fOkJ2aXQwiE2VaygsgyNS0rGJFcyWKAHNzQ3QdGWZ48PRiNUurkCyDoh/j
      w1E0gKvgDi/n4U+1MNJ1gGRZJ45MN9G8gWVyzQP9LMuikIsxOZGmYnMZApElluYkVFdF430P
      U+uRsMwCJhK59CySLF8ozuYopaE9xD3bOrCJi+sKUba9/6WLXJeiAVwVi+R4N+fSQe7u9KDP
      lXPm4FFeH5fwlrde1vsX9ARdB95iSjHR0ilKW++ksdQGiaWW5aGp2cehN3Yz7HeDZVK5bBOV
      V8S2lYTqsfe8yRt75nEqIqLDR0fHKsyFAebNEM3VPhbGzhKVwzRU+IrjwhK57UMhrq4MZ5FL
      JchJDrwOBcsskIzOE9cs/IEgTlU6bwQGidkIC+kcgijh9Jbi97kWoxYNndmERqDEA5ZFMhHF
      4SnDJoFZyJPOarjcHkQBzEKO2Pw8CS2PYvcQDJYiWhqZtIDbaz9/2rxFPpskMh+lYIl4/UF8
      LpVcaoGs5cLvtZONz5EV3ZR6Fn9TVIa7PkUDKEoj3tYUR8oitzVXXQNMT0/fsmfnXsnV1aFv
      DfK6Tjq21HMKbk+uagBlZWW3bIjw7YRhGNTW1n7U1bipuaoB2GxF99qtgCiKKMrNrCTx0bMk
      N2h8qo+xrJeVDSGwDIZ7DpN0t7CqPoCpZxk4N0SgpYVSdWmGk41P0D9RYMWyWqQLaWEmsalB
      hhIO1rTdDGoIOpMDo1glYSrK3MXF0rWwLBbmFxia07iYmm+juamMUtvF/OCxkQmmL8lalx0u
      llf5UMkzPBFlXjMJBP3UlqrnPWM6w+NRFnIGLq+HppAbRbrEAW2ZpGJJzkVSWKKNmko/wRvI
      CV7Sc53o2c1ff/M1AAp6jOef+F985dmDmEA2OsqTTz7FdEpfcqGRobd44hsvkytcOs0yObfv
      Wf7vt9/6IPVfrFN6nh/+0z/TE8t84N9ek+QYu/e8y9ET3ei35hLhp4ZRMMhqeTJankwqzZtH
      h5nVLm80XS8s/l/LE4/Heev4KCk9T9fxft4dSZDMpHj17V565nNYRpZ9+89wZCJFMqNx4lgf
      h6cu13yIRSLsOjjCfDpPIhbjRN/CDalCLGkECNd0IMy8yizgiZ/FCN5LU2yC8QIoC2cpOBso
      dygkpwc40TNIWrcINqygvbkKxcoy0H2SwakkjkAVq9qXLV7ULDDae5jxmThljZ20N4ZYtvVT
      fGm5DdAZ6DpJ3hUgOTVEVHewZvNGgg4JPT3Hma5uptIWwVApvlAtRt/bvPzyywy6PIzWtbFz
      43LIznLkcBdJQ6G5Yx31ISeJiXOci8kErXn6p9NUtnWyvKbsKrnJJuPnhqnfsIH81BiJrI7d
      rRCbnaCgBijzqmAazExP4A1UI+cW6B8cJWMq1Le0EXDbSMYiGJKHzHQfKWctzUGF8ZFBZqIZ
      VG+Q5qZ6nDYBK59msK+fhZSO6glQU1tBqUslszDBucEpcJTQ2NyEV71JxyBBIBgOEQwvfozO
      TDGrK9Q4L58NNLXU0QSAxWhPL1l3PfZ8lr6syMfvaMZjgxbPIG+cm2XlxjCrN61g6/lzmeMl
      A/xoJs2WaidgsjAzz/PvnMUsq6JCkqioq6XFf2NCzUtqVZ8/RMiaZyAGyaF+jNXbWFUywUjE
      Ij06gVJVj10tMHy2n2Rewq7keO7vv87hoXmmu9/gqeffRVRVFiZ66RmOApAcG2AkpqOIkzz1
      t99iJJpn8vTrPPnD/UCWvf/yBE/9+BC6YNG/53s8/c4wYLLnu1/jR4dHUFWD/f/2DV45NYtN
      UbFJEnanE5dDxUpN8sw/fJ2jMyaCPsE3vv5PnIskGTv2El/7h6cZThhkI6f4u6eeR8u/t3u3
      ChojUYO6ygrqXAaj0cW+JT7Zz6m+yUVpxNwsJw+dJaOnOXnsMPG8iJCbYf/eo8QLFtOj3Zzc
      t4cDfTEESSATjTAxF8emqsQmejjaPYFhZOnZ/zqnJ7MoqsLI6cP0TSUoR/gllAAAGN1JREFU
      xMd592gfpk0hOzfA/sO95IyfA6eEZTAyFKGyvgK7dLXJiIWpJTk8IbChxYMIiFgXpk4+j5OM
      lgNJwqMuTmfyOY2jI+lLlDIEJAl0TSLsd+BUZRRpUSvoRgJjl2QAkj/E+hqDnr4og72DtC5f
      Q2ubh4HhaYZGx6lrbUaV7LR1rsQpZFiI6tjS8/ROzVHQUiTSORRPOdvve4TNyxYPbPDUtbFt
      8xa237sJKTJJMnuF21Vx0rZmM1u2bGFtg4exqQXIdvPSgRSPfPLT3L1tIyHFxMBGVetKwj4/
      yzfcwbbVzUz3H2TPdIgvfvo+7r3/E2wsGWf38VEAvI2d3LPlTjatX0lqYfrCCYuXksvGSOki
      fp+XhpYggz1j6EBFTS3zMxMUgET/MQp1q1FzYwwMJtEyCdK6jVz0FEMzedASTJiVPPqxbbSE
      fbjKyqnyu0nF42jZPLMzU6QWZhkslPLA3Zvo7OykvsKDYFpM9Q8SzaZIxePoeYvBkX4y2s9O
      G/XGsMjMT3M6W8rqSvXqL6MFQwPTqFXlhBUBh8tBlVzgxXfP8vKhAd7qnmY2s9ghWZbFzMQk
      P3jzLEpdIxurXBcuks/ppPU8sWSW+XiWlH7jwmBLiwUSfazoqOabp95FGPOz6TMqAb2Z5Mmj
      9I1oNN1VhZCO8NyTf8983d1sbqxkpswDiFSseoDf5giH9/2Il3+kc/9nv8QN6xRk4miSHVVR
      gGuvOXQ9hax4zt+cgOowSSd0sF/zJ5cXM9HN8ROnGJkcRjQ1krlSpresoNYXpDp3nMFEgrkB
      i/b7A1gLQxhqCeXhMDJQWVNPeZnE9HwJK1tqFjVVLZOxnqN0zwo0VofJqgbJ2Rz5PLidKuJl
      3ZBFNptFdQcIh8sAqGjx4rbf3CcUWIbBqb4YLa31XEvYxSjkODujsWLdoo6nINtYv76V8kiS
      VN7CyghEootPLRmZ5LUzaTZsWEZLmZ1LtfZUl5uqMhuC4qA6oFDquPG2WeLEUqKxo5P5va9x
      2FlOox2cFQ1IPa9yOl5NY62TQjbJufEcG7dvpr0xQDatASbR2VncVev43O/9ER+ry7P3UC83
      vMXmqyVoRugbnyafiTOfXAxhkCQZp6PA/LyGYZqEKtpwJrs5FdHQ01Oc7DNY2RZcYiEaQ2cX
      eOiLv88XPv95Pv+FL/GLm0oZGZnDktysWR/gyEsHmCqtos4hoHjCqGYCV7CGluYGSh1gWhII
      AqJwXiTWMpmLZ6huXEZLYzV2S0c3QXXaSEdmmEnkMfU0kUgUA4FguY9kUidU10xTfTVOReBm
      P/xXSycYzdhoDV5bqzM+NUbSVUm193y/a5pE03mC5X6WV7mZmU3TWl0Geordx6PctbWF1ste
      fgABT4mPjW3lJBJZaqsDlCsmYzPJ9+kSr82So0Hl+naqhe9jVFbjAHRHJQ57GjXcRrUdbHIl
      H7+7ie9/9S/Z37yGiuZ6ZKeCaETZ84N/ZTCSwuYJ8+Avr8SZjVERks6H+qqUV5VjlwVUVykV
      ATcgUhIMIzhtgICjJEhIcoBczWd+fQfPPPM39NY2oWcNSkUByR3g4V+6l29972841bCF//pr
      9/D7n4vx3Sf+nGcsG8vv+3XuWRZmat5P2L+oIy8rLirL37sAtlJzzDgauMd/sVcJVDUyNTGH
      YYZQK9fiTv8L5dWrAVBdFWxaU8H+XU/zWkGium0Nd24Am+rE+km6oyDR1FDF62/t4ojppLYm
      RMDnxOYOsrmjgpd/+F1ykhuPXcItCJTUd7Iu+g4/+u5TmDYnTZ13UB66WNHZnj2cpp17lvsZ
      PL6PWMkK1jZ+lGeBWcxNzRJsrMFnu6RPjc7wbG+BB+6swmNo9AyZbNjkR7mkzdOzEZ59Y4Ys
      Mh0rGllb4yKfmCeSiPL0j9698PI3tC/n8ZUXZR5rGmrZnBvmqR8cwJQU1q9rIXwDNf85C4bL
      0tc9TkVLI7ZUP098+eu0/vaXeaj1xvXhP1LyWSZmY/iDIVQhx96XdhFc/QDtNTcm9X0lRWnE
      6/Nzlg8gMntuL88+922ypo3Wnb/Bjqaf05cfQBTQI+d4bveL6JZC85qtNFfc2EknRW6Mn7MR
      oMgHoTgCXJ+fsxHgp8+tnA+QzeUYnVlqaubtyW1vALcylgVmcYB/X27S/fUiRX42FEeAK7Es
      4pPdvL73NIFVW9m6shqBAtM9XWjV7TT4Lg0vztGzdzdHRmKIkkpF6yo2r27BYZMul0bEYm74
      JPsOncFRu5rt65uJDhzlnWPj1K7bUpRG/AgpGsCV6DMcPD7H9sceZnL/6/SUl9MkTdEbE9iy
      7MrmMkhH82x+7LM02bMMdb3D7jeS7NyxHs8l0ohmPkfP2UHW3fdJakptaLEZukbj3P/4Y/hu
      8h3eW52iAVxJOolWGibgcJIPOTk7F8OpjRCsWk4+l0NSVSTpvceAijYHTWvvJvPWK/RNpVgT
      yPH6qSl2rqnh0BtvcPjkGc5NaZdJI05Px1m2aRudFQInDhxgYC5H9YpNbF1VTyE7Tl9fAY80
      xvGIg/u3riI72cveQ91okpetO+6jplS5lkxRkSVSNIArsTuxJUdI6DkS8Ryqe5qpnIPsqb2c
      1UWCLWvZ3lF7DWlEG2WVQYbnY1glIlOzUbC1X0ca0eD0269T0rmTX/FDz97XOToZpt2T5OzR
      LgKrOrlveytWfIzTE3nuf/zT2LITvLb3LZz37iDgKE6ePgxFA7gSRzmraoZ58Znn8FQ2ECiY
      +Nw6omMTdzXAjw9OQMe182zNQh5L/CAvZYyzx3uJDc9wBDD1DOFQAjwCrmAjG9a04pJFpueH
      OXv8DCNDvQiALjnJaAYUDeBDUTSAKxFkqlZu4ZdX3slM3xEmqcRt9pGRVWTFQjBNTOCqM3cr
      R2R8Hl/HekSWejSRiK+8ma2PPkj5JSdtpxMxPL4SFPn8Cy7aaVq/g7vvaOGqofZFboiiAVwV
      Cz06TPekzIYtAYzILOd6++nLyygez2UeG9PUmZuewBHTmRnsJVrSzvaQHVJLLctHRXmOwwdP
      0NkYQEvOIZa2Eb4iprgkUEm66xDd/Tb8dojGU9Q0rcRuxNBwUuJW0ZJRcqITr+sa8fhF3sOS
      Dsq+lbmWLlAmnsBdUUPQraA6vaiFKGNxkVXty3DZLyZfW6bOzOQkC7E03tp21q2oQREFQEBW
      HQRLvSAIyLKCzx9AkVj8rKh4PR5EQaCsogoxOcPwRARDCdBUX44iitgUFz6fAwGQ7R5qQh7G
      hoaILKQoq26hvFQhNTvKbNZOmc9OfHqYubzjgjRiNBZHcVw7PLlIMRbolg6FKEojXp/iCqrI
      bc1V1wDJZPKWlQu8EtM0b1kZSMMooGdvRCzk9uGqBmAYxm1jAACyfGv6AhRZpsxbzC94P676
      5EtKSn7W9Sjy70A8HqesrOyjrsZNzQfo+iwKeg49b2AhINsUFJv8U9uKtyyLfC6HYFOwSeKF
      8nJX6PbIih3VduPxM5ZpktN1bIp6iSzjVb9JPqeDJCPLUtGteC0si4JhkC9Yl+XtK4qMfEn7
      WqZJLm/wExUaURJRZAkBEz1vYFggSxI2SUQQLnrn8oYFgoAiS5c/L8vCME30gokF2GQZWfrg
      2kBLNACT6OBRvv3sS8TzErIo4g608Pivf5KqJUqNXA8rn+Wb//2P8P7qf+Eza+oAnb59L7Lr
      3S76jx8mXraKVbUeVj7wWzyy9urpz+OnDjDraqSzMXTN1X1mdpA/+dO/5rN/8mU6Au5rV0gb
      5/vfeBHHso18/O413KzCbB89FsN9Q+w5GyMP6Nk0x/uzfPGLO7gzdFGtLTIyzFde7KOxatEr
      5a+o4KHVYSL9g7zYG0UUCmhSKZ/Y0UKd10Z6LsKzbw+QFGyossKmO9pYHbz4smUSMV7Ze5Zh
      Q0IFapsa+IVVAT6oPtySDECfH+Sbf/cd6n7lj/nt9kpUIU90bgFVgkI2Saog47QZJLIWfq+D
      TDpBRisgiDIeXwmqDJlkAlNWMLQMeUvC4/Wh2kQo5IjGEui6hpa3uJgOrrL8nsdZfs9Odv3F
      /+Dsqi/wRw82LDa5ZZBJxMnkCsgON16XA0NLcujH3+NE+UOUe9fj9/mQDI1kKkPBtLDZ3fg8
      11KsuRKL6PAwvpXrkLV5MrkCqkMmn8tiiQo2mwSWRS6XRVYciKZOOp3FQMTpcqPIIoV8DkuQ
      MbQ0BcmBSxXJZtLk8gaSTcXldCCJApZZIJNOoxcsJNmG3WFHkUUMXSOV0UCy4XS6sN2s27+C
      SPPyFpqXA1gMn+piyvTT5rtcGjGeTOKqaOR3Hm258DctGWPXsWnuun8jq8pEdr90gBdOlfKl
      TT7efOccrmWd/EqbB7GgkxN+cj0LLatz4N1uukw//+HueryqRKFgXX13/josyQCmho5x2mrh
      91ZXIQsCoFIWrgCg/+Un+euzQbbYzrBrtpGvfnEbr+3exUwCUpExPBt/lc/f38Szf/Wf6Qvf
      Q4cjTndXL/Uf/10+t62CY7v+mWeOJqgMeBmY0QhdtzYWkdOv84/P7cfuc5NKGdz9S5+jWTvN
      4bNjjIzu4fvmAh978ONwbhcvHZuGQpzxeZXf+IM/PK9PeR2MHH0TGm0rl5PrPspEPEupw8PI
      qX1MKcvY2lGNocd4+5V9rLpnBwtn9nFuIoVeyOEJd3LXluWMnznAQsLGxPgYgY7trA/m2H/o
      KLGshYlI8+q7Wd3oZvL0u7zdO4tNEkildNq372RthcSRg0eYWkiRNy3CLRvZ3FGLfLOPQnqa
      N7vmWL96PSVXDJnJeIpUNMu/vW3g9fnYsDyMoOss6CJBp4woyaxoDbL36AJ6q8DxWVjfNMvL
      +yfxBMq4o+Unsi8G44PDvHBqHn+tymsHBmhtb+DOmvcZzd+HJRlATotjU3xIwOyJ5/nq9/YS
      z/n53T/9b9iwmD/Xg/xrv8RfrmjA57Zx132PoRVMkhPv8OS/vsn81ibARrh5NZ/Y0UbL03/O
      0wNjROujfPfVcX7nL/6ERrXAk6Pd16+MNsmup5+n4ZH/yafXldD36pM8+cLb/Okff5Kda17h
      cMVj/MdPbUQGUupdPFarYRbS7P7O19jfM0PTiusXkdfSxPMGTd5S7PUudg/MsiLsIVxZxene
      KSyq0Ca7yfhX4LQinJgW6Vi/EZUcPUcOMjzfgqxF6Z3w8YsPPkqpW8HUM6xafyeGaRGfHmJ4
      dJRMWZATExq/8ODDlLltdL31IrmCxdzQEAnFz/o7OjCTEfadOUO6tRKf4yb2VlkW08PjDOa9
      /FaT9z298bLVnXypKY9R0Dnd1c8/TWX5zTvL6fCbvNE9w/Z6F2OzaaKaTFrTyRZ07E4vzSUm
      hw/38kO9nc90+hEQqagNUukdoamtlg2VDlyeG5+HL6lFbYobPbeAAQRXP8yfhcL8p//9HBkD
      fFg46ldx3x2deBWB+aH9fOsbr+Ktq0TQJ8kbyvmFj4TL7cImieeHfotEdIqIvZwWj4KVNxCW
      0sMlF+hfkHmkKYgsQWVVFdoLA1cJPTM59ON/Zt+EQjjgZSyaIVxYmr5mdu4s3acGiWu7sBkx
      xqYjzK5vpDxYgfudvUzqGnPdEVq2bcFKHmBoZBxd0hAByVeDT7FIKyV0rm7H71ERLJOFiT4O
      do0g2mRy6SgZtR4t48dd6sfnWozrFyURAYvo/BSTIxn06GJCu9dfdbk2/k2IUdA50DVJTccq
      6u3vravL46bhvEe23GNw5LlhUptrePgXOnnn1CQHexOg5SnzeFFtEqrNQXNDkBrJwp6c48kz
      M2idfhyYRCYTGIUc+08Pk1/w0risFv8Ndg5Lk0ev66RJ/1te7J7h/mUhbJZ1iVSfiNPhRDy/
      Qp/sPUasbC1/+JsPsDDyOoNnjl/zug5XKZ7cYSYyBcKChpYzuK4klKeM1rICfX0zrPOVMjo8
      gr2hjgAwpMjktBymaWEJCQ4fG2bLF/4PW+tkXkieZHIpN0uB8XMjrH7ocVYGF/uxyq63GR6P
      EWrysmGlyp53TlFQqnnUK6CbAcrLk2y+ZwdlDgEtk0ZUbaRFEVmULkgjjk3P0bBqCyvqfEwP
      HOdgn46sCqTjCdI5A59ikslogICvxEuJUcvObatQKJDO6hejQm9SUtEIR+ZUPrvz4hPMpVNM
      pyEccJOYjyK6PPgdIql4Ckm1o0gCedHB9k3LEAydV3cfoa2pFGepnWWeHIcHUoSb7Cwksjg9
      ARaTUWUa2up5PBvnmUEbD25fhhODWDKHx6N+4HXAkgzAEWrhtz7/CZ569m857fBht7I4qpoJ
      2t8rUVve0Ir58kt87YkJygM5tPe5bmltB59c+xZf+bOv0NpYw1SicP01gL2Chz7zKP/4zNf5
      q70OsjmJR355O06g5Y47efHbz/PV9CgPP/IQyxq9vPidJ+hvayU2k8HRfv17tTJTnIkG2bEz
      TMn5d86qr+P4xBhGQwe+lrVEf/xtqj/2KWQBRHc19cFuXvnhs8iyjDdYzYZNmy+/qCBS7nPw
      1oHd9B53YpfyaFIFqjdIW2kPL/zbsyiKHT2ToLleINS4gpKRPTz3zBkUWaakdgXb17ZdcAMu
      9B3gLK1sbvYx2n2UhLeF9tpSPjry9JwYxddcQ433Ys70ZO8Z/uakxR/86gbSk5PsG8liCpBN
      Fdi2dQV+xaSrq5/jU1kMXcfyVfBYmx9BFbl3axPfe+ck/69HQTdE7t8WvuzlbmxrZtNsN0++
      cAyXZFFVV8/Ozg9uAEsPhrMstEwKTS9gCSKK6sBhV7D0DBlDwu1QF/23570aeUNAdSqYuond
      aSefzWApDhw2iYKWRrNsuOw2zEKOZCqLICvImEgOJ3b50tswyWUyGJIDpyqdr8riqexa3kBW
      HbgcKqJwiUfFFHG5XIiGRjqbQ7DZUQQDS3ZglyGdzmB3uS/zU1+4TbNALm+hqrYLPmXTKJA3
      LBSbDUGw0DIZRMWx2CtbFqZZQNNyGCbYFBVVsWEYOggy8vk9Dcs00LIaBUtAURY1TxUJEskk
      iDICJqfe3YOr9S5WN5Ri5HWymn6+rRc9Q8L5TRdDz6Kj4LCJ5PUcpmi76t7Iz04YyyKn5TEl
      GbvtYrqokc+TLYDDbkOwDLRcgbxpIYkSDruMBOQLBbL64t6SXVVQ5EVfvmVZ5HJ5dMNCkmUc
      ioh42aaThVEwyOQKmAjYVdtiG33Amt/20aAfKfkUpw+9w7GBaSxLwlvZwt1bN3woue9LKSrD
      XZ+iAXyUWBamZWIaJhYCoiQhCsJPbXe9aADX5yb2q/1suJmiQU3zpxuAqGkaE5NLW/rfrtz2
      BnArnxRvIpAXi7pD78fN7VsrUuTfmdt+BLga2dg4p7pH8dYtp626FAGT2PgIur+GkPPSJssz
      0XuKgdkUgmijtLKetrrwYtyOnuLMYISGtgZUIDk3ypm+cZRAPcubwmQiQ/QOzBFobKOpsrTY
      E31EFNv9SowYJw/2ogT8RE4fZDRhUkjP0zU4he09rZVnvOcsYrCW6nAZ8YFD7D0+jG5aICmU
      lZUiAaaRp7vrOKIvTHmZBzMd5cjJXnyhCvyeK8/AKvKzpDgCXElilhlXNY+0LWNKn6BvKo5k
      9OOtasWnvre5REmlvLqeBg80NNZwaPcrnIuEaS/NMx1LEii10XP0CCfPDBHS3Jj5FP2RCYYn
      I+jCEDjc+JQ8A92nGY3qVDR30F5Xhp6bZ2YanOIMZ2Yl1q9qxoiNc+xUPznZw5oNG/BfJeSg
      yAejOAJciWRD1DV0w0DXDaR8hPGoTHJgH08/9zwnh+e5pudYdFBZW0ZsZgEzl+TE2WEQVSrr
      W6gIldG2ooOm+joam5qorq5hZccKqstcDJ06SlwN095WzULXPs4sFMhrc5x+dx9H+uNUVYcx
      UhGO9oxS3bqClrDIgb2HSeSLHuwPS3EEuBJPmBb1HLteeAHZ5iYUTOPwFsjZVvLoWpFXTgyw
      qu7aUiOSoiLmTC70LYKMt9SPx+0gECrH7wLNyuOdjRIqD+GQErx94hyZUJJpoJCYZGFonpom
      g4zpYefmDZTYZSIDvYwOjBKNRQGYjyeYT6zBW2a7Zl2KXJ+iAVyJYKdl43YqMxrJ+TGmMz58
      0jh5bwkOt4lUmHkfacQCC9OzqDXLEEguscAcolrJui3b+MnJrIrTg6XFCVVW4To/7SoUDAIN
      HWxYXYsICJKMy1l8fB+W4hToKkg2O167wchInOqmapx2O4noHOl4AkuxXbXRTENj5NR+BrMh
      Wiq9H2BhW4q/JM7otIbX60EqxJlPLIYYCoLATy7k8QWIR0Yp2Fx4PQ6SCzNk88U1wIel2IVc
      FZP5iUm8TSsIOUSsqlZCk++waz+sv3PrJd+TcPok9v/g2xyUVaraOtlxVzNOG5C3UxVanCoJ
      okRZsGJRFhEQbQqlJSXnRW5lVt91L8cOHOC7x9P4ws1s21aDZLjw+4ULxuYONbFzg8beF54h
      Yyq0rdtKSDGZOnuIcbORDctDTHbvZ1JpZm3LtXOii1zObR8LVJRGvL35/1Yc8BKaNjDoAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Vehicle Class' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE total per Income (bins)' width='192'>
      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
      zT8FPZQPsyaqrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='UE total per Policy' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='UE total per State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE total per Vehicle Class' width='192'>
      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
      w/8AsV/HMuc+NTwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
