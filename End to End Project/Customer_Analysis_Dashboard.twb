<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='Average UE' />
          <alias key='2' value='# Policy Type' />
        </aliases>
        <members>
          <member alias='Average UE' value='1' />
          <member alias='# Policy Type' value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='adj_customer_analysis_clean' inline='true' name='federated.0kmd8y60u0cori14g08m30vkwslf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='adj_customer_analysis_clean' name='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p'>
            <connection class='textscan' directory='C:/Users/Fredo/Documents/GitHub/IronAlfred/End to End Project' filename='adj_customer_analysis_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;de&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;de_DE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lifetime_value</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_lifetime_value]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>customer_lifetime_value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coverage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coverage]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>coverage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>education</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_to_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[effective_to_date]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>effective_to_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employmentstatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employmentstatus]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>employmentstatus</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_code]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>location_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marital_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[marital_status]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>marital_status</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>monthly_premium_auto</remote-name>
            <remote-type>20</remote-type>
            <local-name>[monthly_premium_auto]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>monthly_premium_auto</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_last_claim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_since_last_claim]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_last_claim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_policy_inception</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months_since_policy_inception]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_policy_inception</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_open_complaints</remote-name>
            <remote-type>129</remote-type>
            <local-name>[number_of_open_complaints]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_open_complaints</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_policies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_policies]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_policies</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renew_offer_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[renew_offer_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>renew_offer_type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sales_channel]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>sales_channel</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_claim_amount</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_claim_amount]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>total_claim_amount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_class]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_class</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_size]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_size</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
      </column>
      <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
      </column>
      <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
      </column>
      <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
      </column>
      <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
      </column>
      <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
      </column>
      <column caption='Multi-Metric' datatype='real' name='[Calculation_1185572651833106448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN ([Calculation_1185572646113837064])&#13;&#10;WHEN  2 THEN COUNT([policy_type])&#13;&#10;END' />
      </column>
      <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='adj_customer_analysis_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
      <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
      </column>
      <column datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='CountD' name='[ctd:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
      <group caption='Action (MONTH(effective_to_date))' hidden='true' name='[Action (MONTH(effective_to_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(effective_to_date),state)' hidden='true' name='[Action (MONTH(effective_to_date),state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.829942' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.170058' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1185572646178607119:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='Average UE' />
            <alias key='2' value='# Policy Type' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='adj_customer_analysis_clean.csv' id='adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629'>
            <properties context=''>
              <relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='string' name='customer_lifetime_value' ordinal='2' />
                  <column datatype='string' name='response' ordinal='3' />
                  <column datatype='string' name='coverage' ordinal='4' />
                  <column datatype='string' name='education' ordinal='5' />
                  <column datatype='date' name='effective_to_date' ordinal='6' />
                  <column datatype='string' name='employmentstatus' ordinal='7' />
                  <column datatype='string' name='gender' ordinal='8' />
                  <column datatype='integer' name='income' ordinal='9' />
                  <column datatype='string' name='location_code' ordinal='10' />
                  <column datatype='string' name='marital_status' ordinal='11' />
                  <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
                  <column datatype='string' name='months_since_last_claim' ordinal='13' />
                  <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
                  <column datatype='string' name='number_of_open_complaints' ordinal='15' />
                  <column datatype='integer' name='number_of_policies' ordinal='16' />
                  <column datatype='string' name='policy_type' ordinal='17' />
                  <column datatype='string' name='policy' ordinal='18' />
                  <column datatype='string' name='renew_offer_type' ordinal='19' />
                  <column datatype='string' name='sales_channel' ordinal='20' />
                  <column datatype='string' name='total_claim_amount' ordinal='21' />
                  <column datatype='string' name='vehicle_class' ordinal='22' />
                  <column datatype='string' name='vehicle_size' ordinal='23' />
                  <column datatype='string' name='vehicle_type' ordinal='24' />
                  <column datatype='string' name='month' ordinal='25' />
                  <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0kmd8y60u0cori14g08m30vkwslf'>
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]'>
        <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]'>
        <groupfilter function='level-members' level='[none:education:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]'>
        <groupfilter function='level-members' level='[none:employmentstatus:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]'>
        <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]'>
        <groupfilter function='level-members' level='[none:income (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]'>
        <groupfilter function='level-members' level='[none:policy:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]'>
        <groupfilter function='level-members' level='[none:policy_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]'>
        <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]'>
        <groupfilter function='level-members' level='[none:vehicle_class:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_2417176E5DAA43728AC11C20C19221E6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action3_574DD359BDAD492B84528F89AD06587F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Product Coverage' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Product Coverage' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1 1' name='[Action4_39561062C4F24947ADFEF31116E36E50]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Percentage of Total' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Percentage of Total' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg UE over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' field-type='quantitative' max='9596.789368503305' min='5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:qk]</cols>
      </table>
      <simple-id uuid='{3EC2E204-369C-4DBE-8C38-06AB9355D967}' />
    </worksheet>
    <worksheet name='CLTV vs. Claims'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_claim_amount]' derivation='CountD' name='[ctd:total_claim_amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Year' name='[yr:effective_to_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:total_claim_amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='177' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok] / ([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]))</cols>
      </table>
      <simple-id uuid='{990EC2F2-4DF0-4D03-9E71-98C46AE9598A}' />
    </worksheet>
    <worksheet name='Coverage and Premia'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column datatype='string' name='[coverage]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[monthly_premium_auto]' role='measure' type='quantitative' />
            <column-instance column='[coverage]' derivation='None' name='[none:coverage:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[monthly_premium_auto]' derivation='Sum' name='[sum:monthly_premium_auto:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] * [federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:qk]</cols>
      </table>
      <simple-id uuid='{7168EE3A-22E6-49D3-B553-38F6E23BA31D}' />
    </worksheet>
    <worksheet name='First insights &amp; Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Average UE' caption='Metric Swap' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='Average UE' />
                <alias key='2' value='# Policy Type' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Multi-Metric' datatype='real' name='[Calculation_1185572651833106448]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN ([Calculation_1185572646113837064])&#13;&#10;WHEN  2 THEN COUNT([policy_type])&#13;&#10;END' />
            </column>
            <column-instance column='[policy_type]' derivation='Count' name='[cnt:policy_type:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572651833106448]' derivation='User' name='[usr:Calculation_1185572651833106448:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:policy_type:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572651833106448:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Metric Swap Parameter'>
              <formatted-text>
                <run>Metric Swap Parameter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok])</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6880125D-A9D7-4141-9FB5-7767B42BD089}' />
    </worksheet>
    <worksheet name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='134' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' max='200000000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' max='200000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' min='200000.0' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' max='20000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' separate-domains='true' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:ok]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BC0B5DF5-EE6E-41A1-8042-1395EEC0D915}' />
    </worksheet>
    <worksheet name='MotherSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day' name='[dy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok]' value='192' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok])</rows>
        <cols total='true' />
      </table>
      <simple-id uuid='{F0571B18-B653-4024-9270-D4B97814C8B2}' />
    </worksheet>
    <worksheet name='UE Overall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>UE Overall</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='108' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F55BBB2C-5750-4271-BD62-8DC9A312E1B6}' />
    </worksheet>
    <worksheet name='UE Overall static'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='68' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</rows>
        <cols total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F82F4FC4-BC98-44AE-8AB0-1C0E6A9DFC01}' />
    </worksheet>
    <worksheet name='UE per Education'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='104' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='Education'>
              <formatted-text>
                <run>Education</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{9F8A447D-DD64-4D79-9413-84935F93EEA6}' />
    </worksheet>
    <worksheet name='UE per Employment'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='92' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='88' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='Employmentstatus'>
              <formatted-text>
                <run>Employmentstatus</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{48D21B27-31A5-41CF-8863-D4CD71FC5B47}' />
    </worksheet>
    <worksheet name='UE per Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' value='Gender'>
              <formatted-text>
                <run>Gender</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{FF18F2E9-C6F8-4273-B62D-81BDB6E35C9C}' />
    </worksheet>
    <worksheet name='UE per Income (bins)'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='136' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='96' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
        <show-full-range>
          <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[income (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{04C8E511-F059-4C91-A0B2-5FC282E6F2AD}' />
    </worksheet>
    <worksheet name='UE per Policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8D39DD11-BBC6-41F0-94F6-DD83E3519CF7}' />
    </worksheet>
    <worksheet name='UE per Policy_Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' member-value='&quot;Special Auto&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{EE7454C3-6CCF-408C-8049-EFF2338BB4A5}' />
    </worksheet>
    <worksheet name='UE per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]'>
            <groupfilter function='level-members' level='[usr:Calculation_1185572646178607119:nk]' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8E108FBB-59A4-4D32-9D79-F8EB37A660F4}' />
    </worksheet>
    <worksheet name='UE per State GrandTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F3C5E436-12E2-4F7A-A556-16A57A9C6938}' />
    </worksheet>
    <worksheet name='UE per Vehicle Class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{CC125929-FCA9-47D4-9AB8-8063CC079124}' />
    </worksheet>
    <worksheet name='UE total per Income (bins)'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5AC73F9F-4D19-4BD9-A93F-FA19D7D185A6}' />
    </worksheet>
    <worksheet name='UE total per Policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AB35B5E5-305C-43C7-B949-77E8A10234C4}' />
    </worksheet>
    <worksheet name='UE total per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E642883-3768-4280-A98B-4797AA3B38E0}' />
    </worksheet>
    <worksheet name='UE total per Vehicle Class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//key Metric under observation&#13;&#10;&#13;&#10;Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[pcto:sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]'>
            <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-action-filter='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <wedge-size column='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[pcto:sum:Calculation_1185572644809060359:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{011759AD-8D3F-4773-95F1-E17F852707D3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='UE Demografics'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93668' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5402'>
            <zone h='93668' id='6' type-v2='layout-basic' w='82400' x='800' y='5402'>
              <zone h='21575' id='3' name='UE Overall' w='40100' x='800' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36163' id='5' name='UE per State' w='40100' x='800' y='26977'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21886' id='16' name='UE per Gender' w='42300' x='40900' y='41292'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35890' id='18' name='UE per Education' w='42300' x='40900' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35930' id='19' name='UE per Employment' w='40100' x='800' y='63140'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35892' id='20' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93668' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5402'>
              <zone h='7093' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7093' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='12495'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7093' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='19588'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7093' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='26681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7093' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='33774'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7093' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='40867'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='47960'>
                <formatted-text>
                  <run bold='true'>NOTES:</run>
                  <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='3721' id='36' is-fixed='true' type-v2='empty' w='16000' x='83200' y='70867'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='74588'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6459' id='40' type-v2='empty' w='16000' x='83200' y='92611'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: DEMOGRAFICS</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='106' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='105' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: DEMOGRAFICS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='21575' id='3' is-fixed='true' name='UE Overall' w='40100' x='800' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='26681'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35890' id='18' is-fixed='true' name='UE per Education' w='42300' x='40900' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='12495'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36163' id='5' is-fixed='true' name='UE per State' w='40100' x='800' y='26977'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='33774'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='21886' id='16' is-fixed='true' name='UE per Gender' w='42300' x='40900' y='41292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='47960'>
                  <formatted-text>
                    <run bold='true'>NOTES:</run>
                    <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='19588'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35930' id='19' is-fixed='true' name='UE per Employment' w='40100' x='800' y='63140'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7093' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='40867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35892' id='20' is-fixed='true' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='74588'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6801E51E-3935-43B4-87BA-6C623D64C93A}' />
    </dashboard>
    <dashboard name='UE Percentage of Total'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column aggregation='None' caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93669' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5401'>
            <zone h='93669' id='6' type-v2='layout-basic' w='82400' x='800' y='5401'>
              <zone h='21227' id='3' name='UE Overall' w='39000' x='800' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='21227' id='35' type-v2='text' w='43400' x='39800' y='5401'>
                <formatted-text>
                  <run bold='true'>NOTES:</run>
                  <run>
- More than 50% of UE via 0-40k Income classes (low Avg. UE)
- Almost 2/3 of UE via Cali and Oregon (have Avg. UE)
- 70% of UE from Personal Policy Type (have Avg. UE)
- 60% of UE from Four &amp; Two Door Cars (Signif. low Avg. UE)
-&gt;  If Profit to go up then reduce Four &amp; Two Door Cars Volumes</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37036' id='68' name='UE total per State' w='41200' x='800' y='62034'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35406' id='70' name='UE total per Income (bins)' w='41200' x='800' y='26628'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35406' id='71' name='UE total per Policy' w='41200' x='42000' y='26628'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37036' id='72' name='UE total per Vehicle Class' w='41200' x='42000' y='62034'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93669' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5401'>
              <zone h='6511' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='48' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='52' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='18423'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='53' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24934'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='75' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='76' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='37956'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='77' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='44467'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='78' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='50978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='79' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='57489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8559' id='80' type-v2='empty' w='16000' x='83200' y='64000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='72559'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8488' id='69' name='UE total per State' pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type-v2='color' w='16000' x='83200' y='90582'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: % of Total per Dimension</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='106' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='105' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: % of Total per Dimension</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='48' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='52' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='18423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='53' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24934'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='75' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='76' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='37956'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='77' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='44467'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='78' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='50978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='79' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='57489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='175' h='21227' id='3' is-fixed='true' name='UE Overall' w='39000' x='800' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='21227' id='35' type-v2='text' w='43400' x='39800' y='5401'>
                  <formatted-text>
                    <run bold='true'>NOTES:</run>
                    <run>
- More than 50% of UE via 0-40k Income classes (low Avg. UE)
- Almost 2/3 of UE via Cali and Oregon (have Avg. UE)
- 70% of UE from Personal Policy Type (have Avg. UE)
- 60% of UE from Four &amp; Two Door Cars (Signif. low Avg. UE)
-&gt;  If Profit to go up then reduce Four &amp; Two Door Cars Volumes</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35406' id='70' is-fixed='true' name='UE total per Income (bins)' w='41200' x='800' y='26628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35406' id='71' is-fixed='true' name='UE total per Policy' w='41200' x='42000' y='26628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37036' id='68' is-fixed='true' name='UE total per State' w='41200' x='800' y='62034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8488' id='69' name='UE total per State' pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type-v2='color' w='16000' x='83200' y='90582'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37036' id='72' is-fixed='true' name='UE total per Vehicle Class' w='41200' x='42000' y='62034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='72559'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ADD37467-3320-447E-8417-FB7BA34A4170}' />
    </dashboard>
    <dashboard name='UE Product Coverage'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93669' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5401'>
            <zone h='93669' id='6' type-v2='layout-basic' w='82400' x='800' y='5401'>
              <zone h='21343' id='3' name='UE Overall' w='41200' x='800' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42675' id='46' name='UE per Vehicle Class' w='41199' x='800' y='56395'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29651' id='49' name='UE per Policy_Type' w='41199' x='800' y='26744'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72326' id='51' name='UE per Policy' w='41201' x='41999' y='26744'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='21343' id='35' type-v2='text' w='41200' x='42000' y='5401'>
                <formatted-text>
                  <run bold='true'>NOTES</run>
                  <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93669' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5401'>
              <zone h='12209' id='10' mode='checklist' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22907' id='48' mode='checklist' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17610'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14883' id='52' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40517'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25647' id='53' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='81047'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS: PRODUCT/COVERAGE</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='95' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='94' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4471' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS: PRODUCT/COVERAGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12209' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='21343' id='3' is-fixed='true' name='UE Overall' w='41200' x='800' y='5401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='21343' id='35' type-v2='text' w='41200' x='42000' y='5401'>
                  <formatted-text>
                    <run bold='true'>NOTES</run>
                    <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14883' id='52' mode='checkdropdown' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40517'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='29651' id='49' is-fixed='true' name='UE per Policy_Type' w='41199' x='800' y='26744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25647' id='53' mode='checkdropdown' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72326' id='51' is-fixed='true' name='UE per Policy' w='41201' x='41999' y='26744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22907' id='48' mode='checkdropdown' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17610'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42675' id='46' is-fixed='true' name='UE per Vehicle Class' w='41199' x='800' y='56395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18023' id='39' type-v2='text' w='16000' x='83200' y='81047'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR
Distinct Count:
-&gt; Jan: 5.11
-&gt; Feb: 4.462</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F9CB26C-0CF5-4EAD-A282-C6C4CC8C9D27}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='MotherSheet'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{92D88251-54C2-42B4-A852-932CB8D8B527}' />
    </window>
    <window class='dashboard' name='UE Demografics'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Education' />
        <viewpoint name='UE per Employment' />
        <viewpoint name='UE per Gender' />
        <viewpoint name='UE per Income (bins)' />
        <viewpoint name='UE per State' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{15026B6D-72D0-454B-9CE3-DE499E7E7FC4}' />
    </window>
    <window class='worksheet' name='First insights &amp; Parameter'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E1BEF68-1AC6-41A8-944E-A3A0B3BB9C7D}' />
    </window>
    <window class='worksheet' name='Coverage and Premia'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='51'>
            <card type='columns' />
          </strip>
          <strip size='87'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8BC544A4-B5D8-4309-9E88-EE66CF056F2E}' />
    </window>
    <window class='worksheet' name='CLTV vs. Claims'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0DBF16AB-628E-492A-B166-7775E3098634}' />
    </window>
    <window class='worksheet' maximized='true' name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D4FBCAD3-1166-407F-AEE1-6F1B6577B5DA}' />
    </window>
    <window class='worksheet' name='Avg UE over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='2' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D5B77E72-1DB3-4C5D-8BCF-CA917018C965}' />
    </window>
    <window class='worksheet' name='UE Overall'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{926AB694-2F41-461C-A0F1-D3F7DE68F7A8}' />
    </window>
    <window class='worksheet' name='UE per State'>
      <cards>
        <edge name='left'>
          <strip size='189'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{571D9F91-5B9E-4C2B-876F-594EF21253E6}' />
    </window>
    <window class='worksheet' name='UE per State GrandTotal'>
      <cards>
        <edge name='left'>
          <strip size='175'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9CA5D7A0-8D75-47F3-B0C0-384D823C2121}' />
    </window>
    <window class='worksheet' name='UE per Gender'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{55DC0922-D522-4886-BE1C-C792434C4B55}' />
    </window>
    <window class='worksheet' name='UE Overall static'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C51AA5D-1BDC-4DAA-8334-242024EFE6C7}' />
    </window>
    <window class='worksheet' name='UE per Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C61C2422-9BE0-40DE-827E-9982F198DAF3}' />
    </window>
    <window class='worksheet' name='UE per Employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E58FE37C-D19E-4E01-A537-19B622DFDBBB}' />
    </window>
    <window class='worksheet' name='UE per Income (bins)'>
      <cards>
        <edge name='left'>
          <strip size='259'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{94175CF4-1A77-4373-B760-061A77B8C188}' />
    </window>
    <window class='worksheet' name='UE total per Income (bins)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2DA89B20-0AFC-424B-8596-6FB986691B1A}' />
    </window>
    <window class='worksheet' name='UE total per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{71CE377D-2FF7-4402-803B-844984E3BAA5}' />
    </window>
    <window class='worksheet' name='UE per Policy_Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B32AC5F-FDFA-4A99-9263-6475FA16523C}' />
    </window>
    <window class='worksheet' name='UE per Policy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CA120B4F-28D7-4442-AB34-537B02E7E450}' />
    </window>
    <window class='worksheet' name='UE total per Policy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D954D41E-880E-478A-8A2E-95A4E5FDBB08}' />
    </window>
    <window class='worksheet' name='UE per Vehicle Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B79FAB93-ED7C-4FF1-BBA7-23E0469E361C}' />
    </window>
    <window class='worksheet' name='UE total per Vehicle Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1D7DED04-316D-4779-B469-51ACC763BC7B}' />
    </window>
    <window class='dashboard' name='UE Product Coverage'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Policy' />
        <viewpoint name='UE per Policy_Type' />
        <viewpoint name='UE per Vehicle Class' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BF153190-DF2C-40A8-99A0-30824F11BF18}' />
    </window>
    <window class='dashboard' name='UE Percentage of Total'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE total per Income (bins)' />
        <viewpoint name='UE total per Policy' />
        <viewpoint name='UE total per State' />
        <viewpoint name='UE total per Vehicle Class' />
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{28581EE2-B9C5-48EF-9F1B-A6A4CCA1E934}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg UE over time' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='126' name='CLTV vs. Claims' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Coverage and Premia' width='192'>
      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
    </thumbnail>
    <thumbnail height='126' name='First insights &amp; Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Float CLTV vs. Claims &amp; UnitEconomics' width='192'>
      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
      KiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MotherSheet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Demografics' width='192'>
      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
      /xTzdjPBCQsTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='128' name='UE Overall' width='192'>
      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
      C8T/A61VCqJFYnjyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='86' name='UE Overall static' width='152'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Percentage of Total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Product Coverage' width='192'>
      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
    </thumbnail>
    <thumbnail height='128' name='UE per Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACACAYAAABdhGZrAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPaUlEQVR4nO3de1hU9b7H8fduAkExEXHLSHLRUMFQEUFANEqRoI2R9shJ7REvJ9J2B2mf
      TNs+7nD7HNt0dp5upyz1aJJuKk0jb9u7KaLAoFFc1Li1E/ACGBsYZ5rt+WMGGAQBY2yU9X09
      j88ja9ZavwWuz6zv+jHL729u3LhxAyEU6j5rH4AQ1iQBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIom
      ARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIp2
      f0crZGVl/RrHIYRV/ObGjRs3rH0QQliLlEBC0SQAQtEkAELROrwJbk/ppllMf6ew1fJhL27j
      kznuXdm1whSwJXENR+0iWLp6Gp7WPpw7qoI9Kz+E51YQ6XLTS2fWE5/tz9r5o02r7mHln3bw
      Y6t9uBKT1Mb2v0CXAmD0BG9mJTGx6ztSrgINmofjeLbhS3KKp+HZvRNwewIXNgfiDpAS6C5Q
      oNHg7R/IWH9XMnOKrX04imKBK4DomgI0Gm/8Y1XY6f1x3fUNZdM8cTO9ashL4ZUjXqxaNA47
      s63Kdi5nq8NLvDLJCajjwp6NbNr3HZcawH7QGGbMm0vIQJVx5Yo9rNylZsV8Ly7sfJ93953H
      97m1zB8NdRcOsvWzPZwtqUWHqvW2gOFKNp9/vJ3jhVfQYUtvj+EMcvIiNn4KxirEwJXsLXy0
      9TQltTpsnYcxaVY8MT69fpWfYFdIAKytQIPG259YFaDyw99lFTllT+JmSoBq2BhGbzjCWe04
      xjUloJisDBcm/skJgIq/v8u2hqm89MYL9LXRU52fxvtvbaZ3Uhy+Tds0ULzzXT6pfoxX3kxE
      bVp+seQKw2OXMdu9H3YqPdX5O3jnf7/iwVVPGkNYd4aNb3zKz9GLeSNBjZ1KT92321i13dD0
      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
      blICCUX7f+4d/Z2d4wTIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per State' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='UE per State GrandTotal' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
