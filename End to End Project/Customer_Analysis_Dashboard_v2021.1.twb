<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='adj_customer_analysis_clean' inline='true' name='federated.0kmd8y60u0cori14g08m30vkwslf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='adj_customer_analysis_clean' name='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p'>
            <connection class='textscan' directory='C:/Users/Fredo/Documents/GitHub/IronAlfred/End to End Project' filename='adj_customer_analysis_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='customer_lifetime_value' ordinal='2' />
            <column datatype='string' name='response' ordinal='3' />
            <column datatype='string' name='coverage' ordinal='4' />
            <column datatype='string' name='education' ordinal='5' />
            <column datatype='date' name='effective_to_date' ordinal='6' />
            <column datatype='string' name='employmentstatus' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
            <column datatype='integer' name='income' ordinal='9' />
            <column datatype='string' name='location_code' ordinal='10' />
            <column datatype='string' name='marital_status' ordinal='11' />
            <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
            <column datatype='string' name='months_since_last_claim' ordinal='13' />
            <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
            <column datatype='string' name='number_of_open_complaints' ordinal='15' />
            <column datatype='integer' name='number_of_policies' ordinal='16' />
            <column datatype='string' name='policy_type' ordinal='17' />
            <column datatype='string' name='policy' ordinal='18' />
            <column datatype='string' name='renew_offer_type' ordinal='19' />
            <column datatype='string' name='sales_channel' ordinal='20' />
            <column datatype='string' name='total_claim_amount' ordinal='21' />
            <column datatype='string' name='vehicle_class' ordinal='22' />
            <column datatype='string' name='vehicle_size' ordinal='23' />
            <column datatype='string' name='vehicle_type' ordinal='24' />
            <column datatype='string' name='month' ordinal='25' />
            <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;de&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;de_DE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lifetime_value</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_lifetime_value]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>customer_lifetime_value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coverage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coverage]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>coverage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>education</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_to_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[effective_to_date]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>effective_to_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employmentstatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employmentstatus]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>employmentstatus</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_code]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>location_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marital_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[marital_status]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>marital_status</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>monthly_premium_auto</remote-name>
            <remote-type>20</remote-type>
            <local-name>[monthly_premium_auto]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>monthly_premium_auto</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_last_claim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_since_last_claim]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_last_claim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_since_policy_inception</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months_since_policy_inception]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>months_since_policy_inception</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_open_complaints</remote-name>
            <remote-type>129</remote-type>
            <local-name>[number_of_open_complaints]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_open_complaints</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_policies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_policies]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>number_of_policies</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[policy]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>policy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renew_offer_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[renew_offer_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>renew_offer_type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sales_channel]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>sales_channel</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_claim_amount</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_claim_amount]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>total_claim_amount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_class]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_class</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_size]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_size</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vehicle_type]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>vehicle_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[adj_customer_analysis_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
      </column>
      <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
      </column>
      <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
      </column>
      <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
      </column>
      <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
      </column>
      <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
      </column>
      <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='adj_customer_analysis_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
      <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
      <column caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
      </column>
      <column datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='CountD' name='[ctd:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
      <group caption='Action (MONTH(effective_to_date))' hidden='true' name='[Action (MONTH(effective_to_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(effective_to_date),state)' hidden='true' name='[Action (MONTH(effective_to_date),state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1185572646178607119:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='adj_customer_analysis_clean.csv' id='adj_customer_analysis_clean.csv_BD822C3ADBC640D69FDF791625D36629'>
            <properties context=''>
              <relation connection='textscan.1xe0pym1pkue1e13h6v2v0m1hz0p' name='adj_customer_analysis_clean.csv' table='[adj_customer_analysis_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='string' name='customer_lifetime_value' ordinal='2' />
                  <column datatype='string' name='response' ordinal='3' />
                  <column datatype='string' name='coverage' ordinal='4' />
                  <column datatype='string' name='education' ordinal='5' />
                  <column datatype='date' name='effective_to_date' ordinal='6' />
                  <column datatype='string' name='employmentstatus' ordinal='7' />
                  <column datatype='string' name='gender' ordinal='8' />
                  <column datatype='integer' name='income' ordinal='9' />
                  <column datatype='string' name='location_code' ordinal='10' />
                  <column datatype='string' name='marital_status' ordinal='11' />
                  <column datatype='integer' name='monthly_premium_auto' ordinal='12' />
                  <column datatype='string' name='months_since_last_claim' ordinal='13' />
                  <column datatype='integer' name='months_since_policy_inception' ordinal='14' />
                  <column datatype='string' name='number_of_open_complaints' ordinal='15' />
                  <column datatype='integer' name='number_of_policies' ordinal='16' />
                  <column datatype='string' name='policy_type' ordinal='17' />
                  <column datatype='string' name='policy' ordinal='18' />
                  <column datatype='string' name='renew_offer_type' ordinal='19' />
                  <column datatype='string' name='sales_channel' ordinal='20' />
                  <column datatype='string' name='total_claim_amount' ordinal='21' />
                  <column datatype='string' name='vehicle_class' ordinal='22' />
                  <column datatype='string' name='vehicle_size' ordinal='23' />
                  <column datatype='string' name='vehicle_type' ordinal='24' />
                  <column datatype='string' name='month' ordinal='25' />
                  <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0kmd8y60u0cori14g08m30vkwslf'>
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]'>
        <groupfilter function='level-members' level='[mn:effective_to_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]'>
        <groupfilter function='level-members' level='[none:policy:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]'>
        <groupfilter function='level-members' level='[none:policy_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]'>
        <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]'>
        <groupfilter function='level-members' level='[none:vehicle_class:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_53AF7DAB90BA4BCFA2C850065114C38E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_2417176E5DAA43728AC11C20C19221E6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Demografics' type='sheet' worksheet='UE per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Demografics' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action3_574DD359BDAD492B84528F89AD06587F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UE Product Coverage' type='sheet' worksheet='UE Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UE Product Coverage' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CLTV vs. Claims'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column-instance column='[customer_lifetime_value]' derivation='CountD' name='[ctd:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_claim_amount]' derivation='CountD' name='[ctd:total_claim_amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Year' name='[yr:effective_to_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:total_claim_amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='177' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok] / ([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]))</cols>
      </table>
      <simple-id uuid='{990EC2F2-4DF0-4D03-9E71-98C46AE9598A}' />
    </worksheet>
    <worksheet name='Coverage and Premia'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column datatype='string' name='[coverage]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[monthly_premium_auto]' role='measure' type='quantitative' />
            <column-instance column='[coverage]' derivation='None' name='[none:coverage:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[monthly_premium_auto]' derivation='Sum' name='[sum:monthly_premium_auto:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] * [federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:qk]</cols>
      </table>
      <simple-id uuid='{7168EE3A-22E6-49D3-B553-38F6E23BA31D}' />
    </worksheet>
    <worksheet name='First insights'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column-instance column='[policy_type]' derivation='Count' name='[cnt:policy_type:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Quarter' name='[qr:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:policy_type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</rows>
        <cols>([federated.0kmd8y60u0cori14g08m30vkwslf].[qr:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok])</cols>
      </table>
      <simple-id uuid='{6880125D-A9D7-4141-9FB5-7767B42BD089}' />
    </worksheet>
    <worksheet name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column-instance column='[Calculation_1185572644806074374]' derivation='Count' name='[cnt:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_lifetime_value]' derivation='Count' name='[cnt:customer_lifetime_value:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1185572644795682821]' derivation='Sum' name='[sum:Calculation_1185572644795682821:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644806074374]' derivation='Sum' name='[sum:Calculation_1185572644806074374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572644809060359]' derivation='Sum' name='[sum:Calculation_1185572644809060359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day-Trunc' name='[tdy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='134' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' max='200000000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' max='200000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' min='200000.0' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' max='200000000.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' max='20000000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' separate-domains='true' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' separate-domains='true' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[tdy:effective_to_date:ok]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BC0B5DF5-EE6E-41A1-8042-1395EEC0D915}' />
    </worksheet>
    <worksheet name='MotherSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Day' name='[dy:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok]' value='192' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:ok])</rows>
        <cols total='true' />
      </table>
      <simple-id uuid='{F0571B18-B653-4024-9270-D4B97814C8B2}' />
    </worksheet>
    <worksheet name='UE Overall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>UE Overall static</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[ctd:F1:qk]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F55BBB2C-5750-4271-BD62-8DC9A312E1B6}' />
    </worksheet>
    <worksheet name='UE Overall static'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='68' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</rows>
        <cols total='true'>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F82F4FC4-BC98-44AE-8AB0-1C0E6A9DFC01}' />
    </worksheet>
    <worksheet name='UE per Education'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='string' name='[education]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]'>
            <groupfilter function='level-members' level='[none:education:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='104' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' value='Education'>
              <formatted-text>
                <run>Education</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{9F8A447D-DD64-4D79-9413-84935F93EEA6}' />
    </worksheet>
    <worksheet name='UE per Employment'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]'>
            <groupfilter function='level-members' level='[none:employmentstatus:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='92' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='88' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' value='Employmentstatus'>
              <formatted-text>
                <run>Employmentstatus</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{48D21B27-31A5-41CF-8863-D4CD71FC5B47}' />
    </worksheet>
    <worksheet name='UE per Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2417176E5DAA43728AC11C20C19221E6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:effective_to_date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[Action (MONTH(effective_to_date),state)]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' value='Gender'>
              <formatted-text>
                <run>Gender</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{FF18F2E9-C6F8-4273-B62D-81BDB6E35C9C}' />
    </worksheet>
    <worksheet name='UE per Income (bins)'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
            </column>
            <column datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]'>
            <groupfilter function='level-members' level='[none:income (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='136' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='96' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' value='Income (bin) p.a. &gt;'>
              <formatted-text>
                <run>Income (bin) p.a. &gt;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
        <show-full-range>
          <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[income (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{04C8E511-F059-4C91-A0B2-5FC282E6F2AD}' />
    </worksheet>
    <worksheet name='UE per Policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8D39DD11-BBC6-41F0-94F6-DD83E3519CF7}' />
    </worksheet>
    <worksheet name='UE per Policy_Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{EE7454C3-6CCF-408C-8049-EFF2338BB4A5}' />
    </worksheet>
    <worksheet name='UE per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{8E108FBB-59A4-4D32-9D79-F8EB37A660F4}' />
    </worksheet>
    <worksheet name='UE per State GrandTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='92' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{F3C5E436-12E2-4F7A-A556-16A57A9C6938}' />
    </worksheet>
    <worksheet name='UE per Vehicle Class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
            <column caption='float_CLTV' datatype='real' name='[Calculation_1185572644795682821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([customer_lifetime_value] )' />
            </column>
            <column caption='float_claim_amounts' datatype='real' name='[Calculation_1185572644806074374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([total_claim_amount] )' />
            </column>
            <column caption='Unit Economics' datatype='real' name='[Calculation_1185572644809060359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1185572644795682821]-[Calculation_1185572644806074374]' />
            </column>
            <column caption='Average UE' datatype='real' name='[Calculation_1185572646113837064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_1185572644809060359])/COUNT([Calculation_1185572644809060359] )' />
            </column>
            <column caption='Weight Avg UE' datatype='real' name='[Calculation_1185572646175285261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed[month]: sum([Calculation_1185572644809060359])/countd([F1])}' />
            </column>
            <column caption='Avg UE Color' datatype='string' name='[Calculation_1185572646178607119]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1185572646113837064]+0.05&lt;min([Calculation_1185572646175285261])then&quot;Red&quot; &#13;&#10;ELSEIF [Calculation_1185572646113837064]+0.05&gt;min([Calculation_1185572646175285261]) then &quot;Green&quot;&#13;&#10;else  &quot;Black&quot;&#13;&#10;END' />
            </column>
            <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[customer_lifetime_value]' role='dimension' type='nominal' />
            <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
            <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
            <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[pcdf:usr:Calculation_1185572646113837064:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' ordering-field='[federated.0kmd8y60u0cori14g08m30vkwslf].[effective_to_date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[policy]' role='dimension' type='nominal' />
            <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[total_claim_amount]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1185572646113837064]' derivation='User' name='[usr:Calculation_1185572646113837064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1185572646178607119]' derivation='User' name='[usr:Calculation_1185572646178607119:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kmd8y60u0cori14g08m30vkwslf].[pcdf:usr:Calculation_1185572646113837064:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</column>
            <column>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' value='97' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='c#,##0&quot; â‚¬&quot;;-#,##0&quot; â‚¬&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' value='148' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' value='120' />
            <format attr='width' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' value='C1031%' />
            <format attr='text-format' field='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' value='C1031%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfe7e8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' />
              <lod column='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' />
              <text column='[federated.0kmd8y60u0cori14g08m30vkwslf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk] / [federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names])</rows>
        <cols>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</cols>
      </table>
      <simple-id uuid='{CC125929-FCA9-47D4-9AB8-8063CC079124}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='UE Demografics'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='string' name='[education]' role='dimension' type='nominal' />
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[employmentstatus]' role='dimension' type='nominal' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column caption='income (bin) p.a. &gt;' datatype='integer' name='[income (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='4' formula='[income]' peg='0' size='20000' />
        </column>
        <column datatype='integer' name='[income]' role='measure' type='quantitative' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[employmentstatus]' derivation='None' name='[none:employmentstatus:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[income (bin)]' derivation='None' name='[none:income (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93668' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5402'>
            <zone h='93668' id='6' type-v2='layout-basic' w='82400' x='800' y='5402'>
              <zone h='19598' id='3' name='UE Overall' w='40100' x='800' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35597' id='5' name='UE per State' w='40100' x='800' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21886' id='16' name='UE per Gender' w='42300' x='40900' y='41292'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35890' id='18' name='UE per Education' w='42300' x='40900' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38473' id='19' name='UE per Employment' w='40100' x='800' y='60597'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35892' id='20' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93668' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5402'>
              <zone h='6511' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='18424'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31446'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6511' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='37957'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='3721' id='36' is-fixed='true' type-v2='empty' w='16000' x='83200' y='44468'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='10697' id='39' type-v2='text' w='16000' x='83200' y='48189'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5759' id='41' type-v2='empty' w='16000' x='83200' y='58886'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='64645'>
                <formatted-text>
                  <run bold='true'>NOTES:</run>
                  <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5759' id='40' type-v2='empty' w='16000' x='83200' y='87552'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5759' id='38' type-v2='empty' w='16000' x='83200' y='93311'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS DEMOGRAFICS</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='48' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS DEMOGRAFICS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='161' h='19598' id='3' is-fixed='true' name='UE Overall' w='40100' x='800' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='29' mode='checkdropdown' name='UE per Education' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]' type-v2='filter' values='database' w='16000' x='83200' y='24935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35890' id='18' is-fixed='true' name='UE per Education' w='42300' x='40900' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='10' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='11' mode='checkdropdown' name='UE per State' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:state:nk]' type-v2='filter' values='database' w='16000' x='83200' y='11913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35597' id='5' is-fixed='true' name='UE per State' w='40100' x='800' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='30' mode='checkdropdown' name='UE per Gender' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]' type-v2='filter' values='database' w='16000' x='83200' y='31446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='21886' id='16' is-fixed='true' name='UE per Gender' w='42300' x='40900' y='41292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10697' id='39' type-v2='text' w='16000' x='83200' y='48189'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='26' mode='checkdropdown' name='UE per Employment' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]' type-v2='filter' values='database' w='16000' x='83200' y='18424'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38473' id='19' is-fixed='true' name='UE per Employment' w='40100' x='800' y='60597'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='31' mode='checkdropdown' name='UE per Income (bins)' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]' type-v2='filter' values='database' w='16000' x='83200' y='37957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35892' id='20' is-fixed='true' name='UE per Income (bins)' w='42300' x='40900' y='63178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='22907' id='35' type-v2='text' w='16000' x='83200' y='64645'>
                  <formatted-text>
                    <run bold='true'>NOTES:</run>
                    <run>
Best UE Combo seems to be:
- Nevada
- Employed
- High School or below (-&gt; wierd)
- Female
- 40k and above 
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6801E51E-3935-43B4-87BA-6C623D64C93A}' />
    </dashboard>
    <dashboard name='UE Product Coverage'>
      <style />
      <size maxheight='860' maxwidth='1000' minheight='860' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='adj_customer_analysis_clean' name='federated.0kmd8y60u0cori14g08m30vkwslf' />
      </datasources>
      <datasource-dependencies datasource='federated.0kmd8y60u0cori14g08m30vkwslf'>
        <column datatype='date' name='[effective_to_date]' role='dimension' type='ordinal' />
        <column-instance column='[effective_to_date]' derivation='Month' name='[mn:effective_to_date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[policy]' derivation='None' name='[none:policy:nk]' pivot='key' type='nominal' />
        <column-instance column='[policy_type]' derivation='None' name='[none:policy_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[vehicle_class]' derivation='None' name='[none:vehicle_class:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[policy]' role='dimension' type='nominal' />
        <column datatype='string' name='[policy_type]' role='dimension' type='nominal' />
        <column datatype='string' name='[vehicle_class]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93668' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='5402'>
            <zone h='93668' id='6' type-v2='layout-basic' w='82400' x='800' y='5402'>
              <zone h='19598' id='3' name='UE Overall' w='82400' x='800' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44070' id='46' name='UE per Vehicle Class' w='41200' x='800' y='55000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30000' id='49' name='UE per Policy_Type' w='41200' x='800' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59767' id='51' name='UE per Policy' w='41200' x='42000' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='14303' id='35' type-v2='text' w='41200' x='42000' y='84767'>
                <formatted-text>
                  <run bold='true'>NOTES</run>
                  <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='93668' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='5402'>
              <zone h='12209' id='10' mode='checklist' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22907' id='48' mode='checklist' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17611'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14883' id='52' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30930' id='53' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55401'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='10697' id='39' type-v2='text' w='16000' x='83200' y='86331'>
                <formatted-text>
                  <run bold='true'>REMEMBER:</run>
                  <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
            <formatted-text>
              <run bold='true' fontsize='18'>UNIT ECONOMICS PRODUCT/COVERAGE</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='56' param='vert' type-v2='layout-flow' w='98400' x='800' y='930'>
                <zone forceUpdate='true' h='4472' id='32' type-v2='text' w='98400' x='800' y='930'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>UNIT ECONOMICS PRODUCT/COVERAGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12209' id='10' mode='checkdropdown' name='UE Overall' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]' type-v2='filter' values='database' w='16000' x='83200' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='161' h='19598' id='3' is-fixed='true' name='UE Overall' w='82400' x='800' y='5402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14883' id='52' mode='checkdropdown' name='UE per Policy_Type' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]' type-v2='filter' values='all' w='16000' x='83200' y='40518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='30000' id='49' is-fixed='true' name='UE per Policy_Type' w='41200' x='800' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30930' id='53' mode='checkdropdown' name='UE per Policy' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]' type-v2='filter' values='database' w='16000' x='83200' y='55401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59767' id='51' is-fixed='true' name='UE per Policy' w='41200' x='42000' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22907' id='48' mode='checkdropdown' name='UE per Vehicle Class' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]' type-v2='filter' values='database' w='16000' x='83200' y='17611'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44070' id='46' is-fixed='true' name='UE per Vehicle Class' w='41200' x='800' y='55000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='14303' id='35' type-v2='text' w='41200' x='42000' y='84767'>
                  <formatted-text>
                    <run bold='true'>NOTES</run>
                    <run> best UE Combo seems to be:
- Luxury SUV or Car
- Special Auto
- Special L3</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10697' id='39' type-v2='text' w='16000' x='83200' y='86331'>
                  <formatted-text>
                    <run bold='true'>REMEMBER:</run>
                    <run>
Overall Avg. UE 
-&gt; Jan: 7.596EUR
-&gt; Feb: 7.504EUR</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F9CB26C-0CF5-4EAD-A282-C6C4CC8C9D27}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MotherSheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[dy:effective_to_date:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[mn:effective_to_date:ok]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92D88251-54C2-42B4-A852-932CB8D8B527}' />
    </window>
    <window class='worksheet' name='First insights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E1BEF68-1AC6-41A8-944E-A3A0B3BB9C7D}' />
    </window>
    <window class='worksheet' name='Coverage and Premia'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Special Auto&quot;</bucket>
                </multibucket>
                <axis>[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:monthly_premium_auto:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:coverage:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BC544A4-B5D8-4309-9E88-EE66CF056F2E}' />
    </window>
    <window class='worksheet' name='CLTV vs. Claims'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DBF16AB-628E-492A-B166-7775E3098634}' />
    </window>
    <window class='worksheet' name='Float CLTV vs. Claims &amp; UnitEconomics'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644795682821:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644806074374:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[sum:Calculation_1185572644809060359:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[:Measure Names]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:Calculation_1185572644806074374:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[cnt:customer_lifetime_value:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[yr:effective_to_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4FBCAD3-1166-407F-AEE1-6F1B6577B5DA}' />
    </window>
    <window class='worksheet' name='UE Overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{926AB694-2F41-461C-A0F1-D3F7DE68F7A8}' />
    </window>
    <window class='worksheet' name='UE Overall static'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C51AA5D-1BDC-4DAA-8334-242024EFE6C7}' />
    </window>
    <window class='worksheet' name='UE per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{571D9F91-5B9E-4C2B-876F-594EF21253E6}' />
    </window>
    <window class='worksheet' name='UE per State GrandTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CA5D7A0-8D75-47F3-B0C0-384D823C2121}' />
    </window>
    <window class='worksheet' name='UE per Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55DC0922-D522-4886-BE1C-C792434C4B55}' />
    </window>
    <window class='worksheet' name='UE per Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61C2422-9BE0-40DE-827E-9982F198DAF3}' />
    </window>
    <window class='worksheet' name='UE per Employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E58FE37C-D19E-4E01-A537-19B622DFDBBB}' />
    </window>
    <window class='worksheet' name='UE per Income (bins)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:income (bin):ok]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94175CF4-1A77-4373-B760-061A77B8C188}' />
    </window>
    <window class='worksheet' name='UE per Policy_Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B32AC5F-FDFA-4A99-9263-6475FA16523C}' />
    </window>
    <window class='worksheet' name='UE per Policy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA120B4F-28D7-4442-AB34-537B02E7E450}' />
    </window>
    <window class='worksheet' name='UE per Vehicle Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:education:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:employmentstatus:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:gender:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:policy_type:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[none:vehicle_class:nk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646113837064:qk]</field>
            <field>[federated.0kmd8y60u0cori14g08m30vkwslf].[usr:Calculation_1185572646178607119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B79FAB93-ED7C-4FF1-BBA7-23E0469E361C}' />
    </window>
    <window class='dashboard' name='UE Demografics'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Education' />
        <viewpoint name='UE per Employment' />
        <viewpoint name='UE per Gender' />
        <viewpoint name='UE per Income (bins)' />
        <viewpoint name='UE per State' />
      </viewpoints>
      <active id='40' />
      <simple-id uuid='{15026B6D-72D0-454B-9CE3-DE499E7E7FC4}' />
    </window>
    <window class='dashboard' maximized='true' name='UE Product Coverage'>
      <viewpoints>
        <viewpoint name='UE Overall' />
        <viewpoint name='UE per Policy' />
        <viewpoint name='UE per Policy_Type' />
        <viewpoint name='UE per Vehicle Class' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BF153190-DF2C-40A8-99A0-30824F11BF18}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='126' name='CLTV vs. Claims' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Coverage and Premia' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3hc1Zm433vvdGnUm9WLe8WWG25U00KAEAKEhEAqu9nN7qaQLMkmYZPf
      brIhySZsAmmUkNBLKAEMuOLem9wky1bvZTR9bju/P8bIFhrZspA9As/7PHoe+95zz/nunfOd
      +p3vk4QQggQJLlDkeAuQIEE8+dApgM/ni7cICT5CfOgUIDFiSzCafOgUIEGC0SShAAkuaBIK
      kOCCxvLeP3w+34difB0MBuMtQoKPEP0K4Ha74ynHIAwtQo83QFaaGx0Lpq5it9sBSElJibN0
      CT4qWM6cJD7UHKnG7ZSo9TjAmgRCUF6Uh2ma6Loeb/ESfEQYswpgtSn0+EKkp9qpOlrLxQvn
      I8sysixjsYxZsRN8yBizk2C7zY5itWFzuJg7by49HW2M/RlKgg8b0ofNFsjr9SbmAAlGjbiP
      JYQQrHjtBcKaxOLl15OT4oi3SAkuIOKuAAA2mx1TklBkKd6iJLjAiPscIODtQVgcFGanEogk
      VncSnF/irgC6pmIaBqYzg7w0Z7zFSXCBEXcFSM3MI8Vppb56P+2ecLzFSXCBEXcFAAgFAxiS
      FbtNibcoCS4wxoQCWGSBjoxMYhKc4PwyBhRAoEgahqoTULV4C5PgAiP+G2FCYJgGfn+Anp5u
      ysrKo5dNg56eXtLSUhGSBeOEMVxiIyzBaBL/HkCSUBQLqamp9PZ29V+uO1pNT18fob526prb
      aWzrjqOQCT6qxH0jTAhBOBhAM0xS0jL7r3v9QbKyLLS09nCsw8vFC+djmmbCGjTBqBJ3BQDB
      2yv+TmZuITMrF/RfLcjPoa3LQ25WFnNLJtLT0UZKaXHCGjTBqDImapKhqwSDQQzz5LWsvCKy
      8opO/t9dHAfJEnzUif8cAAkJiVAohPnhMkxN8BFgDCgApKWmoKkRTDOhAAnOL2NiCJSVOw5h
      thHUdMAeb3ESXEDEvQeoqztOU/0xOgMqKQ5bvMVJcIERdwXIzs4hJTUNp92WmAMkOO+8TwEE
      jcePcqyh5awz0sIBVOPsBUhKcqGjMGPGDJISxnAJzjMD5gBqwIMqJ1FRlEdt9SGCukSa04Yq
      29D83ajCTm66i85uDxmZWXT2eRmXkUJ7Rw92fPRZC8h36XgCGpMnTxz2CS9fn4fOzk6yxhWR
      OBCZ4HwyoAeQZQVVjaDpGhFTxmWTCKmC0uIC7C43SRaJTm+Q8aU5tLf2UlBSSl9vN57ORiyu
      dAoLCqirq8MUJsNf0JGwKRKtra2ounnm5AkSjCIDegCL001Oip+2Tg/jMlPx6zIZ7iRkScLT
      00Fu4QQK3TYaWruZMrUM2W5FycrG6nSTN24cLa0tTJ8xnR6/huVszvdqPkonL8UwEwqQ4Pwy
      bGtQXdfPiQmCEILXn36Ilkg6N9x8M3mpjv7re/fuY/qEYnwkEfB0UViQn7AGTTCqDKrRpqEj
      JGXQ+P1c2t8k5U3ijgWLcDlP7gF0tzUS0ASmGmDHvsPMrZydMIZLMOoMqtW1Rw4iuTIZl52G
      06bQ1dnG4UYPc2dMoK2jh9KSQmRpdE9uyXqQNWvWsOSyq0hPsgLgCwQJ9nXR3eegqKiQ3l4P
      acl5CWO4BKPKwJokdDq6PQhvBKH6KM5x49NkcvLyaWpoYFxeBg3N3ZQWZo2iCILePh+SbCOs
      6UBUAcrGTyY3vxiHTSEDK1o44RY9wegzYBUo7PdSNmkGZXlZWGxWjtY1Y7W7CPS043DYqWts
      IyUleZRFkDANAzUSZsP6dwfsJbhcLmSLHbtFJjk5OXFiOMGoE/8jkaewf/8eZsy46LRpEpPg
      BKNJ3E0hTkXT1HiLkOACI+4KIIRgy8Z36fL4KC4pj7c4CS4w4q4AALmZKTz158fYumM/2gW8
      FyaEYFNVI+GEj9TzxphYT4xg55//5Wuo4eDY0Mg4oGoGf3htJwfrOjFMwdKZiSOg54O417ed
      G1exft1aHvz1r+kOKyhxl2hkqJrBwy/vwBeMnPWzXX1BfvzEu0wsyuS+zy5l0/6GD0XEzo8C
      ca9ulYsvJ39cDosXLybFOSY6pBGx9WATjZ19PPzyDgxj+OO4g3WdPPD0Rm6/fBrL55ZTmO3G
      F1LpC5y9Ig2XsKrz0yc34A+OvUUHIcR5Vf64K8DebRsIhA1aWlo+tNaghmHy1vZavv6piynM
      SeGFdQfP+ExEM3huzQGeW3OAb962iGllOUiShCRJzJ2cz47DZ38mYzgIIXh2dRWmKXhmddWI
      K5tpCt7aVsua3XV0e4OjVml3HmnlXx9cwZrddWj6CA6YnCVxV4BJ0y6ioGAcU8vyCUZO+gY1
      DR2fP4AwDQxTjGn7n901bRTnppKV6uLWy6ZxrMXD9sPNMSuFEIKjTT38+M/rsFoUvnvnUnLS
      kwakWTi1kC0Hm85JS3iksZuGdi/fvmMxrd0+jjb3xEznD6nUNHXHlEHTDR55fTdHm3vo8Yb4
      zUvb+c/H1/HC2oO0dI084HpTp5cX1h3k3k8vornTy/2PrWXj/gb0s+hRz5a4jzmC/j68Xi82
      VyoXnRIgw9Pbjbe3g3ZhQ05KR1cjTCwrOk1Ow6ehvQ/dMCkbl4b0Ae2ahBC8vrmaL3+8EkkC
      iyLzTzfP4//9+V0KslLIz3IjhMA0Bd5ghNc313C0uYd7bqikKCc1Zp656UkYpqCrL0h2WlLM
      NCMhrOo8sWIvX/vkfCyKzF3XXMQjr+/mPz63FKvl5Gm8YFjj589sQtUMinJSuP2KGaS7o1a6
      wYjGb17axviCDG5aMhlZlrh52WQ8/gj7j7Xz+1d3UpDt5pPLppCR4hz29w2EVB5+eTtf/nj0
      u3z2qpn0eEO8suEwr2+uYe7kfOZPKWBcZjKKPHrtdtx3goUweeWFp7AnZ7Jg2RVkJEUPxkcC
      fdTUt1Kel8zaXcdYumQRSTYZr9dLcvLIzTH2H+vg6dUHcNqsFGa7ue3yqbjs1hHnd6i+i5U7
      j/O1m+cNuF7X1sfvX93J7Am51Ld76fWFSXLamDd5HFfOKUM+w3mJt7cfQzdNrlswfsSyvZ+n
      V1WRluzk2gUV/deeWlVFdqqL5XOjezCabvKzZzZx6UWlLJpWyPbDLfxtwxGWzSxiwdQCfv3C
      NpbPLWfJjNiNkSkEO4+08srGaqYUZ3LjkkkkO0/v7MAUggdf3MbcSfkx8+0LRNh7tJ3tR1rp
      9gaZWpzJ9Ysmkpb8wc8PjgEFELzy/F+R7CksueJaMpOjH+tw1V6w2MnNdKPbM+jraqeivBTf
      CE0hhBBsrGrkzS1HuffTi0hx2Vm3t47XN9fwiaWTWTS9aES9wX//dT13XDmD0ry0Qfeqjnfg
      C0YoH5dOTnrSoPxFxE9kw6+wLfonZGf6gHs93hC/fmEr93/+ktPKJYTgb+sPM29y/pA9CkB1
      YzfPrKrie3cuRTllqS0Y0fjPx9bxnTsW43bZ+OWzm6mclM8VlWX95UZUnZfWH2bt7jq+9sn5
      TC/LOeN3MUyTd/fW8/b2YwghSHbayM9yk5/lpiQ3jeKcFJJOKMYLaw8SjGjcedXMM/4GEc1g
      y4FG3tx6lG9/ejEZKR8srNaYUIDN775Dj9/ksiuvJMl++lHZSGyBhBC8vqWGvUfb+catC3Ge
      0uJ7AxGeWrkff0jlX29ZMGAocCaOt/by7OoDfOeOxaAFCa/4LtbpN6OULRuWMqm7nsBoP4Dw
      teK46r+Q0062fkIIfvrkRu66Zhb5We4h83h3bz2bDzTiDagsmFrAdQsnYHnfWnJ3X5BfPLeZ
      r940j8Lswd9u26FmNlY1IksSZePS+PiiiYOV9cQwTpals2oohBAYpsAXjNDS5aO5y0d9m4fG
      Di+6YeK0W1FkiXs/vSjmtxdCYNRvRAQ6EaYBpgGmxmFpOs9s6+Zbty8apARdfUHW7q5jzsRx
      /cNcIURMuceAApi8veJ1Up12CmYuoSjDddr0I1GAVzYcoaGjj3tuqMQ2xEd+ecMR2rp9fOWG
      yphjzFBEQ9UMkpw2LIqMEIJfPb+FaxdOYHJxFpHtj4AWwvS3ga5iX/JvyCn5Q7+3GiD0t3/A
      edPDmL11hNf+BMdl30XJmQonfqi1J1ZYPnnJ1Jh5dHoCPPD0Ju7//KUoisQLaw9xrKWXL35s
      NhkpTvbWtrNuTx3+kMrHFk5g/pRCYtVd04y+S2FOCp+6dOoHnhcNByEEqmbQ4wuRmuTA5Yg9
      DNUO/R3tyJtYyi8BWUGSFIQWQq95m+op/84LW5r55m0Xk+52EtF03thylG2Hmlk6s5iDdZ1I
      ksRVM7Mp2XYvjlmfwjrjU0jKybLGgAIINq15g+Yejauv+xiprtOPx0eiAN19QdKSHQO6/lhy
      /HnFXmxWhduvmN5/6EcIwdHmHn7/6k5cDiuqZmBRZJx2K5pu8MO7L0EEuwi//i2cn/gdWBwY
      jVtQt/wOy4TlWGfeNuCDv4e6+68gTGxzPgeA6Wkk/Nb3sC34MkrJEiRJwhuM8D9PbuT/femy
      QZXSMEx+9vQmrl80kRnlOf2yHmno5vEVezCFYHpZDpfMKqEoJ/XEnEMg1BBG52HM9iqsM25F
      skbH0bphopzSugvTADUAdndshRACoQURWgiMCEINIEJ9SK4M5IzyUVEivXkn6paHcV7/v0j2
      gb2gVrMS/dBrHJ7wdV7ceIxrFozn9c01zJ+Sz7ULJuCwWRBCUNvYzhvPPkqLUkZheD8TCzOY
      ctntZOfmEYpoY0EBTFa/8xbjCksorZiEy376IchomEMLYQKDu3LDMPnty9sZn5/O1RUmmreN
      N+uT2LFlM1+c5qFk0aeQsycT0QwCYRW71UKy00p4zU9RCiuxTrjqZBlaiMim/wNJwr70m0iS
      POBe8MUv4frE75HsJyf0ZqiX8Ir7UPJnY6u8GxQbv3h2Mzcvm0J5/sk5ghDRNfi2Hj93XzvY
      fFzVouvnNqtyorwgevVb6PWbEb425OxJSLYkTE8jjqv/q18J+vPXI0TW/DdGexVySgFK0QIs
      pYuRkvMwfS0Y9ZsxmrYjQr1I9hSw2JBsSaDYMT31SBYHlqk3Rp+xjGyianoaCa34d5wf+zmy
      e9yAe6Hde7BkZyG63sXsrOZQ8ZfZfKiFWy+bRlbqwBFEZMOvkJzpaFM/TWOHl+qmLqoP7KPT
      E8CRPm5sKMDbb/6dwpIKSsdPJukcKIAQAkwNs/0Aet0GjMZtSKlF2Jd9C9mVMSBtJBziZw8/
      xVTpEPv9OVTMXsYt431YJIG66884lv8IJfPkKorRXUtk3c9w3vRbJPl9B+yESWTl/ci506Nd
      rySBEKh7nwZDjVby98tqaNG5Qf0m7Jd8h0P+NB57Yw+zKnJZPq+cvIxkWrp8/Pbl7fzgrkuw
      WxUwNZCtMVtd09NA+J0fohQvxDL+SuSMsn5lVPc+i9G4FcfV/92vBEINEHrz37EUL8R60acR
      3hb0hq0Y9Rsxfa3IqYUoxRdjKZyHlFo4uEwhMHvr0A6+gt64DUvJIqyzbkdyZQ5IK4QA1R/9
      FmoQy4TlUcWULYiIj9DL/4j90u+i5A4c/uldXXT+/JfIDjvZ37kXbefvQbFhW/jVQbKYnkbU
      HY9gv+IHAxsgQ0OrehHt4CtjQQEEa956laCusOjSq8hIPv2S2UgUQN3xGFrNOyg5U7CULkEp
      nIvRtJPItj9gm/cFrBVXgCRhelsIv/MD1IJlPNowgeVzy5lRntufj9FdS/jt7+O85ifI6SUA
      hF77Ora5d6OMmxX7/bQwodf+DVvlnVhKFiP0CMHnPofrlkejreYQGF01RNb+BKV4EfKM29h5
      rJd3dtQB4A+G+HylQplZg9G0AxHqQU4vwzb38yi50+HEpE+vXY26/U84Lv/+oIrU/232PRdt
      0R1XI/QQcu+LWKfdgnXmjR98j8RQ0WtWou19Bjl7IrY5dyKnlSDCXtS9T6PXrsE6/RNIzkz0
      Y2sxe2pR8mZgdtdim3MnlvJLB+ZnmnT+7AFSb/4EWnML6vHjpN91J+F3vo+cnItl0rXIWROQ
      JBmhhQi98s84lv8IObUgtnx6JP4KcLaMqAfQI6BYB7QCACLkIbL+FwhTx1KyGHXPUzgu/Q5y
      3kyAmBXA6DxCeNWPcF77P5i+VrT9L+C45qenrSxmsJvQq/+KY/n9GI3bQI9EW/8zVLD+3qBu
      A8JQQQg6VBcdRjqzStOirXrhXLC7MTsOoe54HKEFsM28HaNpO6avBccVP0RyDP299M5OvI/d
      hyw3IDtkyLue0KE+MHScc+fivu5apBiLAkLX6Xv+BZxzZmOfNOn07yFMjPpN0XmPaSC0INbp
      N2Od8vET8yPpRC+tY7TsBjWAUn7poG/qW/EWhsdD6m23AtDz8O9xzJ6Fa94c9Jq30es3Y/bW
      IWeUghpEKVmEbcanTvudx6wChHy91Lf2UlGcQ0RyEvF7yMzMHPUjkUKYGMfWoR9fh33xvyE5
      0zC8XkI7dyEMA0lRkBQFFAXZ4UBOciF8x9EPPoJktWK/4sco2eUxK8mpGF01hFfeD6aO65bH
      kGynX+2KISgCAUKAJA1S5mgSgdlzDG33X5EzyrFedAeSHHtIKUyT4IaN+FatIu3221CURuT0
      EpTsSVGDtEgEz1+fRMnMJOWmgb2BMAx6//wEksVC5Ggt6Xd9DnvF6Q8zmaqK0dlJ5MAmhOnC
      DOuYfj9GXx+WjAyclZXYSkuQbLFHAFpTMz2PPEr2fd9BPpHG8PvpeuAXZPzjPVjz8k7IpmL2
      HMfsrcMyfvmg30UIAbqOGQ4jJyWNXQWoPlJN8bhkGpq99EUMCguLGJeVMnIFEAJhGJjBIEZv
      bzQ6ZWoqstOJZLUiTBP16FH8a9eht3fgnH0RstsNho7QDYRhIMJhzEAAMxBEljuRRCeRjmyE
      qiJZLEh2G0lLl+KaNzfmD6nXb0IEOrFOvXEUvtDIELpO5OhRfK+/iZKeRtpttyInxR6KCV2n
      55FHsebn477+Y9H1dNPE8+RTSDYbqZ+6BaOzi67f/JaML30BW0nJyWeFQGtsxL96DXprGyIS
      QcnMwFpQgJKRjpyUjJychOxyoXd0Et67D62pCUtONo4ZM7BPmYySkYEkywhNo/PnvyDtttuw
      lZcNkDFSXUPfCy+Sfe83EYaB0dWFevw4akMjpt+PCIURmhb90zWEpiNZFIRhILtcY1cBaqqr
      KR7npr7RQ29Yp6ioiPzstBEpgH/lKoLbtiMiESSXE9nlAiTMUBARDIEsIXQda0EByZdegm38
      +GirP0yEEKBpGB4P/tVriBw+TNKyZbgWL0K2Dy/ghzBNTK+XyNGjWPPysOTmIlkHL5/2K2Ik
      gun1YvR5Mb19GH1ejL4+TJ8Po7cXOSkJW1kZttJSrEWFCMMguHkLoZ27sIzLI/myS6PveaZh
      mKbR84c/YisvJ/nqq+h77nmErpN2x6f7W1etrY3u3z5Exle+jLWwEL21De+rr2J6vSRfew22
      khJk9xDLqaeWpetozc2E9+0ncvgIZiiIraQEoesoGRmkfuKmmN/e9/obBDZsQHa6ULKysJeV
      Yi0pRnanIDsdSFZr9FtardGGSo7u4+itrWNXAYLeXupbexhfkkNEchH29ZKZlTUiUwjT70cg
      ISe5Yu5wiogKpnFCMT44hs+Hf+UqQjt2YhmXh5KaipKWhpKejuxynhjvRoczZjCIWluL1tiI
      5HBgKy1F7+xC7+zEkpODY8pkJKcTrakJrbk5WrltdiSnEyU1BTklJdqTpaRE/+92I9vsmJFI
      9Jm6OtTGJoSmkrToYpzz56OcpS2VUFW6H/odZjiMJTuL9LvvGtRAaM3NdD/8e6wF+Rg9vaTc
      cD32adPOODQ8HWYohFpXh9bQSPLll8VsEOBE4+EPILuTz3ri3q8APt/IzVjPJ8FgENcoVdRz
      jVBV9O6eaAvd68Ho7cUMhaI/kixHx/J2O7bycmwlxQOHTaaJ1txC5NAhzEgEa1ER1oJ8LJmZ
      0WfP97toGsFNm0haunTI8rWWFvSOTpyzZp5xgj9WGLM9wFAk/AIlGE3ifh5gKFobj9Pt8TIu
      Lw/hSCXQ20VJcWG8xUrwEWPMKkAoFMJUw4TCQQ7sP8rChfMS3qEvQExTsONIC5WT8ocdcehs
      GLsKENHJzcvA0xugfHw5He0dpJQVfqS8QxumyaH6LqaV5nxYhsznFd0weWzFbnYcaSHN7WJq
      afaolxH3M8FDMWnSRCRbBhOmTKK0II+icaPpkXpscLzFw389sR6PPxRvUcYcqm7wm5e2keF2
      8G+fWsjqXcfPSTlxVwAhBHu3b2DFynWopxx+ttgc5GRnIitWrIqEw+H4yHmHXr+/genl2WzY
      3xhvUcYUEU3n589sYkJhBrdcOpVJRZm0dvtH5HPpTMRdAUDQE9CYlOOgqfvCiQGg6QZHGrr4
      yscr2VzViDn8qIIfaVTN4Cd/3cCiaUVct3ACkiRhUWQWTi1g4zloKMaAAkikuSy0eHXSz2AJ
      eq7YXdPKgy9uPa/7IAfrOqkoyCAr1UV+lpsjjV3nreyxTNXxDgqzU7jkopIBm1pLZ5Wwft/o
      e8yLuwK0HD/Ell1V9PT0EI8diaPNPTy7+gB1bZ5z6n/m/by7t4FlM4uRJIkrKstYuXNkY1wh
      BK9sOEKnJzCq8vX6QhyuP/9KubumjflTCgbt6KYm2clKdVHb3HvWeQoheHt7bcwopHFXgPyy
      KYwvykXVIhjn3hHYAFq7/fzxtV386y0LmFCQwfFWz3kpN6zqNHd5qSiIHsaZUJhJS5cPf+js
      XRXurG5lV3UrP39mM0cau0etEXl5/WF+9cIWenznb4JumCZHm3uYVJQ56J4kSVw5t4yVO4+d
      dS+w/1gHj7y+mz1H2wfdi7sCAJSUjSc3NYmgpp058SjR5w/zfy9t5UvXz2ZcppsZ5bnsPzb4
      A50Ldh5pYVZFbr/3Bosic/G0QjbubzirfIIRjWdXH+Drn1rI129dyF/e2svGUXCs2xcIU9PU
      w51XzeKJFXvP29CwyxMkxWXHbou9zD21JJtjLb2E1eHvAxmmyXNrDnDfZ5fw901HBs21xoQC
      CNPAkpJNbsoHd3Q0HEIRjV+9sJWbl01hQmG0tZlWls2Bus5z/mMLIVi/r4Gls0oGXL9kVgnv
      7q0fdvlCCJ5fc4Dlc8tJTXaQl5HMv39mCZuqGnlh7cEzTqqjTmhj33tray1XVJaxaHohsiyx
      9WDzsGT6oOytbWdmRe6Q9xVFZsHUQjZVDX8yvP1QCyW5qVw0Po+0ZAeH6jsH3B8DCiDYt+Ud
      ao7V0+E9dx6R3+N4q4cf/Xkdy2YWM3fSSbcl6W4noYh+Vq3LSPCHVLzByCBfPylJdtLdzmEP
      w4619HK81cOVleX9m2jJThvfuO1i+oIRnl1dNeSz3mCEHzy6lq6+wfOGsKqz7XAzS2dGJ6F3
      XT2Ll949hPd9S5CGabJxfwOB8Oh5mN5X287MitM73bp8Tilrd9cNa9VMCMHbO2r55KXR46A3
      LpnMKxuPDGhkxoACSCy++pNkJjuwcu6GQKpm8PSqKh59YzdfvWkel84uHZSmIj+d2pazn2Sd
      DRurGlk0rWhQrGVJkrhqXgXv7Dh2xnG8phv8ecVevnDd7EEuFi2KzOevvYi6Ng/bY3iY1g2T
      B1/YyvSybP7vpW39HiTeY+WOY1wyq6TfSVVqsoNPLJvM42/u6ZfrSEMXP3x0La9tqh61pcmw
      qtPtDVGQdXpDx3S3E7fLzjOrq9i4v4GjTT30+kIxFaK5y8fUkmwy3FHHWSW5qVgVZYBD4Lgr
      gCRJ5BdVcN31H6O1vrr/el93OwcPHSLQ1023L0x9Q9OIyzja1MP9j60lyWHlh3dfQlFOaky7
      8ZkVueyvPXfzACEEm/Y3snhG7Ogv08tyqG3uwRsInzaft7bVMqU0m6Kc2JVFkWX+6RPzeW7N
      Adp6/APKf2ZVFZOLs7j1smnMm1zAX9/Z198iqprB2j11XDm3fIBpxoKpheiGyepdx3nob9t5
      6d3D/MONc/nW7YvYuL9x2MM2XzDCgy9upaN3cM9zvLWXktzUM/pMBfjyx+dQmpdGR2+AlTuP
      8du/bee7f1zF7prWflmEELyw9iALp500oJQkiRuWTOLVU3qBMWVUc+pHr6trwOpwEPD1sbvm
      MAsXjNwYrqXbyz/cMCc67BAm+hBxCCry03h9c/U5M7Zr7w1gUWTcTsuQZdy8bBK/emEr3/jU
      Apwx3ERWN/WwcX8D37tzCcZpls1cdoUvXjeL37y0jfs+sxi7VWHzwWZaurz82y0LMAyDq+eV
      8ZuXtvPu3noWTy9k/b4GZk/Iw6pIg+T73FUz+MWzW7j+4gnMm5Lf34PZrQqN7Z7Tum+EqK/T
      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
      is1WlCIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='127' name='First insights' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB/CAYAAAC5QM2nAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dfVzN9///79+pPoQ+yFXa5PqizNU5keiQJsMslo9QrjJz2YzlalZN1nK1
      2maZGGpbhukzMRKKjmnRydWSchG1WUJsxwp1+p3fH+dUp+tSxsd53W83t5ve79f1+/V4vZ6v
      93m/Xs//U6vVagQCPeWlZ10AgeBZIgQg0GuEAAR6jRCAQK8RAhDoNUIAAr1GCECg1wgB6DkK
      heJZF+GZIgQg0GuEAAR6jRCAQK8RAhDoNUIAgidARVq4J+PsByCVSpH6yLXXlVwI9WSMnRSp
      VIpraPpTLIMcnxJ5PxkGdVQagT5xeSue/mfo7n+AncOaFXeixGDe2/ArdmsPs2dos7rpXHIf
      pIuu4hEexlSLukiwJEIAgppz6w8yMMOpS8lOfjMlCSU2ONRV568UGSsVClbWMhVhAgnKoLwQ
      iuc4ewZIpUjtHHH3jyFTpbkn95EiXXQASGWDs1RrAoUS6irFKfAicIBF0pImUGXpAaDKJMbf
      HUc7KVLpAOzHeRKRXkFerqFoUk0n1LXYBMra9TbSAUuIytGtSSLrhkp5K/hyYc2KzDY7R3f8
      YzJBLdBrEhISSl648Z16is0Ytb88S/1YrVbnZ59RfzZJonZcq1DnF4aJ9VZLJJPUITdKRQ2Z
      pJZIvNWxNUrvL/WhxYPUNuPWquVZj9Vq9WN11q+71IfOVZ6XWn1DHTJJopZ4a3O7tVM9Q2Kj
      9o7NLw6iWKu2l4xVb0otLMoUbR756uwzn6knSRzVYgYQlCBx91YuDvXA064lRoBBsz687TqY
      7MgYzj+N9BKDWRPThAleC7FraQQY0bLHeIb3qmFGrYYwrHc+J04VlzI5Xo6y7XDsuwAksnvr
      RW0eBjTr8zaug7PFGkCgy01SkpRwcQk2UaXvjSKnvCi1TE+zbuhLn5617YqtGDKsN+uCY0hc
      LEFCOglxmbQdbk8XgJspJClBKpWWiCUEINBBhUoFDF9LvN/QOugcVad3s9Z5FNNqyDB6r/uO
      +OTFSBoe53BqW4b7dNEWRYWKst8+CRNIoIMFnbsZwi+nOaOqOnRdpGfepx9mnOHshTrIsNUQ
      hvXOJPrEZbIV8aQWmT+ARWe6GULpXIQABCXo5+xGW+UevD7Yz/VcFaAiNzOJ/f7bOfU00rOc
      zJzBd9m5KpATt/M096/vJ6rQlLfqiTVpxERfJg9Q5eWV6cTFaMygDHkk38kTis0fTUlwdmvL
      B/uvoylGLplJ+4UABCUxsJxHyDYPXk0LYJLMBqnUnjELN3K1xyC6P5X0TBi55r/49b3EKmdb
      pFI7RnknQBNtAqZOeK99k//37VRspVLs391HViX5tRoyjN6p3/Ltya44vd5F544BlvNCSAuY
      hMxGitR+DAs3XuX/1GpxLpA+o1AoyiwM9QkxAwj0GiEAgV4jBCDQa4QABHqNEIBArxECEOg1
      QgACvUYIQKDXCAEIXizyfuNI4NyijS8D7MfhGXqWe2W+n1CRe/2IEIDgBUKVRujM8XjHtWfB
      rlgUiniit03lpR0zmbhKjrIw2L2zhL43BocpvkIAgheHrPBP2HC5N55fLi7a+GLcfjSfBE6n
      4YGlfKzdL3l6awDXBnxERLSfEIDgRSGdQ/vOwdD/4NSq5B0Dy3G49M4n5nAsALaLv8XXRUpL
      I7EGELwwpJOWCl27dCxn400rXrEwhN9vlbkjBCDQC8zbdoBrZQ/qEgIQ6AU3M9KgY9mTtYQA
      BC8IHeliBamXr5WzYyydKyn5GHbrVOaOEIDgBcGc10b2hpgfiCi1ZUyV/BMRqSY4jbItE0sI
      QPDC0Mr5Azy6nGP9/HUl9hd/sHA7OaM+Ym6/sstjcSyK4MXBoANTt+ymTZA/nzrbsvAhNGjc
      GNUDExwdJJgAmlOlF3FAG0XsCdZzXvw9wemETZ1A4C1HAn5Yicyk5F1hAglecCxw9Z2PlfIA
      Sz1Cy9wVM4Ce8+LPAJUjZgCBXiMEINBrhAAEeo0QgECvEQIQ6DVCAAK9RghAUCPObZ2Fb2TZ
      7+r/VxECEOg1QgACvUZ8DCeoFTlXo/n+h0jO33hAHvVo8EpfxrtPx7ZNPU2AW5H4HmjO7J5p
      fLfvF67efghNrBi/YB5DtGFuRfqymXfwHtG6OOFzW5mVKCF4Rm8ACu4msuebvfxy9TYPC8Co
      eVccXGcxxrJhYQS2+mYyytsRg19CCNxxmn+NXFkyzXIQAhDUij9u3KWby3LcLEypXy+f+5f2
      smHjT7z8sRNtCwMl7iG00WicF62jQ9OXUCZsxWfHCfp4DuHf1czn3o2bmDjMws/jZRoaFvAo
      82e+/jSUUx/PpX/94nD3TwWz+1R73Hy/pHtTwyrTFQIQ1IrOr7nQuegvQ5p2t8PaaB93CqCt
      dhJAMpHFLr2LQplY96NHZCYPodoCaCF9kxFFf9WjvtlgBnU/xu/3gDbay/ej2X3JDc/3etOw
      3FTKIgQgqBWlTRMN5oy5A1RufdSMnKtEf/8Dkedv8CCv+HI/CcUCqN8f18nV7/wgBCB4Apo1
      0XqwK0hh17ooXpo0l9ULzKhfD+AWkb6b6zjHexz/agupfWexYmoHCi2bc1tnkagbrEEjGtUr
      L37FiLdAghpwj+y7xjRrqjW671znapeRTOhV2PmfFhlcyx3CW0OLO39dIQQgqIRH3M3M5lEB
      kH+fS//dRPhjR4Z2095u0ADjS4kk3M8HCniUfYnor78mqoa/kzVp0oz7v93gfj6Qn8Pv5yMI
      +uGcToj6NFCeRXHjEQVAfs7vJOwKoESQJ0SYQIJKeExqhD87zz4gDyOa9xzJovdHFJv2/7Zj
      mvM1Pl+5gK8f1qNxu16McB7Pa3/srFEu9fu9hdOZILznbyfPqDHteo3A2fFVLlwtDNENp9lW
      BH+5mP0PCmjQshMD3nRjzN9eXKhlDcWOMD1H7AgTCPQYIQCBXiMEINBrqlwDKBSKf6osAsE/
      jlgE6zliESwQ6DFCAAK9RghAoNfUXgCqe5zd5Y27o12RX9a5gXJu10HhXkQS1w1FKpUiHeCD
      vKwnB/0i7zeO+LvjaCdFKh2A/ThPwpJzdAIouRDqWcrn74Uid6dlyApnzgApUtdQyjpDKp9a
      CiCdiIUTmfutirHBUcQrFJw4sI6xf6dyterI/wOkE+oqReojr6P0EomJVDLcx4fB+Sc4df55
      KNMzQpVG6Mw57Gszl++iFSgUsUSsdqLBn38WBiA5aBqLFa+ybFcsCoWC2F3LeFWxmGlByeV4
      gVFycO122syfTtcaFKNWAlAe/ILVvzRndtAnjG5vjAFgYNyeYV4zKeuLQ0ByPHKlNX1tbbG1
      VhIZk1h1nBeUnOhN/NBjJYFTNe5KwQiTTna8ZWuuDXGZY4ea4f7hVKSaABi1lDL1Q3eaHTrG
      5VLpKQ+uZGOTD1g0qFGNylELAWRzZH8s+YNdGVfW91gxpae5yd7su6yzo0Hug1TqSmg6qNLC
      mG0/QDu6aUe6Fd8TEziXMXZSpAPsGecZTpqu/FX3OKszTdqNmcumuHvFI0R6KK5SKT5yQCnH
      f4xd0RR5Wx7I3AmO2EmlmriO7vjHZGripofiKnVmQypwYJHGbClMB0CVSUyp6Tv0QoWTMwDJ
      xw6R2dUGqakp3XuYoZTHk6wbQLes5V2rskxVtMVzQzaH9l5ixChJJV9jNqSRyUMePSp1+dEj
      Hpo0KrnpRXmQlRub8MEi2xpthoFaCeAiFxKga0+rSjLNInzBeLxTJKyJiEcRH81G+3T8p84k
      rLSRlhOH/5xN/CV5g7F9dDwdJ6dQMHo1u08oiNu9iA6/+jMnMFH7UFUkBk5k5o6XmPpNLApF
      HOHzWvDjuxPxj8splUE6YR4rONlyMGOHdKIRkPkHjPgwlKh4BYp4OZsnFLBviRfhWYDFVMIU
      4Xh0BUYFoFAoUCgUrJQB5BDnP42PMxz4PCoehSKWb1zVhM5aqolbLukkxGViZmuNBWBpI8Mk
      M5oTpYeyyqi0TDVpi2fNDdJSrTDJDsXbXTsADbBnnGcoxWOIBWNndeIH7yAUtzUDZt5tBUHe
      P9Bp1liKx1wlMWu20+SDRdjWtPfztN8CJX5DUIIZ01bMo08zAzAwpru7L7M7XGTrbt3pX8WF
      kJ9otu4A369fwYoxOlZcTweGdTLBCDB6ZTTzJnUl+78HOQ2QHcHXu5QMXeTD6FeMACNaDvNi
      xSglEd8eIlsnhz8jvuGiy272bv6YFTMHYgr0mrCQ0T3MMNbYbnR3ccGWcySnVlGv7EN8G9EE
      t8WudDc2AIx4ZewMnJsncPTn7PLjpB/ncKoJMhtLzd+9+mNnmIH8l+ou16oqU/Xb4tmTw9/K
      sxxXNGO8316OKRQoYnexrH0M85aGUziGmMhWsmPWI9aMt0UqlWI7fg2PZu1gpY6bF2XMGr6q
      v5BFT9L7ecoCuJmShJJX6d5F96oF7TuB8lySzkr9DvVfX8a8niZl0iiNRftOkJ/ClXQgNZlz
      dMCqm27lDbDo0AESLnBR5+pdK1d8R5qVmHJVmTEEzp2gNWOkSAd7E1udiqUmc45rbBwvLTJD
      pNIpbM8E5d9/lxslWxFPKn2wKtxMYmBFz96QeiKeCieNmlCDtng+kOLqMZoeZpq1I0Ytkc5b
      gVvWPo7eBFCRFjYb95+64L8vDoVCQdw+f7r85M7ssDSNBaCU8+mWJixbXnPTp5BabIixoqc1
      HLhwkRwsnrgAGszo0rHqzl+MCY1qttahU6cOJSurSiRw2hKO9vIhOGoE7Y0NKHSgViUqFfl0
      ZO7uXbh3qE7u2Rw/mgCA92Ap3iXuHefnbBecTatZkReCjnSxusClyzDUUvd6F7q/qiT5byA7
      gnU7u+P942g6aR+ckUknRvt6kzZ2HRGvf4XNoa0cuHKRAza7yuTgLN2gMRM19mGF1GIGMGXQ
      a9YYxoaxp4JZ3LxbD0z4lUsl7NzLXPoVTHr3oLK1c/moOB13Asx60N0U6GpJb9K4mKJr4+aQ
      cjENrHtiVVlSN5M4l90Rl9mjtZ2/BnTsghXXiEuo5tidc4q4BENGBcQX2e0KhQJF1HKsSSDu
      VB3Y6LVpi38cc6xtDQnfd7rUAj2ZX8+0pkVz4NEjcjHAoPSjMTDAgFwePQJz19CS7alQoAj3
      oGtXD8IViio7P9TSBGrlvIz3emWwad4H7L+eiwrIU17lyKotxAFIpjDPOpMQvyDO3lOBKpdL
      2/wIybRixnhJ9TL5M4vMXBWQx29H/FkX8RDraeOwBDB14m0XE2ICVrL/tzwgj9tH1hIQY4LT
      5NepdFBt3hpzw2tEH71MHipyMxWEegYQUyKQBT16m0B8NDH3NGXIywPMR+My2JBzny0hSHGb
      PIA8JVdPBLPhp5tlssqJjSYWW/pLSj1NUyk2XSE2OpYcgOYtaA1cvZqGChW5mUns3x1NZnXK
      VJu2eAZ0mfgedse8WLjrEprHextF0Boi+03mdVPA/DXefHknPquOcD1X+8oj9zpHVvmw8+U3
      ec280uSrj7q25Gerz4S8r3YZNkgtkUjUNkOc1XMCYtVZhfcfZ6gPfzJdPWyQRC2R2KiHuHmp
      I1IfF8eP9VZLJJPUITdKJ3xDHTJJopaMmaCeXpS2m9orIlX9WDeYNn/nITZqiUSiHuQ0R/3V
      yWx1flEyIepJEonaO7ZMwdV/HPBSOw2SqCWSQWqnOQHq6D+i1d6lw/51Xh3yvpN6kESiltgM
      Ua+NL4z+hzq6qF4Stc2QkerpXiHquD/yy+QT622jlszeo75bTvNd/PINtcTGWx2brwl7bc8C
      9SgbTV7OcwLUh+XBZctfYZmqaItySEhIqOTu0yU/+6T6qznF9XD7JFpdovkeZ6gPB8wpqo+m
      bx1WZzyuMEnN854Uoi7TnSrgOf4cOp1QV2c2dKrajhM8OeJzaIFAjxECEOg1z7EJJPgnECaQ
      QKDHVPkCPDc3958oh+AZos/PWMwAAr1GCECg1wgBCPQaIQCBXlOr49EzwmbgFnyl+IJhY1p0
      sWfeh+8y1NyotmV7TsggbIYbwR38ka8YWEm4s3z+xgLClWA43J/DKwbyVH1GPDfkcTNmC59u
      O8j5jAfkGzamrY07H/k406mSLlCm7wDQmVnfbcW10LtewS1iA71YG5nKAxrTdcQSVi0cTOsS
      DVvA/Qs7Wb92B/EZD8iv3xQrxyX4eg6kRTVKXwf+AYbjL1/BQKAgN53YwGV8NMWDO9uDcWlb
      ZeQXh7NyjigdWLbsMas3KrjAQPrUNI2TfsiWp5XsBM85vwZNYmXGSBb5/cA6C2Pq5d3hTMiH
      zF3VhL2rHDCuIN5vN7Jw/lzOggobKZf49bMJVL1LSORQWnCHmHUzmb3+X+xYalOUrvLkamZu
      MmCu3w/4WhhDbhaph5K4BdUSQJ2aQPWMLRi6bD7DucTB4zfqMunnnpSEkyj79qZ///70VR5B
      fvZZl+if4d+j1rNrjTu2FsaaGc+oBX3fmcLg2HgqboIMbqR1ol1lIr8dyXfnR7J62VBaGGnS
      HbpsNSPPf0dk0Zk7V9iz+Q6TP13KUG3+9YxbYfmWA69Ws/x1vwao9wrt2sH13wo/C1aSFLYC
      t1EOyGQyHJ3msD72FkUOBU/6IZPNICwDCm7sYsEoB2R+JzUxk8JY4TYKB5kMmcMo3BYFEXur
      KCYF9y8QtsKNUQ4yZDJHJi7ayqn7xfczwmYgk/kRczOGoEUTcZTJkDlOxC/6TlGY3JQIPp7j
      rE1DhsMoN1aEJVV89ky5pCA/eovO1n0wNe2KZWslJxNSSoQ46SdDNiOMjAqunfSTIVseBVwh
      2E1TFt3wVdX1WdG2Xbuypp7yL/5q3aKST7B/48YDS7pW8o127rlEbg+R0U038XrdkA25TeI5
      7e8WZw/yX/ORDGv5pKV/GgIouM7VK9C53SsAZOxazIKfTJkTEolcfoxdq17lktdsvjxb6uHl
      xrP+va0oe73O6J4tgbNsXxbMLYcA9h+TI4/cie8bDzlxUiusgrN8OX0+P7w0ic2RcuRHw5hp
      up/F09cTX+J3nQQORtVnxMpQDsuP8uXoAqICdxSNTn/euk/7yevYGSlHLj/Kzve7czF4GV8n
      1qBzZSRy6lZr+kvaAt2wHmjCreNxlLZwK2PgCjly/+Fo7GA5crkc+VZXjbPpatf1OUCZxObF
      2/j3ggl0qyjMH7+Tces73pFphe7oxLQV2zitM7jdvZNFm1ZljZgWrdqQdecuANkZ1zE1+z+O
      By2qeICtgjoVQEFuOgc/CiTasC9vDmsLnOXHby8hm72AgS2MgHo07TkNl0H3OCLX9e6k4mJY
      FE0/3sP2TxazeHRnIJe/lWDaygzjeoBRYzoM9eRDZ828mf1TKOEPBuOxfCTmRVPkYoY/OMDO
      I7pbwK0Z625Lh8aajeJNmjUG5d8U9ps2Q6bhatuBxtqzaVoMdWZkayUXU8pubKmIjBMxXDEZ
      iLX2ifeUDsDw95Oczqg8XnWpfl2fJQXcPxXE9IlreOi+hWUDK9ni2saFYLlW5HI5x/Zu5l3L
      ZD6ZvZqTOlNvi+ZlpwjT5sWiyPn7Ab+fPsn9PvP56sdo5PJj7P1iNH8FljPAVkCdrwFGrtqL
      PPoznFoCGcmUPSrHGMdP5PxUYvVjgNVMH97podtoA1khP8ZHkt85FraeRRMdkTmMY422ha6k
      /ArtutFZd5WlNb/OJJU0PyrmNhHvOeAwazNn7hSeVWRMw8bVrzPZEQQEXwFlOAu0I5r98ijy
      uUJwQESdnMZQN3V9Wig56TeOWZsvUa//PLYf+JYF/ZvW6A1YPeNW9HVdzxf/SWPbfs2o0bxF
      K85fLFu3lIvnadWiOQBtO3aBV2wZWzSA1cPYYiSrvvgPF8KPUfpIofJ4ur8DtO1IF0NISDxX
      7SmpJPUwbmWJvasnAd/vYZXsEQe+ieQPoHO3V+FGCld0TYDcK6TcgL49Kpx8S3GFpDP5yCbN
      oG+LJ3ttm5t4ijOGw/E/VjyiyeVyfny/L5w5RWIdmCh1U9eng/LwagJZyLp3elDdYw1ylcpy
      +kMBd7KyaNxIc7yCcW8JLY/LSdENWJCC/HhLJL21I0FPKban9uksirXpp1wkq4Up9atRlqf8
      Q5g1Ti4vo9y7io8OppNbABTkkpV8kPXfJVQeNSOcjz8O50xWrqax8h5r9t42qM+/ANM3puLc
      OJYN/ge5mQfk3SEmcAOxjUcxYVh1d8C2xOxlSDgey/0CyHuQRsz6Vey4Ud365fLz8Z+hvzV9
      Sg15pn2s6czPHP9Z02tNW7SGrKtcVwJ5D0iLCyMyqVRy3XrQlxvIj18lDyjIy6Ogzur6NMjm
      2MEsxk4eWO3OD/Bn5HJclm4jLu2Bdj/1Hc6ELWWV3K64Pi1H4NbrIMtWx3CnsM6rl3Gwlxsj
      Che9xkOY4Z5P8Pufc/JOHlBAbvpB/DdnM3ls9V5CP2U/wfXo9s4mNjZcw+ogd15fnQ/1m9Kh
      hyPj5w2qPKr5QBzbf82Wd4K5eP8RUJ+mVo6s8nlD83ahXh/mb/+S5uvX8s6I1TzIr4+51IV1
      26fRv6KXz2XozLgPpnF+qR9O9n407mqP+4IFTLo0t9Tm+AooOEvCKej7rqTs++62Evq3hl0J
      ZylwHEi3CUtx+WU5Xm/IqN/UCtmUOfTvBnLddYLpGyxbdQWvtbN47et86vdZRMjnY2hTJ3V9
      Glwh5dcrHHCTEVzmXvHvQ5rfNyj6u41LIJ+32MKn3hPwKvzxrNdbLC9RH2NsPDexMNCLaSM+
      KvohbNNCG522rkc71w1sbLqWNdNGsPxBPvXN7Zj60bpq/wZV5YYYff5UVh9ITk7G0tKy6oAv
      KOJbIIFeIwQg0GuEAAR6jRCAQK+p8i2QsfEzfc0g+AfQ52csZgCBXiMEINBrhAAEeo0QgECv
      qZ0ASnkllNo5MmFuIPuv1Gw7Sa2Q+5T0lFjtOBrPlJWRHT5H6/6o6rCCJyPvtyP4T7TDtdwG
      luMj1XVDpf1X6mErL4TiOcZO6xmzam+dutRCADnE+et6JVQQHxXKhyMesWPPuSdP9rlB49ao
      41wfppulEq94sg+b5T4181yuN+T9xhH/iQyfcwBVmyblh0m/zlXr5USV9gKje1x+ehge82Kw
      9I8iXhFPlL8lMfM8ynohrYBaCCCRqIhsuk6ap/VKCAbGZvQYvZzvl/+D5/nLVuq4Cq1Dck4R
      l2CCtNdobGQmJBw9/px5WvzfJv3HLSikn3Bg72dMqcg5YnoamR3aVbK1UsXp77+h+fINuHc3
      xgADjLu7s2F5c775vrT7pfKp9RpA+Xdl/q00U5jr5/vZ5T0Z+wEaM8k98HTJPbfKC4R6jtPc
      l9rh6O5PTKZu8ZVc0HUA7ejOhkRtvmWcS99GHjiXCY522imzvPSqJic2mlhDO/r3gm5WfSAh
      jpKuvLR1KzF1617T/H/RASB1A87a6bs4vMblk7u2nAPsJ+O97zJ56AcWLr4sH9aeytyzpV+/
      Sh+ryvY7XCbhZA8cBpcUkMlgB3qcTCjjTb48aiEACcOdTMncvhCPUAW3K3lymSl36DgnmCO/
      xHP4CycKdi9gaZFH6XTCPGaxt/kCdsUqUMRHsKZXEkumBZKoAlCRHPw2s3Y85j8bozXTXPB0
      zB//WVFu/MEIPgyNIl6hIF6+mQkF+1jiFV4Dd6QqEk/FgW1/JAbQsL8t1sRx/OeaOLOTsVKh
      IGAUUOi0TaEgbKrGNWBW+ALGe6cgWRNBvCKe6I32pPtPZWZ152494GZGGrHeg7UD2QDsR7nj
      v/+KzuB5l9s5rWlV2kVpw1a0zrnN3WrkUQsBNMR2+fdsWdyfP0M8GDnYnsmemzjyW1klmNk4
      IDXTTFHN+sxihiMk7DvKTYDE3Wy9OBQPTztaGgEGzejztiuDsyOJOQ9kR7BhSxr95vvhUjjN
      tbfjLduKvKT1YsLCYv+zBsbdcXGxhXPJVOX/ughVHNGH87G27a9x/2oqxaZrPifiEqs1rVZN
      It8EJWA2bQXz+jQrmrp9Z3fg4tbdJFadgF5g6/WLju0fS8TnE1F9445HaFrxczBrSfMyMZvT
      0qx6edTOBDJoRh8XX749FkvMt74MUv2E91gHZuyqbBTTOm++eJlrFDrTjmKJjc4qf7A3sSj5
      OwetA+iu9K2GE20NKjJjApk7wRE7bXqDvavl/rqY86c4kW9Gj+6F1qfGM2P+iTjO1IUCbqaQ
      pIRXS3oQ1zgBV54jSUwC5WCESadheH05H8NNYZwuvJxZ3kh/l9uZZS6WSx3tCDPCpJMdsz4b
      QJ/Vjsz97BviXLywrSyKSSMaAiqVChjO2ng/hpZXmrialUSVGMi0JUfp5RNM1AitjSn3oTr+
      rwtJjIlEiZLtU6RsL3HnMLHnl9Gvmh5eBU+BVmaY5ydrZ4DmtGx4i6wcKOGpPSeLWw3LmxnK
      8uQzgCqPvDKjoQGtzMwgX1WJqZBF/IlU6GNFN8CiczcM+YXTFQ2tvSTYksqZar7bvZl0juyO
      LsweXfkCq2KSiZcr6eoRXsoJczAuJkrk8clPkmhJzLvRwwR+LelBnMsaD+L0qLkH8RcQJcry
      HnlWJje1gyd0wXpgEtGxJQMqY6NJGmhNl3Kil+bJBXDze+aM8yT4xFWUeQAqcq/vJ2hHKqaj
      HOitW6DsTE0Y1T3Ohn7MtnOmuExy1FSinzNubZXs8Sp2tq3KzSRpvz/bTwENHZkxvS0nv1zB
      rktaZ9y3FRyMK//cnuatzTG8Fs3Ry3mgyiVTEYpnQLV2+GpIPsahTDNsrUv3wl70tzMk89Ax
      NBLQ2JmZl6+hROMg/ETofi6UimXV0xrSYoi+nAeoyMtTARKmzLMmM8SPoLP3NE6xL23DLyQT
      qxnjERMMQBKfO03Ef3+S1lG6itzrR1g1/0vyi9rIgH4Tp3DX34Ntl3KL2tHD/y5TJvarlnnz
      5CaQ+WgWz7jHF0EL2Lkkiwf50KBZJ14dsZYQD1mJUwJyfgnCff9CbjzIp8HL/aFXeBUAAAEL
      SURBVHD94nveLvSabmDJvJBtNPL1JWCSjJVF6biycLCmiJbzQtjWyBffuQ6s06YxxWtducVq
      6LAQr5Nz8J9ky+YGL9PvrXfxencox5dUr1rpCXFkmsiwKbNN1gBJf1s4EEdC+jwsLSyZ7OXK
      z+8vYai0Ac162jPDwxZLjnFDJ5apkzdrLy9h1VRbNuY3QLpsJ5vGmdPK+XN2m3yKz1InbO49
      xLBxd4YtD+XDN/Vh+Nf6gC7xVsIZ6QbN/0YFKFgps2V5eAPCPwtg6toL3HsIDZr1xH7+Vrbo
      tpGFKxuCVPguH47N7w9p8PIQ3g7agGs1m/Epe4mU4yNdxFWP8KLXf4LnC+ElUiDQY/4/AuQV
      YimGqhIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Float CLTV vs. Claims &amp; UnitEconomics' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MotherSheet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Demografics' width='192'>
      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
      BwAYlIIGd7iLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='107' name='UE Overall' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABrCAYAAAAhB40qAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUPElEQVR4nO2deVQUV9qHnxmX5ANlVCJKzECi4L6g3YyA0orExhENJjgwilskBpcYjSNu
      jDBq0CjEJS5HzGBEJQa/mMSocUFAWkEMDbigohgjREVNcCYd5ZtAM/X90Q00CMgqxrrPORxO
      1b33fW8tv7rvra6q93eSJEkIBDLl903dAYGgKRECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCB
      rBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCB
      rBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCB
      rBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCBrBECEMgaIQCB
      rBECEMgaIQCBrBECEMgaIQCBrGn+uAparfZJ9EMgaBJ+J0mS1NSdEAiaChECCWSNEIBA1ggB
      CGRNwwggLYxhSiVKpTMhGn2DmHx60RCiVOIXlfNoSYgSpV8UOWUrUCqVlfz5UUlzQRPw2LtA
      NSEt/jA6jxBC/rOMdWfOgUrREGafEboxe180k22buh+CymiAEeASKRodjgNccHFxRHc4nrT6
      GxUIngj1F8ClBI7kdcNJaYllj95Y6zSkXCorvhvzFkrnBRx9aNoojbBhSt6IuGpY1OcRv2oq
      aldDGOU2dj5R53WltXOi/FAqQ9AAOs0qxriWhCAPubQvmKmebjgrK28LoDsfQ/BEYx3XMcxc
      t44FHgZ7xhqcj5rPWDdnlEolruqprIrP41kP5gQNIICc1GTyrF1wtAV6OqGyyCPu5NXS8g5D
      h+NQdJLkNJPTKS2ewzobPNy6Ag9JXjWF93Pd2XA0Ba02kZ1+ElEBC9l3t6KzaGYHJWE15HWG
      2rUC/s3t+114c8N+ErVatMn7WdLrAhvnbuFbvUmbgPXkOIWxP1mLNuFTZj6XQny+qdnZBHz1
      AnNiEtFqU9i/uh+ZC6awLk1I4FmnngLI4cSxK1ionOgJQD8GurYgV3O6bCLYYSjDHYo4eeZc
      aatLKRp0Nh64dQXyj7BrfxsmBPrRw6w50JI/vu6P9wupHD9lcpbyb/bvvIjv3q/Y9n4Q0wZZ
      Ap14ddpkXO0saAnQ0orhvq9hrbvA5VuGVml7I7loPYWgWUqsWgLNzWhtbjr1SWNv5EWGzZ6P
      q6EC7fq/hd+QfA7Hn6P+XGGjd8VJsOnoI2hK6jcJzteScgX6+3UvNderrwMcOknK3cnYdgDo
      wNDhDoRFxJMWqEBBDqnJedh4uNEV4MolzvIdqT5KtlQw3+3BA8DSuPQTvfw+ZKR1+S7rzscQ
      vn4nJy/f5Zei0pbG/zlkntVBnx4GX5VxK4tMHVxc4MTRimWeDytrUUvEJPhppl4CyD9xnFSA
      4CEog8uXnTiVj6+34eTtMHQ4DmG7SbkUiML8BMeu2OARYjwl9XqK6MLMvTFM7VydNzvsOlfo
      7t19LAxYT8GEjcRsNV7hc6Lw8z5W843Q69EDHmtSCB1Wk91hTisL0BcX19yH4KmlHiHQQ84k
      p9LCcy0pWi3a0r+jLHaE1OQzlF4/OwxluINhbpCvTeFKSfgD0KUrvfiO5NSKAX8NuHKe1KJh
      TA4wnvyP8ALtOwK38qjSuq093VvA6W/TazjpfZnO3eC7cxcpP9W+yuULYOHQG3Gx/+1QdwE8
      TCQuEVwGKioMI5YonbpBYhyJZQpg6HAHcjWH2a1JLQt/ADqNxndIC86uX8Bm7T0KAQp1XDsZ
      wcaDt6rvQ8cXseE0cQn30VOI7losq/6+g+ulFcwZ4uWJxdntfHjgBwqBwnta4lLyTIz8Ce8J
      Nug+X8qSA99ToAf0BeRlHmDVJ2cqcWrJiIleWCZtIijmsqF+4T20m0PZkdcLfx/xG8hviToL
      QJ92hmQccRlo/kiZraML1iRzxuQuSoehw3G4sotdSd3wGmEakVswcvUXrHmtGfvfG4mLUomz
      xzhWxj6PUtGh+k50Hcc/pnUlOViNk7MHs3bexzNwCqaRlLkqiK2Bfbi65nVclK74rLlIW/v2
      JjWa03PWDrbP7sP1teNROSlRuo3hvS3X6D24R6VuzV0Ws+fj8Tz3vzNxd1KidPFmSZotcyM2
      4vfI5b+ySbD4JfhpQZaPQ1/f7ovPlyp2HphlvHslkCvP/MNwtw5uJOLkNXSFAHoKvj/A1pjv
      sBk1XJz8goZ5Fuhppk2vLhSE/Z2xS65x//+gReuX6e/7Ef/0r/LGqEBGyDIEEghKeOZDIIGg
      Oh4bAhUUFDyJfggElXJP90uj2hcjgEDWCAEIZI0QgEDWCAEIZE29BKBL28w0T3dU7mNZuP8G
      5Z6PLM5gw5jxbMuq7qnJJEJVKlSlf+54TpjH5vhbhmeCTGuGqlCpQkkq3wE2z/BCrVKhUvkT
      nWt0fSeR8GmeuKsqafObJ5dofxUq/2hy620rgw2jDPvePTQJOT7fWncBFMQRtiAdlw2HSfh8
      JmYfz2VTRtkuzP1sEwlugfh3b/ZYU/YBu9FoNGgSDrBlph2XPhiHT2hShactH+kAcWELiCkc
      w5bjGjSaSPxsAPI5+MFSDv/el4jjGjSaIAbVeSOfcTI0xOrcWbRoMEWntZxv6v40AXUXQEYK
      iS8Nwc2uJc3aDuNV5/vEaoy7UHeMrV92ZdG0/jz+9DehmRm2LjP56KMJmB0NJiyu7BbsoKCK
      J/NP3LldBJ27YlfuUehssi7Ay6qhFdY/K9jgF6lBE+mHTT0tZaUmoRvgwMCBAxmgi0WT0SAd
      /E1RZwHk3rgOzZuVGvjjy/boHhQAxWR8sovnZs/Ayaxutpt1H4N33yIS405RIoHcaP+ycCY3
      Gn/VBCKygaOLjeGTP9HRoahUCzhUBNkRE4zrS0IgHZnRQUzwdEelUqH2mkF44p2yYT8ptDSM
      Kr4RwxxPd1ShxuCp+A6J4TPwUpeEaUFEZ5aNTyV9i78Vz+Z54wwhmXocoXE/mmxVMXcSw5nh
      pTaEHJ4TCDqUW3VZdGaVI2BSaPkQqGb+K5KF5vgd7B37Y2nZjZ4ddSSlZpUV39vHOyp3lsaV
      /x0oY8MoVOO3k12TfudG469SEZoE6JIIH6duoNCt4aizAGxe7gz6Yv5rXP7hRjYWrcwg9zO2
      3p3Iu7YJBI1To1KpeTM8kTu1CjCt6NW3I5zJqHxYtvEjUrObAHvAY5UhfNJE4ucXhEazCg9M
      wirjqJEbE8icg5bM2HEYjSaBmBV9uLx0ermwDYCCFMLnRqLrN4LRfa2AAlLCpxN20401XyWg
      0Rxmm6/EnjnB7L9n2jCVb44+z5+XRXFMc5xNo4s5uu5TSi6qurh/MGn5OboviOa4RsPhHUtQ
      PP+z0WU408Nu4rbmKxI0Gg5v80XaM4fg8g4eQ/X+HyE3jTN3OjJQYQN0x3GQBXdOJBtPbMDK
      Fbe+RSSnZJjMDTLQxOp46VVX7GvV71xiApeR8sJgRg/uwqMP0DcddQ+B+jsx5GYiCdcKKf5X
      PMdPt2O46mUSd11m5NxX+HLJR0gTY0g4vgXV5eV8cLA2BxPMzFtDkb6BJmYZfLnrMqrpcxjU
      viXQjLZ9p+A72CRsA0DPxeijtH3/cz5ZGUjgaHvIj+WzQ3/AZ64P3cyaAS3pNHoSr1mmk3Da
      9KV9R16f6kLn1i2BlrRp1xp0D4wjWAafrEukjfdC3hnUnpZAy/Y9ecO9D5BP7GeH+IPPXHy6
      mdEMaNlpNJNesyQ94TSmHqqnOv+PknsynmyLQTgaX+fuq3Smxc0kvi29PFvh6ta3/NwgK5Uk
      3Uu86mpfq37/fGgPWd47idkYTOCbTqVveT8N1P1pUDN3VsS5GxeGEbLXjNUBW2ge8T5eGaGo
      bg5j1ci2NKMtb04dhmp7LLleNY1b88lIzYbBvvSvcwdNyL3EeR0VfJuhXqlBXW5dc3pNCzFO
      po1kZZIODChXrztv763Fdx1uX+WSDvr1613JnCiLzEcd0P3tvY335Yj8/ayNyAaymaPaV64o
      Yu1+Rqz3whKw8g5mTsJYVm3zYO/bZkSH7ab5lEim2teu33/wXEjQU3onooF+Bygm4+Nw8sZO
      Y5AZYNmejujRGy/ft2/mQutWNR76irP2EZPegiHug6njNKI8Nl3o2gJS087WfkR5xY4efM+3
      abUbwcrxYj8UHeHcucxK/L+CXQ/4/ts06uGhVhSknSG9hQerEjTGMNHw9+XfBkD6GdJKhw3D
      KHDnRDLZ+RmkZpdc/Zum341BgwigOCuSsDNqpo+yMqzo7saIlzQcPfoviguvcfTYNQa4OT9+
      6Csu4G56NAsX7abAYzmB7g1y+gOOePm+hO6rFfzjmxwKio2+Ln1D+O7U6pu++Ge8B7fg/Jal
      bEv/0fjO8i9cT95OxJHbNfTfnb++NZj8favZlGSwUVyQwzdxF4AX+bP3YFqc38LSben8aHDA
      L9eT2R5xhJp6qDkFnDpxCgY60r/CcGTZ3xF7TnHiVFngZOXqRt+bScTGJJH+0quUnv/17Ldh
      4m6cIAOlvwk94Uly/V+IKb5BdNjX9Jq1l7Jb/vZMXvkuwYt9cfsAuviuZG2JOCohO2ICqgiA
      FrS26cfId/ewclgnGu4uZjO6v72VLear+WDzVEZ8UATPt6VzbzU+swY/pq0F6hXRPLduGWsX
      ebP7P9CidXu6Or/Bm2895p1lUyvqFUQ/t45la/x49V//oUXrbri9t5SRpmVrF+FtcED7rs68
      8eZb1NxDDSnOIPUMDHhX8ejoaqNgYEeISc2gWD3IEK5ZueLWdwMbPsvGPuAd7E2qP9F+NxKP
      fSFGPA4taErE49ACQSMiBCCQNUIAAlkjBCCQNeKrEAJZI0YAgawRAhDIGiEAgawRAhDImnoJ
      wJC90eSz365qpgbHkHG/QqoJY8LokAZ4vFETInJsNRT66/uYP7Ykw2Yl+7ShjltOFH4NdPwb
      mgYYATxZa8wOk7xvLSP0u5jp6U/U9fpkWMwhyk+J8onssSfpq/6YpoytH1eJnL+K9G5LOJSi
      RatdhqoB+vdbo0G/Dt3Sqjc+Kz+l1d88CJ4fifMXAYZMMKplaLXLGsSHapmWBjIlc+5wOxes
      vbrSrqqzoAGP29NKI8wBLFD7emGRe5DYkoTZjwyBevLiVzFV7VoudDqvK6nrzcYrwKF5peFV
      SduKV8CS5dgfYlk3cwyuxmTYwUdNn1Iv78/ZbSzz9+c81ld5qrBhLLufEVUWTriOYebWZMoi
      wcpGmYrrSpZj+SF2HTPHGPy4jgnGsCmGcm9DZ5lXEnZWMXIV/hDLqqlqw/5wdmNi8NdcLfnW
      jCYEpXIeh4ArG72rTt36yHHTEKJU4rc9g4yYYCa6ORuSk0+P5JJpQk3deaLmj8XNWYlS6cqY
      vx8kr6LtpwWpHtzYMV5SKIKlxIoFDw5J8xQKadLumyUVpfEKhRRcUvGnz6XpCjdpyTd3pV8l
      SSp6eFtK3TFH+iip1LK0Y7xCUgQ/YvkRn4ZltfTOVo2U/fOvkiT9KqV/OEpSuK2RtMY6Px8J
      lAY7jZXWaAz+fr17QYo5cvaxvkypzkaRdo2kVqilwK9zjWXHpGC1QlIvT5IeVOmj4jrjsvod
      aasmWzJsSrr04SiF5LZGW9aqqn1uyp3PpelOTtKkTelSfpEkFT28JEVOcpKcJu2WbpRWSpSC
      FQpp/I4bVdupeNyMbZzGLpe+vnBbelgkSUX5X0jvKhTS9M9/Kt2O3ZOcJKdJm6TUu79KklQk
      PbywWfIpZ+fpoXHuApm3ohWg11cxD3jwAB3mWHVqhyF3tTXKyeuZ7VJXh078JcAVOwvD+7Dt
      LC1A98CYpTKNiNXxtPnrUt5ztTK8j2vVGx+PfrWwX52NfPb/MwbdsHmEjP6jsWw4S4M80e3f
      xZGav9Rr3JS/EOBqh2FT2mHYlNrlK07buZlU6ykEzepPu+bQ3KwHU5dPp/PFSPam1bI/ldB5
      1CRG97bGrDk0b2dJG0D34IHR+V4iL1ozJWgWSmPicbPW5k9tJpbGEcDDBzwALFq1qrzcdiiv
      9fs3uwKGM3H+VvZqjdkZGwNjIuwB/fvW/SBUa+MKl85C517dy73y2dy2M51J5fzFujqtK7fI
      yqwkObjtK9ih42xm42bny8k8i44+9PiNJOBpHAFkXSQDa3r3qOolSFt8I+OI3xXGaLtrHAgc
      j8rNn+h63TkSCGpPIwhAxzeffoHOZhTDq81C1xILOyU+08PZFRvNTJtzbIr+tuG706k/f7KG
      9IzzNUyEXVsb3ejpANcvZmEaqDzMush1HOnbq65O60onuve2gAuXuWq6+uplLmCBQ+/GTeP9
      QvuOwD1+rG3o10Q0qAAKddeIXeHPiuSuzA73p8pRMHkjb6+L5ZohdSP6wl/RA//z/HPGCrb0
      drCAlDji7+uBQgorfi23xvRk4owh/PTZCtadNCTi1hd8z4Gj52rhqzoblni95YtF/FqWlSbj
      jmXN2ngsvCYywhJKM9Zfu8Z1PegL8sg8sJe4Otwase3tgAUpxMXfRw8UVrJjFJNm4Zi3g9DN
      GdzXg77gMttDd5DXy5/GzuNtPsQLT4tUtq0+wA+GnYE2LqXCXSDD3SSlXxQlAZnhB84nnz+5
      AQRQdkvOxXMme4rGsuVQJJM7VxNx9x7BaL5kkdcQlEolTu4zOWY9m/UBZUdHEbCe2X3OEaJ2
      QunswYZ6fLfSYuRqvggdwOUV3rgolbh6BpNKm1r5qs5Gc8V77Pl4PP+NmsQQpRIX7838+PpH
      7FnsYpwXmKOetZjBP3+Mj5MzwyetIPZ5JwZb12FjFAGsn92HcyFqnJTOeFTW2Q7ebNi7nO5p
      C/FyMuzfBNvFRH3sR+Ne/wFzFUFbA+lzdQ2vuyhx9VnDxbb2tH98yyZBvA8gkDXiYTiBrPl/
      BfsYm1GqKIYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='UE Overall static' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='UE Product Coverage' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Education' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='UE per Employment' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3wc53W3fc3O9r5Y9F5JgB3sFLsokWqUZDVXyT3FcY3tvM6TPLGcJ3Fs
      p9ixk7jJLZasYhWrURRFikVibwAJovfeFovtZdr7ASAFNkkgVShyr98PHzA75Z575sxdzjn/
      W9A0TSNFimsU3ftdgBQp3k9SBpDimiZlACmuaVIGkOKaJmUAKa5pUgaQYtqEQiEGBgbe72K8
      I6QMIMW00TQNVVXf72K8I6QMIMU1jf79LkCKFJeCqiTwDQwQTMjY0gvIduqJBscY8QURTE4y
      szMwi299npQBpPhAMlL3Ij/8xW7M+TlUb/oMNxVHeO63v+SIz8TM2ddx64duJNfy1udJGUCK
      DyTt+17CX/AhvvvNm/GKGoMnjvB6u8rHvvYlritLe9vnEVKxQCmmSzAYJBQKkZeX965eR4kN
      s+fJ3/On/c0kNAszN3yEz94+k7o//p6fP/Ik3WRTkudiwZo1dG15mqNDUfIKCiidu4FPfW4z
      0rEneeipg4QUkYyq6/mrz99BjkUj3FfLQ//zOxpGk6ClSDFNAoGA1tvb+y5fJabVP/197Svf
      e1obiEpa3HdC+48vfkr79ZFxTdM0bdeP7tf+6oevagFN0zRN0bqOPKF99kvf0er7gpqmydrQ
      kUe1L3/zP7R6X1KTIn3a0//4Ge0fnmrVYr6T2n9+8XPav79YrwWTSS3VBUpxZZIY4fjxZgZ6
      B/nv7x4DVPqHR8jpHIRFrrc4OEpz7Sn6ugf4ww//EYBwzzABYye9uf0cHM/mwY2VOPRCagyQ
      4gpFkYglJYpX3ccXbi6a2CbosDjeTv9eJhFLYi1bz1984frJuX4Bo9VF9MSjqAYTlkkHQMoP
      kOLKxOqlsjSPnvrjRIwesrIycZg1gqHY2zjYTklFEYm+E/RINjKyskh3GgkHwqSXz2UGveys
      HSSuqqkWIMWVipMFt93H+od+yw//5Z/IdNtwenJYtOE2CrPf6lgDRUtv5f6uh/jND77LliwH
      Npub2Stu5sblc/j05zbwqz/8iO8+b0/NAqWYPu/VLBCoxIN+fMEoqiZgMNtwe1yY9Tpi40OE
      ceB1W9GhIcUjjIWSeDxujHodoCHHQ4yMBpA1AZ3BhDstDatRRFAl/KMjRBJKygBSTJ/3zgDe
      fVJjgBTXNCkDSHFNkzKAFNc0KQNIcU2TMoAUVwEaipwkFk+iqtOb00kZQIqrAIWWvQ/xjW/9
      nC5/clpHpgwgxTVNyhOc4qojOtrC1j8+xu4TvcR1dmatvZOP37YCR7Sbx3/1FLZVC/Ht3Mqx
      nnjKAFJcbWhIqkjZig9z42fL0PoO8cPvP8KLxYXcVxBloPMoA/Yq/v4b3+XOE0+mDCDF1YaA
      3ZWOqX0ff/r9q4RCfgYDQWz+OBQAZDBv+Ry8ZgMBkyllACmuArTJPwTQFDoPPc2vn+tlxc03
      MMcWItYzxMXy41OD4BQfUDQURUaWFRQpSm9LN7bCfGwmkaGmdnQlS1izegkzCrOwvIk6RKoF
      SPEBRSM40MieV/cyEI4xMprJxruW4bHpyamagfLkdn7zyx4KPCLdvgiZFzlLKho0xbS5MqJB
      NRJhH13tnQSSImk5RRTkpGHUacjxID0dnfgiCmnZuRiSEXDlkGtX6e3ow5BbSI7TghIaThlA
      iulzZRjAO0NqDJDimuaiLUBLSwupxiHFhVAUBVmWMZlM73dRLpuLGoCqqikDSHFBwuEwoVCI
      nJyc97sol81FZ4F0ulTvKMWFEQQBQRAQxbehPnuFk3rLU1zTTMsPMLLnv/ncv+3EneXBqNOT
      X7mSzR+6iTkFXozJMV74xT+wzXAn//TZG3FOq3uo0HPsOX7wRCtf/upfUpFtP+vXrp2/4DvP
      xvnej7580fnc86h/nPv/s42//v7/odo9nbK8feLjJ/jNT7aTf+Nt3Lh0BuYr/nMSp+HlrQyX
      rWZtuXdik5zgxP6X8adfx9qZbloPPc0z29sRzKdfDRsLbrubGyrfds2/e6hJEgefJ7DtFGc6
      51IURaok/fufwnjWvgmkzgbCr+wmORwA0YHlpnuxz89HJ8SI732Z0L5T0zMATU5gSVvH//3l
      FymJjbH3T7/hf3/yM+790hdZkWuiYNYKluvzMFxCy6gqEtFYnAvlM6hygkg0zrRGJEqSSDSO
      /C4OYwItDVjmLEQIDxGOl2G2XuldAg1FlpAV9QLbJuIJVEs6K+9Yx3Vzr4AX/lx0Rkwr7iZz
      xd2TG1SU+u2Mt6RjOHffxCiJU0OYb/0U7lwnWrib4B+eJZ79eSwcJHgMXJ//+qV7gkVLGitu
      /TBtjd9l9+EWFt4xG1GnIUUSaJpGwt/Jq889y+uNQ5jSS7n+1ttZVpFOoOMwL76wg8ahEAZX
      AWtvvZPVsyeVjtQoDa/8Lw839mIpWMR9991Mudd6zpUlBo6/wm+feZ2QZqfy+rv4+LqZiIKA
      Gurg0V//nlODCTy6MWQl/VJv720wTnO9wqJbZzK0vw5/OEa61Y463sa2OokbVlWiBzRVofX4
      TrSCNVRkaDS+9hIHm0dQ7TnccMstFDp1EG5hV5OVxTlBdu45SNaqT7DQ7efE4b3UtAyjmt3M
      Xr6WpeWZiDoBNTrE3ld30dQXRHSmU1Awg+tWzcaKykjTXl7Z10RUdDB/9SaWlLxLzd+VQGKM
      aFMY8/xFCOf+ZszEetON6AyTzbI9D0O6ghpX0eKjUDQPY5r58sYAepuLiopMuk51kEwkGO44
      QW3LIJIUpeaVP7K7P5NPf/Fr3H9jOcHRIeJJhWhCo2zNvXz1r7/GrVUKj/3uCTp9k3J3Yz7k
      suv50l99guLAa3z/oZ2cnd+jMHz0WX7waD0bP/dVvvTJ1Qz+8d94rC6GGung4e/9gDrrKv78
      a1/lgRvnIerOq5Z3DLmviWZ3JZXeDMo9cVoHAwAIdjtiUw3NkYmmR01001CXxObWMXjoJZpN
      89h8733cuiSNvc++Qn9cg6SfhhM17DvWQe7ijczLFokGw4hZldx+74f50A2z6H39EL0JGTU2
      wK4XXiaQuZi7P3Ifty/x0NI0goRGtOMAO9vNXH/nPdx94zwG9rxIzag8vRtTJEL+EQYGBib/
      Rgknp3mO9wJNRe5uQzVnYMrxnP+7aJh4+TUVNTJO8tDzJFiOpdCEUL4a08hOwsdbLy8WSNAJ
      6A16dKrG2TOmAnq9nsR4Dy2dw1TPXc5NDgs6QcNYWMb4yZMcfL2O0FCcmN/PcDwxEamaXsDc
      0nwyc+zcunE5W//1KO3cypnhhDJOzYFDhLUcuo68ThcyosHHvuPt3Cw1srPbzVf/bi1FVhGG
      7Ajv2vufpLO5n7zy6zAIenJLM3l1Xy+xeXlY9FksqBbYVTvCzOsyCDYeIVS2imzdKC/XhTBW
      9HKqthcAndxCx8Bacl2QiEQpvuU2KrIsCIApM4vMWDvNp04gqwkS44OMxBTcY934M2dxS3UJ
      FoMONBdGIQjEaT3RA5Y0mk+eAMBgCnKqZYQF6dOYrkwEaanZx0j36eVVPFRvWs3sDOc7WoOX
      iybHSbZ1IOasQ7Rc+DuuaRpqfwOR/TUohjJcH1qKKAKyCUNJHona3ZcZDJeUGPcFsWWloRen
      FEI0M3PVHdypO8DxfU+z+zmYf8u93LG0kKPP/ZqXOq0smleOzWbFaAhd8NRWmx1RBQneMAAp
      QSAUQhaLsVgmHtCsm/6MlRW5hPoOkjBZSTNe8HTvLDEfLR09nDz5FH0HTKCE6OnR075xGbOd
      4C6fh/DscUYXLaOtXmbe5mzEZBtjMcg1mc7cT1n1Ogq8IsjgLphD2eTLj5akr+E4R9qDZGal
      YRI0DGKcaEwjmQCPy4oonvvQYwTGJUSn6YyDylS+jBkF03xxrV4Wrl97ZY4BpqAF2kkM27Ct
      yTy/+3MafwOhbXXoF63EVlnA6VlbuXYL8eQCnB++6dINQFNlRnsaOdQQpvqjZZinjkI00Nsy
      WbTxbhZviFC/8zF+9tJ2lpd+iBONLVRc/y1uX1NCoHEXe2t8U47TUDUNVY7T3taGkpNBFhA5
      /bvJRlZGBtFRM8vX34jbJKLKcaKSSDLkxhprYiAskecCKSExvVHz275zAkODJLKruK96ES7z
      RPX767ZwqH6IquVZiNYSyrJP0HK4hiZnBZ90CKC5yDXKWIvnsTjDjE7QkBJx0BsgCIjiGzHr
      coxef4LiqsXMK/eiJMeQmlrQALNVYLw/SDShYDALSIkkigZgIzMLfM5SqhfkYdCBLMVRzpob
      MZOebeBkn494mReTKCDFgowFYqTNcLwblfXuoCVJHjqIbv5dGC7y9UcaJvTsIQw33Is1z4ow
      pTusDg+AeyM6o276BhALtrLrueeoU6L0nqrHs/qjbFxYgl4ITrl4lMYDL3BoUEeW04SvO0B2
      3kxsVisl2Rns2ruF50MVJAeO0T2amDhGMODRRzi+71Xq44PUnBxkw91/RibQcfq8gpMF6zay
      uOF3/OsvTCwpdqKTImi5K7hz/hJuW3SQR378e3oXFWLra0XR3vlZGU2VGBwaweYpISc7DdNk
      vVrnLED/4glGF95IpsFAem4Wh188Qckd96EXACGdBasLePrlF4kU52AWVWQVSueunuj+TUU0
      4jWqnGw8SmTEgZLw09Dnp1IDR24pufW72LErTpZDjzLeQkAqAkyUVs/n2Ms7eSVYgtsoIEkJ
      0suXMSffdroCyaxaTPqzu3np1SEybSKRkU7CjoUszTYDEiTDdHUcg9DplsNA9oxZlKbbzi3l
      +4SGOlRDtL8I502es7u5kSFiDeMYF89E199MbFzF1naESNvEz4LFibFyDobFN6A9/SKhUAHi
      gw8++ODbvbTO7MCb48GigWCwMmPZJjatmYvbKICgw+xIp7CkjILsNFweFwYpSjSp4sypZMP6
      68hNd5JTVIxLr6LqncxasopF88opLczFZfdQUpyPWaeQFF3MXb2J6xcUYRQF9BYHecVllBVk
      YU/LY+6sCgxSDAURW1oRixaUY7d5KKucgU2Lo+ptlMxewKyqKipLcrC+k1kPmgZ6I+nZObgs
      hjPNr87owO3QY3OlYdILmK0OHN5MyorzsBn1gIDZW0CeA+LxJJrOTG5JFXnpZkTRiN3hIs1l
      nnxSelxpHgxagrgs4i2oYM7MUrKy0rFb7OTkeVFjEWTBRGaWmcEhPXOri7DaMyjOdpCITNSN
      J7uU0oI0DFO+foLBSX5hOmo0gqQK2LNmsGTRTJwGARDQiyKqovDGRKmI3ZuBx/pGS5JIJEgm
      kzid78+4QItL6ErKMZ6ur9NIEeTROGJuOgIiOrMOTXmjGyAYTIjpmYhpOZjyHWixaCoc+gNH
      aJBjbSOkZWXjMMj0Hd/BCcNKPrau5D1z619N4dCpjLAPGhYn6boW9r5ymKhiwFM0h9tXFKZi
      Wi6RVAuQYtqkWoBriGQyiaIo73cxriiSySShaIy+kdH3uyiXTcoA3gJN01J5EeegaRqKqiJd
      BR+GVNcxxTVNqgW4BDRNRZaSyArojUb0og4BDVVRUTQNvSginDVBPRFxKUnKpG9OQDQYMIi6
      M/spchIFEYNeRNA0VEUmKclogojRZERERUomkdWp10xxuaQMYLpoKpGRdvbvOUBPUCVv9gpW
      LarAKqoMthymJehiycLKc3wPSdr3vcjW2n4sFgs60YQzu4BlK1aQ7zYiAKNNh2ihlGWzcxGT
      YRqO7uZo4xAGVzFrbtmAN3iKLTuOMR61MmfDOhaVZFxU7SzF2ydlANNFlRjo7cFSvpaPzbBR
      +/peOn1FzHQH6OqKUbi0Gov+Qt9mC1Xr7uSGOXlIiSC9TUc4tOsgxk2ryLIIZM1eRdbknvHI
      OIMhldV3fJLiND2CAD1H6rFW38adlV7exSDXa46UAUwXVUWWZaxZaZiMIharwHggxNhgDcmC
      arJtArKsoNeLF+6iCAIGs4uSeasJDj9DY0+AzBlu+ut20WGYy6pcH398+AU6x0PUNHThScul
      IM9Iw/4GwtYhWransfDmG1mSb6Jh/w4ONQwiphWz6voNVGSYiYXbOHVCpbQwzI49JylYcRfL
      i/V0Hd3NjqNtJE1pLF23iepiD7poJy8dCVBi6OFAXTdxQxY33HkHZR79NdO9ShnAdNHp0Iki
      iXAIWbYgS2BM9lMfzsIV38Uf9o0juorYdMsGcmxvMscgGPHmZTEyPEpyhptkeJyASQLHDO7+
      2N3sP1rLzBW3kz8ZbVAhSgxV3sKybDOg0rF/C7706/jkX2QS66tjz/49mNdfj0eJ0NvQSH84
      i6U33UOx18hg7Ws0aOV8/PM3IgQ72L5lB83eu6gkznBDLbZV67n3Uzej9O7h+dcayb99DuaL
      l/yqImUA00VnICs7m64j+9nSpsNkceMKS+TmaTQcy+FD999B8tSLHGj0c+ci75ufShQvcRou
      SOuJbkZzYVsXoCQYDErk+6N4HCqSzsGypcso9JhB8dPROUpQHmf7cAMA4Vg37X0xKvPAWDif
      NXMmwvGSeXl4j0f44E9uvn1SBjBdBB2u7HKWrnATiMlI0XH8CSsZuiFq3bl4TAak3GySJ/0o
      eC8+UNU0wr4RFMeM8/NZ35IwsUQaZbNnkzHZV5mtt5CRYUWL6fFm5ZPhNk90Y+QEYdlEfkUF
      uY7J7/qcuTgzTFxTb/pFSPkBLgFBNOLOzCUv3cTo4AgZJSVY7XYMkXEiskJ0PIjeYb/Iyz+R
      7zDWf4rmPhOV5VmX8BAyyMkPEUm6yCsspqgwn3S3Fb1OAAEEQfdGmLDJQa5VISBbyC0sprio
      kGyvHaOY+vZBqgW4DJL01R0h4l1CvktEkArJ1e1gx7ZBtLjMvOszztk/QXftPrb2OUEAVdIo
      Wrme/EsKszdRNn8uu47uYGubHaOow+jOZu7sWRfou1spWTCD9n2HeXmgAaMoIBrNVCxch+NN
      LE8J93DsVJDy6tm49SptJ/cjZC+gLOtKyQt4Z0gFw70FiUTiIrFACqHhETR3Fk6jgKZpxIMj
      DPlC6Gzp5Ge5pnzZVaLjowz7AkiqgE5vxOnNIN1hPuMIiwVHiAouvA4jihQnGApjdaZjmvxE
      xf0jJG1enMaJs2qKRNA3hC8YR9MZcKZl4HFaQI0SCoDTa3ujBdIUouMjDI2FURCxONPISneh
      VyIMBTSyvBM6TKoaZdyn4MpwICQDDAwnSMvJxKzTGBvqQbBnk2Y3EolEGB7zY3O53qVaf+9I
      GcBbcHEDuHa5mgwgNQZIcU2TMoAU1zQXHQQ3NTWlwoBTXJDT6wPE1A9+1zA1Bkgxba6mjLBU
      FyjFNc20/ABSaJjOgXHUM42GDps7k+ws1+U7FOQ4w0MjCK4sMuzvprxbnMGOIQyZeXhtl1dq
      VYnjG/RjcKfhtJk+AF8TlVggiGyy4zgtf66pRMNBFL0dh1kkHhnD549OkUXRnSeL8r6haUQj
      UUaCybOc2Dqdgexs+3k+EFVOMjwWJaaAwWwmx21GnHQQyskEvkB8eu+t//DDfOXfa1m4fi4T
      msMmShZcz8YsF5etKzbewe///Sfo7/gbvrK2+HLP9ia08fO/+ReKvv5jPrU87bLOlBit4eHf
      HKJkzTo2rpzHFa+OToK2119hqHwdG2ZOOuqUJE1HdjCWsYYNs9x01+1kx9EQaemnVbnNlK9Y
      y6LCK8EAVHzDQ+w5NU789KZ4kBMjTv7PFxaSO3VfOUbN0Q6OjsRAU4kldSxcOosVBRZEKcye
      ve30xOTpf7idGUv41De+SPk7ckcfbEaamyhYfh26uJ9wVMLqmH5UzxWHJY35a9ZcmdqgOpGC
      0lLuLz29QWXgVCNi2Hsml+I0/t5eDviN3L1hJhkmDV9vB4/u76Q4q4p8WcKancstRe53KhTC
      x+/+9hvUZ6yiKNpCTYePouW3sSxzjG3bD+DXF/Hxv/xzludo/O77X2csezlCXxOtPph30308
      cOsyzlKxVyX83TU8+ehTHG0fw+Ap5cb7PsLNlQb+9PMfcSLnw/zjxxYjIFH3h3/gl8Mb+ccv
      rSBUs41fPPIygxEFW041n/vC/czKtJD0t/HE//yM17qCGLxmArEkRZd7y3IfJ5vcLPlEKb3b
      DzMYjJDpcKOOneKRHX7uumcVNmGim3Tk5WcwVt/FHNc4+7ZtpbbDh2xOY81NdzG/2Il+/BiP
      HjCzttDHK68do/Smv2Kps599e3ZQ2+pDNdkprV7PTStmYNYphPob2bb9dbpGIog2B56M2dx5
      z0ocUpjGw6+y+3ArUZ2VmUs3smFxKeYrvmW6FDSUcIB9A7C82n1O3JVGwJ8kqziXLMvEL+n5
      xVRY9tHhqyA/283SStAJwvQNIDrexCtPPkkNgGimoGoJCyt1xENBpMIi7v3z+/lQ8yP833/d
      yYK/+Tu+891beer7/8SRhi6qs/OJBfzIlXP40uc+R7xxK9//+TPsm13BLVMihxP+dh5/6GHG
      536MH35zAUP7H+Of/+sXFPzo28yvKuKZF/cz+pHFZCQ62f3aMLM/W42++wD/9fvD3PbV77Ei
      T6PmD9/lx/97gH/76nwO/vbHHDTeyLd/eDNZhpP848f/7XJqfqIeOpsZKZxBgdmNOVvhtV4/
      8/Lc6DwFzJCOUudbwbJ0ETXYTIc/lxszNdp37UebvZm/uN2N4m9l60vbcKXdRbkmM9JxgpOG
      Qtbe83mKvCLRMSMlS25m5eZMhHgfLz9xlN6FJRQle9j5eh15K+/lzlIP6vBhfvViHA2VsYbD
      tAiVPPDF2zAlRtj34iscys5hTZHlrW/oTOWHaG89hDR2ulNrp7S6igLnuQuVvM9oGv0DfgSH
      gwLnud0zAadTz0CLj5ESF+lGSMQSJNERiSsg6CfGa9oldIEE0YjN4Zjo8+uMmI0iAhN6mWl5
      hWTYjIxlZJLn9pCbnYHFMI4nzUO/pk0khBvsZOVkYjMbcJVWUel6jpNtoSkGoOEfaOdU0MED
      K2Zi0ZsoXraMOb/eyuun4vx5dTXFjzzE7vYkGxONnBAr+P/mWOnbXU97Xwsv/Pxf2CKAOtaB
      T2rFN+ZkT12YpV9ZR55NDxi5SK7WNIjR0RqgsGwOOnSkl+QRfamH4LISnIKTymoPL9T0sPCG
      QkYbatBX3Y5bGWV3fTf9HU/TsnviLOFwEO9onHIP6M1e5i1dQrZzQm/UajcTaz7IYy/3kFRl
      xroipIVVvP5RdAWVLChOQ9QJiGYjBiEOROls6qBjtIk/nNoDQCI0iiPHx5qi/Gk8YB0Gk/mM
      /DyY0F+BK4YqskR7/xgZxbOxGc5/np78fJYOtfHIcweQVB1Opx1dgjNCxJqU4NSptukbgMVR
      wnWbNp0zBhi5pJvQBAGdoEcvnn0DqiIhCyLG08mvoohBUIkmJYxZC7ljrZ3fv/waGWlN5Cxa
      SZFJoyGZRPYu4M++/Gkc+okHJuqtOKMniMo6zJZ3rh+gBoZo7mun/ngzxww60GRiYZFTgytZ
      kS1iK16A58gReseNNLa4WfxRFzrZR9yQz8a7rifj9PukE7FYzRAEa2bhmZcfNUbTkUM0Rz1s
      umMpJjHGyedeQpE0FAXMJsMFFv+QicftVG9cyTzvG2rQBsvU6E0BUQRlimCsxsSa0GeWxTXa
      KJgxh6VX4hjgDBqR0T7aYuncmWe+YNi5YLKyeOksZsYkZA1EQWHPznHSnUbQFBrrmqkJOd+H
      mTtVQUrKKIpEX30Np/wu5pZPVRkWcGeWUG4KcKC+h6QiMXLyJKfkLJbOSgedhUW33oGw5w88
      VadSXV2KDhO5RcVkjbdyeEjGmeYlzWkm5hsj7sqgIkOm+UQHEUkh5vMRVNWLFu9t3AC+oSH0
      RSv44l9/k2984xt845vf4ov3zaTtZBdJQDRmU1Ss0rjrEMMFZRQZBbBmUO4Yo6EvjtnuwuWw
      osYDxKTTj0B4o11SkvglgfzCYjI8dnTJCP7wxCKBNrcJf08/w8EkqpJkfGSMmKoCdopKNDpa
      RhCsTlxOB6IWJRKfeq9mckrcDDY0MxyR0DSV8HA73T7IzbqyVoB5U9QEtTWjFM7PI+2CAgSA
      nGQ4KGG2mfFYdPh6uvBZSqhIEyAyzO4OkfVLC6ffAowP7uV/vj0yOe1ppmLJzdx+2zQ8gpKf
      49se4QcHRYIRmbIbN7M01wWR4TO7WDPLuOvu9Tz+4mP80+sCUlLHnLvuZ8nkUF/MXc6Kwh/z
      tLSIyvwMEMAzYxWf/nA3v/npD6jN9GCzO6iYs56N5XO47aO386Nf/IT/V1tM2RwHceXSnd+a
      IjE04sPqnoXV+Ebl2wpn4zhex3CslHyziDczmz37jlB1z8rJPRzMWr+Uzh1bePSIgKAzkFE8
      kyWLL9A9ES0UpVvYfeAFTh404Up3E02quAFLZjkLsvvZ/syjoDfidSSRlCJAT868leS/uosn
      H6lBJ+iwe/OoXrHqrKVlXSWLmde9kxcef3giFFvQUbroBoo8BkCC6ChHDjxF05HTs+oWKtdt
      ZEXJ5U0Zv3NoBPt6OaXL4uPZ58y6jY/wxOEgq28sI0eR6Gho5/GBCCBgsrnYtDoHlwDh3kEO
      9wWIPx+cXiiEEgswPB6Zsh6YgMnqwu02EfX5UCwe3FYDihwlGEhidbsx6VSiwQCS3opJCfCz
      b38RYfXXuGt5EQaDGafLicWgR1CTBAIhBKsLp1mPpkiEg+OEYhI6gwWX24llcv1VTUmw7Sd/
      y4G0u/naJ67DOdlVUqUY/rFxEoqGIBqwO93YLQZQkwR8Y0QlMNktCLEkBncaDtP0u0WappKM
      x1BF8+T45/R2hXgkht5qx6DTUKQkkUgco92OWS+eOTYRCRFNSKjoMFvtWM1GdGqCUEKHw3r6
      gWqoskQkEiYpTzhx9KqCzmLDrFOJx2NEY0lUQBeq5+nX9XzkEyuwoyHFI4QjCRTAYLRis5kn
      MsWmPkcpRigURVZBpzficNon1hDQNKREmFA4cZYjzOxwYje98a18f0MhNJSkRA0OwIIAACAA
      SURBVEQVcZ47vSVLjEVVHE4TBk0lEU8SiMsg6DCZjTjNE2oXSjLBaEQC3uNYoERwmJ8++FWs
      t36bT2+YeQm5sBAeaOLI0V28si/MHX/xlywtvMJmJ95twgMcqmkmhgGjqBLo60SbsZGb5713
      ffarKRboPU2J1Jsd3HDf59AXZF2yqpmmKij6XO7+3GrmX2svP4A1jfLiXFp7hkiqIpmz11BV
      8W6uh3x1k4oGfQtS1XM+oVCIYDBIds40ll+9Qkklxb8FqfUBzieRSBCIRJGvgvUBrjwPR4oU
      7yEpA0hxTZPqAl0CqhxntL+XkbBCekEJmQ4jAhrJSJBATMWd5j5raVJQCI8O0js4hqSBIJpw
      Z+WQl2Y/I4sSGe3Dj4ucdDvipIxJ3+Aosuggv6QIhy7OQHcXvjB4CwvIcllTX693gFQdThdN
      Yby/hZraJgb6Ozl+qIaxxMTsVH9bLc19AdTzxs0yA/VHOFTfjs/nY7i/gyO7tnG8J3pmMXs5
      ESEal4EJf0v9icO0dA8zHggjaxDoOMRrtR2MjgaIJeX38o6valItwHRRJYaHh3GVL2VRqZm6
      g3voHoni8IzS2S1SdUMBRvFC7nkjuVVzWTcnD1VJEvK1sWvHdty33UapU8SRXYoNHaKmEAz4
      8UVkZi5eQb5bRCdIdHcN4J19A8sLHej1egRNQ1EkZEVDEHSIej2iTkDTFBQFRB1IsoJONKAX
      QZVlJEUFQUCvNyDqBNBUJEVDh4qiqGiCDoNBj+78QKOrlpQBTBdVQ1NVDFYLoqhHFDWCkXG6
      uhoxz6wi2NVCxJFFUa7nwr4OQUCnN+HKmsWskiZa20coXpBN1+EXqDct59aKMFv+9BId/gBN
      nSOkpWWTl2Og8XAToXo/baY05t+wjlnOEEf3H6FjKAhmFzMXrmbRzBySoQYO7o6QXxjhyKkB
      Zqy6k+r0IDUHD1PfOUxSZ6Sg8jrWLivHEm7msRc7KPHGae/zEZdEZm+4mxVl70eQ2PtDygCm
      iyhiMBgYGfURT7cRCioYLEMMWbPRNR6kyeRCCzeQWLOZqvQ3r16bNwPDcBhp6kZ7Obffe/t5
      6wOUaLEp6wMoNO86jG3+Ju7Pd5IcbWff0ZP0ZHnJ0smM9LWhZcxm452ryLRrdB5uQcpbxMfW
      50JsmMOv7KJhtISFZkCWSa9aw5LrPcijh3jpQCeJsnlMI4PgA03KAKaLYCC3sIiunTv57WGF
      0jnzcCo6CtLjHOuvYNP1c5Dbd7CteYTK9Jw3zTxQpSTy1CjQt80YDcdO0nqynQMAmkJE78E7
      K0aWQ8CeVsCC6tmkW/QgjdLd0cqx/uMcfWXiuy7Hw8yoiEIB6L2FVBZMJGMInjTsSoTLiZX9
      oJEygOkiCFi9JWy4p4TrVYnu+uP49Rl4jZ3IlgwsehHJ6UTtmlBWuPj6AElGe4exlC1m+unm
      CibHTO564E5KTGebT2hcxOZMw26ZXOZIU5ENuWz6+CqqMuxnnyY47QtfdVwrXb13BSnYQ/uQ
      THZhNka7B5O/l7GEhK93CEvGRcYAaCiJAG3H9tCpFFNZcClx+F7ycv2cON5JRFJRklEG+nsJ
      RKTzdzU6KXLHqT3RRiipoilJxgdaGAhcwmWvQlItwCUTp+3QUQzlN5Np1YFcRKnnFE/9+iFE
      70w23+4+Z/8oddsep3G3CdHsJL+siuWrF+A1Xcq1DZQuWU3/7l387mgEDDaKZy9lxcKcC3zR
      TBQuXsbQnt088svXkHVGMgqrWLe+At5kNlUeO8WLO0dYess6sk0Kh7c/gVB+E0tKPZdS4CuW
      VDDcW3BxeXTtTF6EIAjnB80JU/v2Gher5dOOsNPHn30u4Uzq49Tfp/5/UaZe/3Q+9tk7IDCx
      /bxzChO5Aaf3Y8rRgiBcVfLoqRbgkhHOyssV3nTuXLhADu85e0zZ4ULnOnfbm1/vvIMvMtA+
      e7tw9g2dtd/VSmoMkOKa5qItQDgcfi/LccUiSVIqHPocEokEqqIgJRLvd1Eum4saQCAQSCWD
      pLggyWQSg07AIn7wOxCpQXCKaXM15QR/8E04RYrLYFqzQNGeo7y4rw1XwRyWL5mFc1LWIdZb
      w5Z9DRjTS1m+fBkZbytXXSU40MyBpiBLly5AF+zk4PEBqlYuI995/mq3b4YcHaP2QC3Gqmrm
      5LjfszkLWfJxcn8TtvJZlOWeK9B6JSIz2tFO1F1AoWcy2keVGe7rIG7Jo9Brxt/XwMnGAZJn
      jjGSP7eayqzLFsB/h1CJ+Mc53uZjLKnh9KRRXZaGy3j+t1xTJJobe2gJyFg9Xq6r9GKefDlC
      Yz5q2nzTawHCLbv51eNbeemVLXT7T3sdk7S9/gxbX3yWXz/9Cv2ht3s2jbHu4zz6zHZGQ3H8
      PTU89vCfaBuLTKdIAMihYXY9/RQHunwXmO9+90gO1LHrcCNNLW1EL+CEvfKQGKyvpWV4ygSH
      KtPXeoKWwQhoCiODHQxH9Hi93sm/NGzGK2W2XCM2NsbWA+0MyHoyHEb8XR38sWb0AvFLKt11
      9bzUlcTlMBFsa+aZU8EJ319yjGdfaWVQMU7fD5CWP58CV5Tm7kGqMgrQJfo4fNLOdUtzea5h
      spiaSjw0xqgvQFITcXgySHPb0AsaSjLG2MgIwXiSweEAkgYgkjPrBv7224tIz54IDVClGL6R
      EYIxCb3FRVaGB70SZXR0jEhCRhCNuNLScTver7hFic4TLcy7YQ3R/l4CkTgOtxlNijEWUUlz
      2yZcSJpGLOQHsxuLAaIBH8GohCYaSfN6MesFkKP4YyJOo4x/PIjRlY3DIBEOBghFk6DTY3N5
      cFoME44yJUnA7yeaUBD0BkwmKy63DRGNZDSAPxBFQcTu9uK0TPMRG6zkls6i+orUBtUYHhlH
      sWdw46JC3HpQioz87PlRRpZmnrVGgBYeZWuzyN23zyDfKCCXO3n6xRZaSxZSMthLe0Yx31qa
      OX0D0NtdlKWpdHT0I1Xno/Z20ZWZyyaPn+cm90kEOnjhkSdoGtMQRQXJmMvmj9zLvGwjdTse
      4cnd7RhdLogMEpAmKjrYXcv//OQ57vibv2dNrpH6Pc/yx90tmG0WBHspd957E67h/Ty9tYaQ
      qhENjKDlrOTPHriNjHegaqdNtIu60SKuvzmX7oFW+scj5LvNEO1iy586ufn+m0gXQVOCHNq6
      Be/6+yhXmtl9oJlQPIGsKmSWrmLl0mKswTqe3gnLs32c6Bpj1vqPUK7r4fCRowyNy6iCiuiY
      yc03LcQlJuk9uZ/X64fQNNAJCcblYj76wDrsoX4O7T/GgD+MpCoYXRWs37DsEsMtrkQE7DYT
      ciKCPyrjtguMDochzco5YX7EfAHCmWkUmCY6OXqzi6L0JP1+mRkuF/awn6Go9xI8waKNkgoz
      +w93k5TmM9Q9SEZ2Li5985ld+o+8xOFQGV/86p3k6sZ4+qc/Yc/hVgrXGtjy/FHK7vk6H1lT
      TP+hx2l7vPu8S4z31PL4lhrm3fsF7lpWSCwQBqsFnWkB93xmJekeG/7mnfzbL16heXA1GeeG
      3bwHjHe0IJfOwCvaEHNFXuz2sbTYi+AsZoFnH3X9MusK9KijDXQLM1nsTdK0tZuClZuYlW5F
      jY7w2tbttPkKmCvCeHcdQ/kr2Xj7BtJsOqRoBvNX3YTL4UCQRtnzxD4GpXmYx9o52BFj8fWb
      KcuyoY0e5VfPRwCFoVONyEULueOGHPRymIbdWzjcUcVNldMIuIuMcHDv49TtP201XpbdcQPz
      s66EsAcBT1Ymi8e72LrtMGEZrE4XqxYXYjtnT0lSSHOYzjrWYTMzLqno8nLZmN/MC1sOXUoo
      hI7csjLsz+2hdXwMX3+I7OLFmMbe2KPt6C6Ovq7jwbZXJprlGMwtkYj1NtItedgwswyzXkMn
      XkipX2F0sBG/lk91eS6iTo/d40bTNHy9bTz3xHPUdvmJxcL0RbysVt6H/FglQFNjEE+JzPDQ
      MJrDSfz1Rgavm0G23kz5wnJqjtQRzZtNb80pchbdjy3ZR2PDKTrq63n59HnMTtZEE+AAV+48
      li+qwKLXIWgqanKc+tdf53hLP0lVITwisX7DJrzjYZwFRRRm2CZSFw3i5OA7TFdbC/t6j3BE
      nNiioqPcHQamYQCWNOavXsyiqtNqcyJm2xWSHqNphHxjHO2XWLZiDsUOgf62Lg42jjIjIx/r
      lBGtoBPO5FhPHkw8IaHTQTI4wpEulaWr5l5aLJAuvZhFric4VNuPIx6lLD8H/RQDMJidVK29
      m29/7VYyplzB39SJoGioqsrF40sEDAYrAqMkp3pgVZndT/ySrvRP8J2vrcXmb+bHP330Uop/
      2STHhuiNjjNee5DRUxP3IcgjnOyKkV1mwZg1i/zkDrr6rNSNFHH9RiOCpENvK+Vjn7mbonMT
      AMZAb3NinVzXADVK44l64umL+PNbPopJjHL08SeJaRqCTkORLzTUFxBFD2s//jFW5l/shRcx
      myE25cVQNQ1JSmI0Tk7p6UTMNgeuKzHQTVPo7BvD4s1kTp4TkwDeBcV0/KGOU7F8lkxpBqxO
      K4n6MBEtC5sAqBIj4yreKgPdJ5qhaiWLcg2X6AfQuVm4JJt9e3cTDmeSn312A1S6eAnBYzvY
      W9uLpMj4uxs52dILnipy9QPU1LcQTSYY6e0hkDzv5GQVzqHYNMDLB5qQFImxvj5GInESiSQW
      hwOzTqapZjf1XdFLKv7loeAbHsWcu4j7PnE/998/8XffrXMZOtVODNDpXeQUWajfeRilrAiv
      DjBlUpU9xs7XGwklVVQ5Sk9rLf0XisvXFOKSisXuQE+S4dZT1HWNomjgSHcR7mihdTiGIsXo
      a+8iICuAjdIKE7V7jjAQldFUiZHeBloHptaRkdyKXEaOHqJ1LI6qKox1HKFpxE5hzpUyzfkm
      CAIOi8hA/wj9YQlNlRnqGqQRM1nnfFT0bi8LGOb5hgBJRaarvpFmMZtyt470DBc9Td10h2XE
      Bx988MG3e/34wCmOjqaz7roKvGk6jv5pN7blm1kzK4N4by1Hhq2sXLGUkpJyck0DvPzHx3jm
      he2c7EtSUDWLkrw88jNU9j7zKM/sOEbS6iahWli1vBqz5ONk8wAzly6nKDuPylIPjTv+yG8e
      fZ5jAzB77kyK0w0cfP5Rnnn5OJaiOViEOIVzqim0yjSeaMYxZzGz32U/gCYn6elqReetoDjL
      wWn5H53FxnhLPebCGbiMOkQtQV1dNzOXLSLXaQH0pBUUEK5/la3bdrL3cD2Ku4KK4nRM8git
      o1ZmlUzG2gsGnMYEJ/Zu4+U9xxkTXWTowVk+i8L0DPLsQXa88Dw7D54iZtARCTuZv6gUT0YB
      zkgDLz2/lT37jzKccDOzsgjHlDlyvSObLOMI259/nl2vHaBpVM+qTZso8ZjQoRHoqWX7yzvY
      e/AA+/btY9++WqJpRZSmv/GRSyQSJJNJnM73eFENQcDpcmCXx9m6p4HnD3fRFDJyw5oKZrgM
      CL4Bfv5SD5mzMnDp9OTm2uk4fJLH93XQKnn48PUlZJh0mN1eXLEhtrzWkAqF+MCRjDAcTOJ0
      uzDpFAKtu3nyRBqfuGfheQtFv1tcTaEQV4qHI8XbRY7SU3eIhp5RVE0Hopn5K5e8Zy//1Uaq
      BfigoSkkohFC0TiqJiCarLgc1vNWgXk3SbUA1xCKolxxYeGiyYrbNCXgSlWQ30MtE1VVkWSZ
      cCz+3l30XSJlAG+BLMuphJhzkCSJSDwBgQ++tEQqHDrFNc20WoDEcAu13TpmLS47L/biWkKV
      Y4z29zIcUsgoKCXTeVoePcB4TMWT5rmAPPoAPQM+kuqENqg7K5d871R59F78uM/Io0fGh+kb
      GEUWnRSUnpZH72Q0COlFhWS5U/Lo7wTTqsNA3fP8x3+9xOC7VZoPApqCv7+Vmtpmhga7OH54
      qjz6CVr6QheRRz/K4cYuxsf9jA52cXT3No6dJY8eI5p4Qx694cQRWntGCYYik/LoB3mttosx
      f4iYlJJHf6d4R8YAmiqTSCRR1In1ec0mAzoBVGViu6oCOh0GowmjCMlEAk00Yppc91dJxkhq
      BswmEU2WiCckNEDUmzCZ9FeWKIcqMTI8jKtiKYtKLNQd3D0pjz5CZ49I1Yb8i8ujV85l7aQ8
      enisjZ3bX8Fz62ZKXSKO7GKsiIiaQmB8DF9YZsbiZeS79YhCkq6uQbyzNrC0wIHeaEDQNGRZ
      QlZUBEGH3mA4Sx5dp9OQJQVBb8QggiLLSLIyKY9uRC8KoClIsoZOUJHlSXl0owExJY8+DeQw
      za+/wKNbjxJISKiGLG5+4NNsmuOh+/AWHn3+AMOROPFokqJ1D/Clu0vY9qN/Zm/WJ/nXTy9G
      IMbOH3+JLbbP8OAnyzj27CO8cKgPBRmDdy6f+cInqUy7lBWF3yVOy6NbzpVHb8JSUUWws5mw
      I5vivDeXR3dmzmJ2SROtHafl0V+clEePsPW5rbSPjdPcPTohj55toOFwM+GGcdpNHubfsI4q
      R4ijB47SORREMzuZuWA1CytzkCbl0fMKIxyrH2TGqjtYkBak5tBhGrpGSOoM5M9YwdrlFVjC
      LWfk0Tv6x4hLOmZdn5JHnxbhnhoe3tbMjZ/9FitLrLRt+Qnfe/w1lsy5E3teNZ/8641ke0yM
      HXuMb/3nSzRt/geqq8t5+uUT+FhMerCJA/Uq1V+ZReDIkzzT5OLr3/kyeUY/L//k//Lw9lV8
      +77KS1pU+13hjDz66Bvy6OZJefSmgzSb3aihRhJrNjPrLeTRrekZGIbOlUcvY/M9m8+TRy/W
      oufJo9vnb+QTeU6Svgl59N7sNLIEmZG+VrSMuWy8YxUZZ+TRF/PR9TkQG+Hw9p00jJa+IY8+
      KyWPfonIDHW30tlwkF//Sze/FwW0qA+/ZsCv6ckVgzz/m4c40jpEMhZgYMxLOK5nfvUiCh59
      jGO9n2LpcD3t5tl8tApaftlC+9EO/t/XDwAQ9/fj0A8S5woyAMFAXlExXa/u5reHZcrmzMOh
      6ihImyKP3vYq25pHqHorefTE5cuj74dJefQ0vFXxSXn0IhZUzzojj97V3srxgSny6IkIM8un
      yKPnp+TRLxlN09Cyr+Pb3/s6Ja4pDvlQCz/74c8YWfIZfvC1xdjG9/K3X3sWADFzIevnPsze
      fYcRxk6Ruex2yowanapGxvIH+J+/u+3KeeHPRRCwpBWz4Z7iSXn0Y/j1mXiNHRPy6KKI5LS/
      PXn0vmEs5Zcmj252zORDD9xJ6QXl0T1nyaMrxlw2fWwVVZkpefRzucyunp6swlIKEi386bUm
      IrKCHBun7XgDY8kEgbie7KIsTPI49cfqGI6e9hxambuiGv/uLexoN7B4QRFgZ8bsMmJN29nZ
      6COpqsT9fZxq6OFK1R+bkEdXyCnMekMePS7h6x3G+hby6K3H9tCplFB10dj9N8NLbq6fk8fO
      lkcfv5g8uidO7cnWM/Lo/oGWC4dhX4NMuwUY69vGdz5fixlIy72RL/39rXzuswP892//ky//
      yYDVlU71qju5e+5MNq0r5oc//TZ1OWUsX+DFbHjju+6auQL30JepKbyHz+S5AAN5y+/ir0Ye
      4lf//A0et1pwZZaw8UMfY8Y7eMPvHBPy6MaKm8mYlEcvSzvFU795CH36TDZvPjtPU5iUR2/Y
      ZUJvcZJfPosVq+eTZjqzA+co1Z7971n/GShbuoaB3bv53bHwWfLoIJyTa2SicNEyhl/bzSO/
      fB1ZMJJRPIt16ybl0S8iupuSR08BvJk8+rXL1SSPfq3MdqVIcUFSBpDimiYlj/4WpOTRzycl
      j57imiYlj57imuZqygj74JtwihSXwfTk0buP8PzeJiRFA0RceRUsXbyALMd03QkxGna/yoBj
      HqsWFlyCJ/Q0CToP7KTZtpCN74OYq5z0cWJ/I/aK2R8cefT2SXn0tKny6O3ELfkT8ui99dQ2
      DkyJTzJSMHchldlXim5QnOTJEyS6Rs6Ekgs5s3EsKj5vTy06TOxQDXJURZdTiW1B8RtuD01F
      Heudpjx66x4efeoE+oIC8rLddO36PQ89sYvhN0sNVeLUv/q//Orpg4TOjJmiHH/h9zzzWhuX
      l1Uao2n7o/zxUN9lneVSSQ6eZPfRpg+WPHpDLS0j58qjn3xDHn2oE1/USEZGxuRfOnbTFZQ5
      m/ATr2tHs7jQZ2dN/LkvsCBFvJ/wH18iqdrRp1uRj7xI4FD/pNGoJGt3MP7009P3BJvtBSxe
      u5YyTaWqQOaffvAy9asWkTnDjRQLMjLiIyJpWBxpZHjdqP4eTtYc4qAvzvwZXrLT08nK9nDT
      lx9kqS4bKxAe7SGgeciwyQyN+LFnleA2JPCPDDEWSqAz2kjPysRp1gMqieAY/SN+FGL4IudJ
      y71HSHScaGX+DWuJ9PUQCMdxeMxoUhRfRCPNbUPHaXn0MTSzB6sBouOjBKJJNNGENz39jDz6
      WFSH06Tg9wcwunNwGiRCgfEp8uhpuKyn5dETjI/5JxJo9EbMJituj31ChzUyzth4FEUQsXu8
      uCzTjKoyWMkprWLBFSmPDlo4hGLzYl+0BIP7YrLXGlLdIaSchXjWzgGdhqUyE/9D20jM+iRm
      Rx/JHjeOezdfejCcIOgwmu2YDAqqqiHH/ex//g+81hpAL+qISUaWbf4IVZFD7K/rYyAqs+W5
      MBVz13PL5mpqn/pnnhY+yz9/ZR01f/h7Ho3czp2lXTy9/SSbv/lT5gZe4YlXakE0EItEsM+5
      mS/ctwJhtJlnfvswR0MWMjwmxvqCUH6pd3EZTMqjb7g5h+7+FvoCEfI9Zoh2s/WZTm56YKo8
      +tZJefRGdh1sJRJPIKsyGSUrWbm0BGuwjmdOy6N3+5m1/sOUCz0cOXqM4YCMiorOXsFNNy3C
      LSbpObGfvQ3DIICOBH6paFIevY+D+2sYGp+QRzc4ylh/w/KrSB4d1HAIbaiF6B4FncWEmFOC
      aUYBonFqB1RDi2vo0uwI4kSMiWYvx5j9AvJwAhwF2DcXAP2XbgCqFODoSy/z/7d35sFt3feB
      /7yHh/sGSIL3fVMiKYmiZFlXfMmxHcdxmqZN3NkmmWk6m3S7Ozs7s53dTveP7Ex3urPtNttm
      0yQbN7HdJHYjJ4ptHdYtyqRIipJI8b5JEOABEgAJ4nx4+wep+7DJODJl4TODGQ0HAt4D8H2/
      3/v9vt/PN5ZWTX62mcDkCc5cXObpb/85DVnQ8tY/8t7ZdnZ+7UW+uK+Lf53ewbf+7CWcd000
      TzIz2cdkQRVf/7NnKTROcPDNS2Tt/wP+8LFilvre5b/8zVH6XqhDOPMOR7w5fOevvkGWcYnD
      //0KB9d7Er8F/uEB5Gt69JwVPfqOa3p0x6169DGhnAZnlN7DExTseoaqNAPJ5TnOHj7GkC//
      Nj16EQ7Dih69/vFnsZpNcF2PnkA/P0zLaJjtT75AccatenTv1T7kgi28+FQ2UmKJ3tPvcGGk
      is9WriFlITRL87mf0Xn+hh5950tPbxA9OgjOQgzbEyQjCkp8mdiFo0Tnn8C2t/SmFCgRKctO
      /Gg7sfI81CaBpG+C+KKCFI/DTRqxNQeAb/II/+1rLYRmF3BtfYlv/7uvUmRR4z7fzsn28/T9
      1QA61UqZo6G+HCX5EbLLFTDZCnjy8y9QYFDjH2xipPcMw71DnH5VDck4yxEnIX8Az8AQadVf
      J8esAcRPpnxP9tPbG8RWFGfaO41iNBM504tnVzlZko7SbWV0tHYRyqnB3XGVnFU9et+qHv3w
      6ssIOit7ruvR627Vo0f9XG26TY/+xAHSAkvY8grJS7tdj77I+F316MvAGn68Bgdb9m2/RY+u
      3Sh6dEA0OdHVOwFlJRV/UxoL/9BGfG/pLYspQuEubHs/IPD9/4EcEVHlV6NSqxHEW2971xwA
      ztwD/Ne/fY7uV/+B92YVUAREAQSNjtyaz/Cf/vLP2XRzJVTiI+woCyLGtGwcRjUCIIoiKmMp
      X/7WX/J7m7NvPC/q5aAokkx8sjuzsfkZ3OEAgc5W3u9ZCUBRnqFzLExWiR61q4rc+HHG3Hqu
      +gp4onBFj66+rx7dfIsevaezm2h6A998ruyGHh1lpdb3rhYs8SPr0Zfvp0cXVGgNpgcvvv1I
      KChJGZAQRAFBEBBMRkRFuaM3nKDSoK7ZR1rNvpX/GZsh+OosUsatJvN17QNItmJe/Nq3eUw8
      z3d/+BYDsxFMJQ24Ftp5v+kKobhMeH6M1iuDhBMCJpuD5ekpguGVLfQPGxNMGVlUugQO//Ik
      3pCMHF9ktLWJwaiF4uICZi+doj+YILLgZWxu7U31fjtkfDOz6LO38qWvvsIrr6w8vvTCZma6
      VvXoKitZ+Xp6TrQiF9/Qo1eu6tGD1/ToA/fWo8fiSXRGIxIxpgev0rmqRzelWVkavqZHX8Y9
      dKse/dLp1hU9uhxndrL7Tj16eTZz7RcYuKZHH26jb+Yh0aMjkxi6yNLxdhJLMZRYkMi5FhI5
      2XcWUEXmiA5NkYwnUZZnCb/3G5KlT6G5bTBcmx7d2037uIHdz9Th0NkorSxm7sI7NPss7Gps
      oDpPR/vhN/n527+hqWsKW0E1ZXnppKWnEx9r4rWf/ZrBBTuV9fkEe5rw6Op5vD6Xhd4mJjW1
      7N6ysicgasyUVhWxdPUYP3n9LY6cbGVGk8uOLRXkFxdinmnjn378JhfdEUzJReJ5u3iq5sF0
      ClvRow8jpJVRmGG6oUfXmQgMXkWXd5MevXuSyh0NZFt0gIQjP59Q9wkOH1nVozvKKC9IQ5uY
      Y+g2PbpVG7uuR1+QbGRIAubSavLT0sgxL3Li0IoePaJW3aJHty738t6vD3O6uZ2ZqP0uevQs
      MrWzHD90iJNnm+n3qdnz2QMU2jWIKAQnr3D88AbVoyMg6nUkPV0Ef/Urlk63k9CUYn1+J5JB
      DTOdzP+0BVVDBapknHjHCfy/OEiotQ8lbxfW/RWoVAKMn2X67/6Z0OnWCHo15gAAFYhJREFU
      VCrEQ0csxHQwhsVqRaeSCQye4q0rzpQefZ1soB2OFB8JeZnJrha6x+eQFRFBpad+T2NKj75O
      UiPAw4YiEw0vs3Rdj67HajKgSunR10VqBPgQNqQeXaPHqrmxNKl8Ynr08IN7098RqQD4EFJ6
      9Du5oUd/+L0qqXToFI80qQBI8UiTmgKtg2Q0QP+Viwx445Ru301lpgEBhdCcG7dfJq8oH/0t
      hugEs4NXaLs6wnJCQNJayK2qZUtx+ko6A+Ab7GCMXGpL05GScXyTfXR0DhHTZLJtzw5cUpDO
      lg8Y9AqU7mygOsfxENQfbHxSI8BaURJ4R3uZCOiprMxkovUc7pCCIseYHOklkDSgvuNTlfFP
      TRGzF7NzZyN15RnMtb3D0c45Eqs32ObMIoozV6zM8dA83f3DWAvr2FpXhk0NM50nuBrJpGFH
      HfkOU+qL+5hIjQBrRY7jDwRxlOygNE9DbG4S9/QidsMwE8FsdjakI911RVKF0Z5OTk4ukEth
      SS7Hf/EunelfYkuWlng8TFTUIcb8dHd1M+GZI8e6hN+fJBELMtQ3iya3gIA/gNpsxqSBwLSb
      6YUQgs5Cdk4uFp1IIh5kYR4spjjuKR9GVxEui4ql2SkmZwPIKh2ZOXk4TRqILzLpS2AWFvHO
      LyKLBvKKCjFrUv0BUnwYq1MXRVFQEvP09y3idJn44L13kLI2sWdLwf0/XJWDolIrg5OzJLJy
      melrWekPUCXgX/ATCoVZ8M2ilq0oSYnAUpjF+Tlm4zH0rkw0k7209c6j1ookIiNMekPsaKyC
      0DgdZ+cwZUTxx/RU2guITA9yodODKIkkYosMDC2w/0ADtrCbE+9cJqsoHUkQiPm9jIV0PL01
      65H5YTwq5/nxoZIw6nV43BP4zSZmZmMYxTliLitLVwZx1NcR6z/HBWcWu/LvX+2sd6ajm4pw
      yyKrzsXWxq1EVSoqHvvM9f4Aeu8g05V7VvsDxOh8b4rs7fsotWhILs7Q2tHNhK+QPE0Mj3uC
      sqp97C/LwaCO0tM0h7OshopMOySW6T/3Dl3uOnbbQGXLYdv2bViNOuKLnRw7PkMsFQAp7omg
      Jre0mvnzZ3j7UITy+s0oSZFinZ+z9lr2l5cgG70c7JtCyS+8r/s/ujBPWMpax3x+jr7L3bjH
      3TRd+5Mll2xkENRkF22mtjofgwDEFnGP99NzqZPm1ZZUgqRlc9lKgbaoN+Mwr2yqyTodaiV0
      R2rxp5lUAKwDld7Jlie/QF0iytDlFiKOTRi1ARRx1eEsCqAkUeDeAZBcxjPhx9GQsY5eCFps
      rjw2/d4fUGm+vT+AgEpSc30RSpTQ6l3s+eJe6rNuy958+PexfmtSiwnrRiE238fgvIX8XDtq
      iwvdbD9Ti8tM9I1jz82448NVFAVZThBbmqb18EGmHI3UZK6n2spGQX6c1nOXmA8niC376e/r
      Ztp/F1WhZKU4O0lrUwezy3ESsWU8Ay30z3zI2SkKyWQSRbnx7+QGSwn5OEiNAOsmyliPl+Lt
      T2FVCyiqArbVTnD8F6+jLnqcL1Tc3I1FxGDT42n+Nf/3rIja5KS68Qm+UJl5vZ5AZ03DqV65
      ZxDVOuyONG62kehs6Viu5/WrKN79EtGWExz8STMJtYXqhj3kmjQQMWJ3CjcFn0TO9md5Vn2G
      d177IWFFR05VI08WA1EDLueN8UcUDTjTRVSA7O/h3VOzNH52Hy5NkvbjbyGUPENDqj/Ao0Wq
      P8CdpPoDpEjxKSEVACkeae45BfJ4PA/6WDYkiUSC5EdRuzxCxONxQuEwau3DX4d2z5tgo9G4
      4QpBUmwMwuEwoijidDo/6UP5rblnAGxML0yKjYAgCMiyjDV1E5wixcPNmvYBxk//iDfHK/iT
      P9qNGSDip+nQmwxn7OH3d1ei/YQS1I+/+h3mS/+Qz+8u+S16DaydeGSc914/i2PXE+yoytq4
      3e2vE2Os9QL+7M3U5axeveU4w92tLFpqqMs34b56ksOnerlR7Wtk84HPsa8s7R6v+QkgLxM5
      e4TF9iHQpmN45nmM5Xcen+IfJvDWb4gHkqjK92J7fivXzIiRIz9g8bJ/bQGw6O6mo9dyo3mC
      HGNq8Cq9sU18kivlEz2teAzPPfBjCA1dZlKyoPKMsFTkwq7b6AOqzOKMhzlLxY0/KTKBOQ/z
      QhkoSUIJKHvsRbZXXxONCag0D/Kycn+UeIDwkXeJSmXYv/kMQmiW2OKdixSKr4uF1y6gffGr
      mNMSRN//JfNvS9hfqkUlJoh7ghi/8q2PcSc4EWaooxWvJgNLaJLeiXkMOTXs216JSSMSnR+l
      ufkSnkUZe141O7eVYxWX6W5rYV6bi8rXz4RfxlW5nQr9NB2dw4RUaex6cj/ZxkW63m/CZ89H
      nB1kajFJcf1+tpQ57jgBORpk8PIFukZ9qMw51Dduo8CpZbjlKB5tNQ11+eiEBDNDV+ic1rO7
      sQKttJ4fboiBLh8N+5/A19WPPxTBrjOghKa5MimzqSIbFaAkk0yPdaM4K8k0K0z1XWbIs0hS
      Z2NzfT1OvQARL90eDcW2MN29Q1grHqfQEGJiuJ9RbxBFbSC3tIqSTAuiIKDEAvRf7WZqPoxo
      MON0ZFFWkYsWhaCnn67+KaKinvyKWkoy7tI84n4IIpJGh16/cYS4N1BITg0TldMx7a9DMqnB
      ZETvuvN58f4BhIY9GItWbtT1z3+e6PcOElvYhN7pQQ4WonUZPsZ7gFiIK8df57uvHcEb0WBl
      nsM/fYMPppaQA2P8+l9+TsesgNMq0nP0NX52dhRi81x45w1e/dUFohoLqplL/Ojv/5Fz4xEM
      VhU97/0zb5x3A/Ocf+NVfn6iD9lgxRgf5Cff+yEXJ+7sL9Nz5P/x6ruXSZpsRMZO84MfH2TE
      FyM42sTPD57Au6RAdJFLxw5yrNNNYr0LXf4RuuUSqvMyKNBGmJhflQCLywycucDUqn82mfTR
      2dTNkiCwOHiO5tEoBqsFbXSMk8c68MvA8jhNLV20t7ThjUjoJIGQz8ukbxGDxYpRtUjrqXbm
      YjIkgnSeOkrHVAyzzYox5ubsB4NEgMRcN6faJpBMFszSEu3vn2TsQatTf6fIyHN+hHCA5cOv
      M/e3/xvfT39DdHb5zqcmk7eaoCUX6qwY8nwYlqaJ9rbj/+7ffty5QDryK+vY8fhuzD4TTScu
      MbkQZtLbTLNb4QtfqiTbIqGf6+R7Jy/wlcd2AZBd3ciePZWQtcxvzrVTuucx6iRQ977Dz6b9
      gAkEgeyanezZk40gN+K99A3OtPVTm1d74+0TvfzyrYtU/enf8PLODGKzBUz/r+9zsqeRFxuf
      wXTubXrHZshwBenxRGl8sRLduq7+Mu7eQawV2zGKWgqLzTT3eNhVloGkK6Cx4gyXepbI2Wwk
      OtyGO20L+4x+zrcHKXlsGxlqESUjjdAHR+mf2kSjEQLuIbQNn+fpIhuSKKDo89mst7McjaMk
      LSx0t+ONyhgW+ulJZvPsZ3Zg1avAL3JpKAjEGb44gqm4jBy7GUHJQL14igu9sxRsW4M3dcnL
      6fdbOH/k2h1NBnu/8jkaszdCDpCCElsgPhXB9NIBTE9rkQc+IPDWcex/8jmk6/egAurSUuS3
      zhKyS6iNAkpwhuh0DI2cBEMdaX9dDqzxJlglSXAXFfUNBCS1GpUoIggrqcCKEsc/78FztYcj
      2iQGjQho2F6Ze9PrqlfMZioRQZCQ1CoEWBGZ3vRmKklCJQgoKj1ZNjNjvgVuyX/0u/FE1TyW
      5UIlgt5gxmGQGfIGMdeVsTVXoK1rlCrZzYKcz4GiTFTrqf6LzdM34MNvvsKZpUGIz+DvHGXs
      iTpK9CKZ1bU0HbtIoHIbI1dmqNp7AE1kBLdnguFzS1xrPSGZ8sjXrsxfncWN1JeuTumUBAvu
      fpov9hKIxEkqCWbdXnTBJOElmbQMOwattFKUJlxLuV5ixuul1z2H55rqXNJTVLjGADdlsu/l
      p9i1IVskCQiSCXVlPpqCLFQqUDXsR3/pVaJ+kG7alhBctdhfVrN44iTRqIgqqxiVWYOgUYOo
      RmVZ+YzWFADONBcJ3wwLMXBqIJ6IE1yK47QbuXfPZBU6vRldViWvfOvfU5F205w0NLq287+G
      EmLSt4yt2nGrE9PsxCYm8AeCgIVYLMbicpI0ux7J6KC+oZKT57oZjI8ilT9Hnm19A2DYN4Nf
      b6YgzYFeI4C+gPqidrqGg5TUWJCsJRQY32Vs0EyXXMwX00WQdZi1Dhpe/goVt0+v50FQq298
      GfIyQxMzOMt28UxNDpK42h9AAEmdJLQQX01Nvjl6NRiNOirqX+DJEts9jlyD2QL9wRuXjWRS
      JhJexmDYiHP+21GhsltJDnpIhuKrP2IZZBXCHSuQAmJWNdavVgOgREbw/2gCdaYOJRYD9Uq/
      tTVdHpyNz7JV6uTgmyfpGxuh5cS/ciVWwJ6aIu5dRy1RUL6NGvMgP3jjGL2j4wz3tHHo0Adr
      rMdQmHMPMTo6SPPbP+RyrJLHt1fcuuyp3cRzT2TT/N4vae0bou3Mr+kXS9ldmY9KVFO8ZQcl
      C828emqOxj31GEQI+yb4P//hy/z1L9sIRxc5/y/f4Uv/8fvMBO+SW8/KiDbtmcGYUc2OXY00
      Nq48Htu3leXOq/iTIEgGMvPsXD7Wgr2yEKMASC621gocP3SKwUkv01PjXG47y+j8Xd5EEFAn
      YiwE5pmdcdNz4RzN/V4SClizc5Amu2m+OoZnapzO9qv4YgnAQEVdHn0njnFpxMO0d4rey+e5
      MnZzgxIVOTU1xDpOcq5nnOlpD70XjtAfKqI0d1V/nkwQ8vuYmZlZfcyxeFNDjU8WATGvFK1m
      juDJC8Tck0SaThKxbUZnAeJhEnOBlUlDyMNy6xWik1PERzoJvv4eqieeQ6OHZN8x5t88QWTY
      vbb+AIImndqtxfi6znL2fBszch6f/+qX2VJoRVSShJdD6LPKqMx1IikxAuEkuVWbKcnLp35z
      EcH+Ns42X6TfE6FkWwNlaXqWQxGsBZupyDZCIsJ8RMembeVYgFhoHtJr2JyXpP1Xx+iLKMz1
      dzC87OTL3/xTtuXoEIGQfw5r0RZKcxzkV9VjD/Vz+uR5ppKFfPGPfp/NOSZEBES9BXHsJG2J
      vfzxy3UYBUjKcfyzs1iL66nIsRENzhOSXOyoLUanvsvGRlImsBjE5Cok06q7fg0WtRbE5Vl0
      6XmY1AIatURwOUlZTQUO/Uo7J3NOGdalAS52dDIwNoM5r57yXDOSEiUkm8jPXK0hEDU4bDpm
      hq/Q0T0B6UVU5abjyM0nzeqgMFtH/8ULdA1No3MaCS7oqd1aiMmRT6Flicst7XQPjSEbC9hU
      kY3upnmeqE+nKEdNX2sLnb1D+KVcnjqwi4zVJdx4cJrezi56BwcZHBxkcHASxZlDrv3GCPHJ
      9QdYubioSwsQPD2EWi4jC3lYDmxH0kkQGGXxxACqmkJUKhVJby+hs81ExwNI257BvCkDQQDR
      VYIUGyF8oe1hqQcY4Z++8Z/xffnv+Ytn7ljz+ogoxH39/Ph/fpf4c3/Bt/Y8pGbjZR8D3mVc
      OVmYpATei+/yrreCf/O5mge2EZeyQz9wVJicacR1699q9o2f4vvfeQtl9xf5t9szP8Zje8BI
      KuLuS7x26BeEZQlLThUHDpQ8BLvQG5OHZARIsZFIjQCPECk9+p0kEgnC0RhznwI9eioAPgRZ
      llMBcBuyLBONxz8VDTI2evZWihS/U1IBkOKRJjUFWiuKQjw0Tdvpk1xxx9j0mRfYUepERRL/
      RB8Dc1BTW4nxFkV0jPH2Uxxt7iWcFJF0NorqG9m/pRStJCIAnssn6aWM3XW5SHKEyZ4WTn/Q
      TdxQyJNf+Cy5eDl9+Ag9bhV1n32anaWuVH+Aj4FUAKwVJc7EUB+RtO28stdE26lzDDufp8QU
      YmR4ElPl4xju8KMrREMyhXtf5qlN2USX5rj6wXEOnYpzYF81FrVAVt1nyFp9djToo38ywM6X
      vk5JmhZBgMlzJ/EXHuCbL2XeJ+0kxVpJBcBaScpEojGsLhcGvRqHQ8I3v0TGQhd+YyW7XIb7
      CnERRLTmDLY+9SLRQ7+ie6qAnQUmfGOdTEsFVNuDnDp6ij7vDJ5gkkG7g3Snmr5LbgL2cxwa
      t1HWuI2KdC2TPe1cHZ1HZcmidutWsi0S0bCH8VHIyghz8fIQaVW7qc5SMztwmbbeSRIaG9Vb
      t1OSboDINO1DETJFL13D08TVThp2P0am4dGJsEfnTD82BBAEkrIMioIgCKiSM1wd15FOLz/7
      wfd548glwskP2V4RjWTnOwhMzREHgp4hRmaWQeOgoqaC3GwXVXXbqN1USVFhKeW5GRRu2sK2
      bTXk2AzMDbTQs2Cmur6eAlOI9qZW5iIKsaiPwY4OzlzoReMqIcemZnG4jeaJJBV1W6jOleh4
      vwlPTIHYAp2n3+fSnJqSmjpKjLOcaRkh9kA+x41BKgDWikpNmsPO/EAHHVc6mPQJyLNBLEUq
      RocVDrzyx+zSd3P86tKHvpTGYkUvJ7iloE8ykJGZgdVixpWVR3ZWBg5HOmk2Ew5XDnl5WdgM
      cQY7pjCmaQgvhVDUZpLxaSZnliAZY24hRHH9XnbUFGPVhujt92M1S0SWlogKdly6Ia6MrBQT
      aQsbeH7PVkoLCyhpqMYyH7xR8voIkJoCrRVBRVpeBeXhHsbmY2QV5RKNa8gWfPSlleIyaEmU
      FdJydZbkZvN9rzDLvlki+vx1fAkBZr0h8Hqu/1hNaQVkWtSgaMjKryAv07QyFYuH8Qf9BBMQ
      168kTAj2aortj04bpPuRCoB1IGpMFG7aTn58mZ62JtSFj2MQAwhJmaSioMhJUKnucS+grCjH
      ZT/jw4tkP5mxjtUcMw6XBlvdfmqdKyGmrE7HlgIgqlTXrdOodVjUesybd7Ijf9UEoSgoggiL
      6zn7TxepAFg3Mr6BZsaUcp7KMiBGC3EGznChM0ZiZIqyHTtuC4AEfs8YfZoQyfgiYz29aLe8
      SHX6etLYLFRscnH0xBES1cUYhSgLyzKFpTWYbo860UpVbRpvnzuJqrYKi1pmacGDseQpKu9j
      NkxG/UzNRHFmu9CJCj7vGII5e6W53qeINdUDPIrIsnwPRaRMYDZEZkU5No2AoNJjswpMT3hR
      521ha7H9lumPQJLQwhxzCwGW4hL5dbvYVmi93icYAfSWtNUfmIBKo8fucN7UI0BAb0u73iPA
      4MzFqQ7hmZomEFbIyC0hO92MShSQ1CZsDuPqyCKgtWeTY07innAzH4yizyinIt+CJICgNpLh
      uNHLQKUyYE83IUTmGBrxY3GloxMVvKM9RLXp2I2aVTdoBI3u4XeDprJBP4RUf4A7+TT1B/j/
      6v4fCQiPXUYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='128' name='UE per Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACACAYAAABdhGZrAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPaUlEQVR4nO3de1hU9b7H8fduAkExEXHLSHLRUMFQEUFANEqRoI2R9shJ7REvJ9J2B2mf
      TNs+7nD7HNt0dp5upyz1aJJuKk0jb9u7KaLAoFFc1Li1E/ACGBsYZ5rt+WMGGAQBY2yU9X09
      j88ja9ZavwWuz6zv+jHL729u3LhxAyEU6j5rH4AQ1iQBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIom
      ARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIp2
      f0crZGVl/RrHIYRV/ObGjRs3rH0QQliLlEBC0SQAQtEkAELROrwJbk/ppllMf6ew1fJhL27j
      kznuXdm1whSwJXENR+0iWLp6Gp7WPpw7qoI9Kz+E51YQ6XLTS2fWE5/tz9r5o02r7mHln3bw
      Y6t9uBKT1Mb2v0CXAmD0BG9mJTGx6ztSrgINmofjeLbhS3KKp+HZvRNwewIXNgfiDpAS6C5Q
      oNHg7R/IWH9XMnOKrX04imKBK4DomgI0Gm/8Y1XY6f1x3fUNZdM8cTO9ashL4ZUjXqxaNA47
      s63Kdi5nq8NLvDLJCajjwp6NbNr3HZcawH7QGGbMm0vIQJVx5Yo9rNylZsV8Ly7sfJ93953H
      97m1zB8NdRcOsvWzPZwtqUWHqvW2gOFKNp9/vJ3jhVfQYUtvj+EMcvIiNn4KxirEwJXsLXy0
      9TQltTpsnYcxaVY8MT69fpWfYFdIAKytQIPG259YFaDyw99lFTllT+JmSoBq2BhGbzjCWe04
      xjUloJisDBcm/skJgIq/v8u2hqm89MYL9LXRU52fxvtvbaZ3Uhy+Tds0ULzzXT6pfoxX3kxE
      bVp+seQKw2OXMdu9H3YqPdX5O3jnf7/iwVVPGkNYd4aNb3zKz9GLeSNBjZ1KT92321i13dD0
      LWhzN/PeqYd4btVM1HagLT/Jhv95i78nvsoUC9Tpd5IFArCLl8buarHkiTezSJKbgk4xlj+x
      GN9v7fB52JFdOWU82ZQAH8aHbGZXjpZxwaaztuAk6YMCWGUHUEx6/gieTfCmLwA29PWeRtyE
      19ieo8W3cZv8HaRNSmB53EBUZuN7TY7Fq+krG/p6TyDA9ksuG8BNBRXHvuTHsERWhLo0rdPL
      uQ/2TdtoyTmq43cLQ1GbdmynDiV+Rh7L04uZMq2LNzSn3yf+9M0LA1m4dj6WuDOQm2CrKkCj
      GczD05pPyT5+Y3F8I4eyJ92ayiDPsUFUfJrBteAw+mAgL0uDd0issSS6VkpRXhr74tNa7d01
      pgZMRQqDopkf2fLkh8byZgcnL1yioelN3ZWYy8ZNKy7+izHtTreUUPx9NkcXxbd+KTCwEz+D
      Dtzhm2ApgaypQENm7VmOJsSzocUL/VuUQbj5EVCzlayqMCb1KUSTP5rgZ0ynsk6HzjWGpBWR
      tFttODjQqiI3FJD6xj7um7mI1xPU2KmgaZqyyX2o2p0q0aO7brl35F+bBMCKCjSZDIl7i98H
      27VYXnXwL7xpXgbhxoRH4aOcKsL6neTMiPHMbnwr7++GR/VOvquKxMXpNg/gcjEXhkaxYpT6
      lqv06dvA8WItuNjdYg03PAZv4Ns8A6N9br6+tMUFz4eq2XehjkgX80gauHD+Al5Dnr6d76DL
      ZBrUagrQZA7B36/1ieXkN5bemTmU3bSME0f4Kr2MCaHDzV7xInhCLds+2E5+tR4Ag/YqRcc3
      8mVuB4dgb0/P/Gwyq/WAAe3VfA6uW8e+iuZVPEMmUrXtAw6WaDEA+uoiju89SfMqfQgYP4T0
      DWs5Xm5cB30d/zi7k9SvK2iLV9gU6lLfYnt+NXrjAVN+fC0fnBpGRFCfDg7asuQKYCWGvCwy
      h/gzra03Vic/xvZ+s2UZ5DSeiU4JbLwYxR/dzFdW4fnkEhbbb2ZzUgKXGgyo7H/LQ8FTmT2u
      g4PoM4G46d/zVlIC6xpU9PYYReT0GUy++LfmdVwi+cO8n3j73Zf5tFaHrfNIoqb48FuzdPYK
      jue1+//G+r++zOZaHdj2xmNUJNNn9G9zWNXASBISYOOmJBIuNWDAlt4egTyzdKbZrJVJmzfB
      lvtNsHwcWty+ij2s3KBi4atTaPsUv3dICSTad/4AqceLuKo1ThHp6/7B8e0HwW/kPX/yg1wB
      REfqLnBw62fsOVtCrQ5jeRU2gwXRvjzQmXveu5wEQCialEBC0WQW6A6rr6+39iGIdsgVQCia
      BEAomgRAKJoEQCia3ARbUX3xbtZ/dIginQPDY+JZEKo2+7hyNcff3UDd9MVEqG814V7J/uTX
      2V3e+LUtDi5eBE+dRoS3U8uPPuemkLhnAEuXhDOg+QDYvyWFA99VoUNN1NIlhA+4ebk/89bM
      xtfC37s1Ve5P5vXKSNbM9pXfA9xpt5wFMhTy6epjuMbHMd7xEvve/hhD7DKiHjS+rM1N4b2S
      CSyOdm/1Gf5mlexP3gRzTCeu4TpVP+Swd8sXlAcsZnG4up1tjSfCJv2/kRDhRg+zFc9//ipf
      9Hy+1fLuSEogaynK5dzwMMb3twEbVyZPGsg335neyg3n+Wq3HVOj2jv526DqgZNHEDNffp4h
      p9azu9TQ7uqXKssZOKj1Sa7VOuLn3/1PfpASyHq0Wmz7PND0pUqlovLyFUBN5aED6KLn4vVL
      T0AbTx6PGMDKzCKi3U0PPOamkHh2FGtm+0LlfpJf3005QHYi2QCoiZrnR86G5uW7AZpKIANV
      Zz5n0zYNZf/UYev0EBNnzOWJYT1Ng+aSklxB+JLHsMncwnufa+gxeSlLjDUVxfu3sPVwAZcb
      wN51JDGzZhHYWNpV7id5fz/m+pTy6d5Mii83QJ/hxMQvILSp/DNQm7eXj7cd40KVDpW9KwHP
      LCDW1xGA+uL9bNl6mALjAIyMmcWswLavgJX7k9nEHJaED5AAWI2dHbprP4GpIjcYDAzo7wz1
      mRyseoSYh7NY9+c0vrumwnX8HBY9NYye7e+x5e7dPHA8XEIlXs01f6MB4SxZE05uSiJnR61h
      tlmBH74mnNyUZCrCTWWViTYvlY+yBzNn+dO49IDrFZmkfPA+hxb+gcfM1qvJ3siOLDdilyUz
      1NEGgMpDH7JTG8WipAU42uipObeX9WtTcVg6E5/Gjz+f+ZKtvR5n6qIkPBzvo1aTwuptJxn5
      +1AeAAznvyB56zWeeGElz7v04F81JZz8vgpwhMpDfLhTS9SiJBY42qCvOcfe9WtJdVjKTJ9b
      PchjJCWQtQz2ZWjBEU5c1oP+Rw4cvMjIEX3JSzuPV/QDHFmfzsB5q1jzl2U89lMKW7O1t7f/
      AS4MtNjBask9oSciLgiXHipARQ+XIOJinPn6dGnzajXH2FEYyIsLw5tOfijl9DlvYqOHYlxk
      g+PQaGYGl3Ei1+x7Gj2d/3gqCA9HG0BF7zFj8KlvoME0vuZIAYEL4ghy6YEKsHH0YKL/YOMI
      p8/hHRvdNKaN41CiZwZTdiKXjn5qcgWwFtUwfjfre9avWcbnplmgeQ17SHGNZG59Dn8d8Cgv
      uNoANowJC2T3iSLw9+n8/isruGixg/2B0uIznPjPM2y6+SX/Mc1/7+HPjFjflleqn36gtHAv
      hxL3ttqrOuoa0P47tFER5ws98P33tgqan/ihtJC9hxJpNYI6io5GkABYUU/PKF78ryjjF4ZS
      0j68n8ee6wsXG2iw79/8D2dnh21DPTrAtpP71paVUDM4rHX584vo0ek6MR1q34ueN5+jOh3X
      1VEtp19vmw22t/zGdeium03h3iYpge4KBsoPpHEtNBx3FWBvj32DtvnyrdWis+/Z6ZMfQzlH
      D1cSGuTV8bqd8iBuHnnkF7Y/q9Qm50G41+RRUN2V8Qfh7llCSZuzWs4Mcq8h7xcOIAG4G1Qe
      JbVoNE80PhDrPBTvysMc+lEPhlo0R87i4Tu4EzvSU39RQ+p/v8O3fvOJeNBSB/gAY8Z5cjpl
      IxkV100Pvtdz8dvdfHGysoNtBxMQXEvahjTO1Zge2r9eRUnGFvbkdXZ8O8aEDef0uubx9fUX
      ycguMo4QEExt2gbSztWYHrK/TlVJBls6MYCUQFZXzfHPTjEkeonpf3YDeJCI+SH837rlJDbO
      ArV6WrxRObtfb5yytMXBbQSTn17G00N6397vEDrQMyCOV1TbSXlvBan/1IGtA24jJjP1KecO
      tlThHpXAQrtUUpOXcbnBgMq+P54BjzPDv/Pjq7yeYkncIVI/WkFqlQ5bBzfGzJhLEKByjyJh
      oR2pqcksu9yAQWVPf88AHu/EAPKb4DtMnge4u0kJJBRNAiAUTQIgFE0CIBRNboKFoskVQCia
      BEAomgRAKJqFGmUP48Vtn3Bzb2zzRtrSN6w90igbuEcbZQ+JIab3DjKyrjLHvZ/ZC1fJyigi
      ImIy+/Yd6PIw3Zo0yr61u75R9v2DiIwMIPPAEa6aL687RXpmCOPH9+jyEN2dNMq2Hot8GM55
      bBDDVqdzqm46Uaa2Tz9nnyI9IIRXHb6xxBDdmDTKtibLfBrUPYAQ9Qecyv6ZqInGXZ499TUj
      whbRDwlAu6RRtlVZaBbIh0cfd+brU2dNX+eRcUzNhCDLPI/UnRnLH98WjbIzc8wacKl8GB/y
      A5k5Zk+3mhpl+5k3yp7mTV/TM7fGRtklHDXfJn8HabbPsjwuALVd87u71+RYQgf3M7VIbWyU
      Xcll0/nd2Cg7PlTdtE6bjbLjQ037VZkaZTtzON0C5dzp94mPj7/pz3rOdH3PgAWfB/AJmgiv
      ZZD3sj8+pZmkE8If3YHSDjdVMGmU3aF7plH2qHFMuLKWzNIXGJCVQfnEBdzGI9zKJI2yrc5y
      Abjfn3EhhaRlldI/vZDImbfxuI9CSaPsbtUouxePTHqEzGNvc/D0BMaNstyeuydplN3tGmX3
      GhdCwIrVHH1kJSvlaeN2SaNsaZQt7lXSKFsohjTKFoomjbKF6L6kBBKKJnM1d5j8x1h3N7kC
      CEWTAAhFkwAIRZMACEWTm2ArkkbZ1iGNsn9F0ij77iYlkLVIo+y7gpRA1iKNsqVRtqJJo2xp
      lK1o0ihbGmUrmjTKlkbZSieNsjtLGmV3c9Iou33SKLt7k0bZHZBG2d2YNMruDGmUfY+S5wHu
      blICCUX7f+4d/Z2d4wTIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Income (bins)' width='192'>
      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
      989G7g/wH/w8mQzfL/HhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Policy' width='192'>
      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
    </thumbnail>
    <thumbnail height='170' name='UE per Policy_Type' width='192'>
      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
      BxAI9Jj/D+/t1IPurWvNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per State' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='UE per State GrandTotal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3Qcx5mv/fT05DzIaZBB5EACTGISFShSkmUrOMi7a3ttae/ut+v9fO17
      zt09G+/dcL4Nvrt3vd7oLAfZki0rUiTFnJEIgsg5x8EkTJ7p6e8PUBIJgiZISiKXmOccnAM0
      uqurq+utqq56318JsizLJEiwRlHc6QwkSHAnSRhAgjVNwgASrGkSBpBgTZMwgHuYiYmJO52F
      u56EAdzDRCKRO52Fu56EASRY0yQMIMEHgywx23uWb//zP/CDt84TDIcZaT3IN/7PN3ijaYhb
      XW3yT1/gBz89iCsQ+2Dze5mEAST4QIj6XfzoWy9g2/wYn9hVS2Sum29+Zz+bPvFJdlfbV53O
      wtnv8NW/fh3X5b+lsJfJaQdR6fbXaxtf+iv++oVzVx0T//zP//zPbzvlBHclLpcLm832gacb
      dI7w5k++z0tvnWROSKY8T8mR736Xl08043DMMe+a5/zbb3GqZxz/3Cw+QzYllgD7f/oCL75x
      lJmoldLCNMR4hJHWw3zn+z/hWOsEVkuQV1/4IacvDTAy0EXIso6iTJHpER/5eRYOvvI6hsIS
      rBolE5cO8maLl6riZIbP7effvv8iTd0zZBaXYtWK1+R5sfcwX//Wz+nuH6avYxhdQSFZ+mjC
      AO5lPhwDCPDyP32dSO1n+OLjlTS/8A1GMx7mgU3F9F1s4+O/90d8bPtGCrIUNA7B//rjr1Jb
      YOPVf/87vMWf4PmnNtHxyr/Spa7DNneEf3qxh8/83m+zq8SCMqWMGvMsLd46/vCPv0RNhpmQ
      p5MXXmhm8+56ho6+zIh5A7U5eg59/19wZG0i3XGK753y8tv/7/Pkxzr41itd1DVUoVcKV+Va
      nZSHafESnqwn+JPff4pss4LD3/06yg+4dBLc6/gHOH22B3nuu3QdkFkYn6JkbA5Flh6FQoFS
      pUKlVKJUKlEoFKjUKpTiFOeOtBEYlek9KuKeniGvdJru+TOkNHyKwlQrasFKEjAviigUIiq1
      +qrKKajN1NfZeeFiD5EGiYEpBTs+mcfQoe/QfSnAP/5VL7Gwm2kpj2BIAu3Vo3tBIaIUFShE
      JWq1isiii9be+YQBJLhJ5DiqpHw+/ft/zOY8He+2syH3zK+4KI5gzuOzv/sHbC+2vnf0xLd+
      yqp9MQUl67buQPzrw7SdmmIq/T7Kcg20xQWKH/gsf/WF7Tf5IAICiY/gBDeLsYS67ACv7T+M
      Y2GBsYGLtPbO3eCibOrLZV7ff5TpBScTA5209UxQtHkn7pYjdI5OMTPUxbgnhiUjh6h3iPFx
      B75Q9KpUFEnlVGZO8vOXT1O+ZRNWEQpq6/Gce53TA9M4Zic439KG9zozRpa0bBbHB5hxuImp
      dGyqyUl8A9zLfDjfAGrKNtQRH7vAoVPNTHnVrG+oxKgWCEclCssqsOpUyPEoUcFAdVkhSlFJ
      aV09iulLHDrRyPiiguraKnJyiynPlDl64B06p+JU1q7DmlFMNqOcOtVEPKWUvCQVUUlPWUUh
      OrUGm0Fg1JnCx5/cjFUlYssppSpTwdFDh2jvHSeloJqCTCuiQrgm58mZRZiD/bx9vAdr0To2
      bdmMkIgHuHcZGhqisLDwTmfjI6f1tW/w8/NXDsnMbP/Us+ytzWW5WSQM4B5mrRrAzZD4Bkiw
      pkkYQII1TcIAEqxpEgaQ4EPBOd7Ej18+SSQWv9NZ+ZUkDCDBh8LiwiAnz3Zxl9f/xEpwgg+b
      OM7B8/zgxYMsBGXyN+7hmUc2o5pv48UDY6wrlTlxpANb7R6+9LHNOJpf4rCnmk/vKcc/eJ5X
      zrv49Gf34m4/xM/eOIMzJJC/+VF+fW89mtlG/vmwh6d2Z/DTX17kyc88TX6K/qZyl+gBEnzI
      SPhDep753T/kz/7oy4RO/Yg3Lo4RdU9y8uRxQhk7+PJzTzH86ot0BcN4xttp7Z8nBgSd4zS1
      9REB4sokPvm7/5M/+sqv4dr/bxwcCoBnnGNH3uHHLx7CWlCESXPz7XmiB0jw4SKL2KwKXvjW
      3zDlCjA5ssAGbxj0oDfmsa4kFdWsExUQlUGzYhpxtOooP/+Pv2fC7WFsYpxUdxyMEI4p2Pzk
      b7KjKOmWspcwgAQfClIoiKjVQGCSb/3dv5P93J/xfLmFY9/+W4ZvNrHwKD/4xosUfOEPeb5O
      y/6/+RPcl/9lSrGTn3lrlR8SQ6AEHyhR5icmmJ4a5vzpQco21aBWCogqgVgowNRgO2ea+4n+
      ihRMtlSCc6NMTEzQ2dWDLwwIICoVSCEfw5daaewd5YP6tk44w93DfFgRYdcnzmDTQfafuEhy
      3aM8/VAdWp2RdYXJNB07xkzEytatNWTk5JNt1RJXWykrz0Mry0ioKKxchz2/FGm0mfa+ObLL
      asjJzqKivJqiLDVtZ87i1WVRX1lKZkEZmSYIq5KpKrWzQhDYqkj4At3DJHyBbkxiCJRgTbNi
      DzAxMZEQVboH8Pl8GI3GO52Nu5rEEOgeJjEEujGJIVCCNc1NrQN0Hfkhvzw3xaNf+h/Upa9s
      O33Hf8zpcDVfeLga4dqotP9C+GjafxypYAMbyzK5xUmGex9ZItx8CH/zCO8PJVIw/vrjaEza
      5ScjTffiO3kB7UPPokkCOeTA//ZBwnNBNFsfxVCViSCAHJjDd+AdInN+lCUbMW6vQVRfUefk
      KNGuJhZPt4M6Gf3Dj6DJNl8T8XUjbsIAgrxz7DwWtcj+0z1UPVWx4sVSNEww8uHI2H2UhKf6
      6A1pSBrvIViYjlGd6CxXRoF6w0Oo65aqv+yfx/tOM6JwbXnJ0UUC57qIe0aIBUCtd+H75X4U
      9Xuw7VXh+/kr+OL7MJZr8B9uRFm/F0OahvDx1/BdTMKyMfe9tCIXjuGf1GP5jS8ihB2ExxeQ
      P0wDkB1tjC7m8htP5fDtQ004Hy0nTRvkyIs/gupHUXW8zljyfWwymtGHgPAcr/3wx5wfnkeO
      S+gKNvE7n/0YancnP3nxDSYWVex65tfZXZXFRNubHOzRUKIc5ESng8qHPsXH7ivC1XuWl147
      yrQ3St6GB3jmsZ3YtIqbfsibRo4xPuykpLKI0OAA7mAEo1rLeG8LQVMJJZlmZClCx8UWsss2
      ovYOcvREIwuSgW0PPkJJmoGZsS4iqnQcHUdYSN3MA+sMNJ05TveoC2NWCQ/cv51knUA8OMex
      g0cZdQQxphewccsG8lOMLAy1cOjUJWSLnV277yfLrLo7e1RBQBCVLHWRMtL8CEJSPgq96qrT
      ZDlOrOsM8dQaNOIUMiD7/MiWdLT5aShUAvqNFXj7RqB6E/q9+1CoRGRZRpWdTNjz7vJZjEjT
      YVy/PASmHFwjXWh2P4qpuuCWsr/KZi3G4OljiBU7KKzfjHn+AmNzXiDKSGcTR157iRankSJ7
      Ct7pXtr7Z0CTxhPPfYW//NOvsSVTxJhWhMLXx//5ux9Q8rHf4k+/+hRnv/P37L80h2e2n5NH
      Wyl48HP8P19o4OiPf8GcN0xETOHp577G//5fX0Nu/jmvNg7e0kPeLPFIkNFAlLz0LMozoHvC
      A4BWlBkYHgNkoouDjEyrUMouWi5NsOWxT/Nrj29k8NQRJgJxfAujNB49TNi+k921diLhGFnV
      O/j8l36T7YUqWpp7iIScHD1wFFvdXr7wpc9RpPMw5woRmOimeUrFJ379CzxWn8H50+fwR+9y
      v2KAmIfghQm0DdUolqkyxGe68Q8ZMG0v5r3OQaVE9jqRFsPI8tLzxf0BEEQUKhHkKLHeFnxd
      EfQVWZcvUqLeuAN9ZT223/8KKV9+HlNV9i1neVU9gBxxcq6pD/uuzxL1KUnTeWgfc9CQmwIx
      CXVWPc8/ex8GtciFriuuk2N0n3yFk64CvvZ8FcGel3AZy1ifm4JKl8a2dVpO9YySawZb/jry
      kvS4IxoUkkQ8rsCkXOSnP/hHJh1+pgfdVPqDt/ygN0PIP4t/UQQ5giYtiYVzw/gr0klKzyR0
      qYegXMFCTzfmsr0Ivm46Wi7SPzaMAIRjEtmeCDpZgbV4I1vL0hAAQSMy03qaI2/OEw4G0eU2
      4PcYiafkUWW3oBAE1Fo1ceLMTo4w2DbMRG8zxKMsiBnsjkpwNw/DZJnYwEWklGrU5uVdVYxQ
      80VU63Yie73EQ1Hi/kVIs6GryMH38+8Rj4BoNSIrMpeSi4UInX2H0IIe44O7UVp176UVaTqO
      v62F4IwDhUq71APcohGsygB8U8M0OlXYL77Edy/KeGQFfU3dfH77DlBpsRfmYVBf+5kYmLrI
      C6/18MRX/pAMnciUUoksSe9JZUejMZTKlT8v4745Xvj2j8l88r/zfH0uZ7/11zTd0iPePK7B
      NkadUYIH3gIg5A8yMr+ByrQ0ak3nuDAyiXvGxvbNeoQ5kdya+9mzb8NVanz9CzoyLFYEQQA5
      Rk/7BaS0Oj73YB6BuT5Otc4hy/JlfbLlaKja/XF2Va1eVflOI0d9BHud6O5rWOGJvMRdUaJN
      hwk3gTQ8gTzzFson96Gr3k5S9ZKqW7T7DIFZPRAl0nSYSLwYy8dKUYhXpqhEvXEfZpcLOfcR
      9KXJtzU0XJUBTA5dRJn/CP/ja08hCODuOsiffPM8w8Ed171GDs/y5g+/j7r2CbLEABOzMtbM
      DRSr/4N3mi6xMcXNqQkdjzxaCAMnrk1AEFArFIT8bsZ6ZjjWMoIh55afc9XIkpv+YSWPf/Zp
      CvRLJTt26SgDY1OUp+aTX1/C8Z8cJ7WhAYsCouZsBO8BLvUlk2dT4XTMYstdf23C8ThSNIRj
      ZpT+llbmYjlozSZEVzPtA5PYjRL9Q1NkpNWTmZvBueMt9FjUWBVBpt1RytcVoVUtWVg06CWI
      DrNWSTjgI6bUYtCorr3nR4ZMfL6fuCIble2KgJRokJg/jmhNwvS5z793OPjGPxOv+zS6jBCR
      vm5krRlF3IO/bRLt/Y/C4hT+gRCGB2xIjjkkQGGwIhrfd5ZWF5fiPXkYUb8DUfIRWxTQ1BTf
      9Lz+qpzhfAse0stryU+zIAgCWqMJtSKKNasUq0ZBRn4pmdbLU15yHENKLvkWgWGHH9k/z2B/
      H32zQcoqatjaUMJI6znahhZ58DOfY1NhEsgyelsO6/JTQQaF0kxpdTmlBSn0t7YyHU1m19Zy
      UrPzsScbP9yP4LAPtyaZdVnW9wpTrTUgyzJJNjOiLgVF2ElOSTk2vRpRqceeZWO8t5OB0Vl0
      qUXkZ5hQCDI6oxWjTgWCgM1mZnakh4EpL1nrKslNsZKSnkl+toWBSxcZnvWj1ysxJOeQl59H
      bhJ0tV1i3OEj3V5IqlWH4nJTtzjRwYDPQJZVzexQN/OSgRTz8inHj9YZLj4/g1hcg8p4RZu6
      OEGgy4XKnnL1O4vHUSTnIGoF5MA8odYLRGYCaHc8hCbTAOEQ8YVJIv1DREdGiY6MEtemo059
      f1VbYU1HnaIk2NhCdD6IqqwcpVF903UjsRJ8Jwn76O4bQDRY0QgR2ts6qNzxKIUp11bmWyGx
      EnxjEgExdxKVljSLlva+PqKoKdvyEPnJH0zlT7A61nwPIMsy8fh/gSnGW2BoeBh7bu6NT1zD
      rPkeIB6PEw6H73Q2PhTCkSgzTteNT1zD3MUTywkSfPgkDCDBmmbND4GuQY4w2HScMz0zGDPW
      8eDuzZgEPxdPncFYu5Ni25XCHQFO/+QHXAwaMKkUaMzJ1G3eRkmGCSHo5FTLMBu2bUAnS/Q0
      HqC1301K8Qa21+XQfe4desZjFG/ezqbSzERLdIdIGMBy/DP0eKw8/ez9zLQepn82SJFiAp/B
      TqVFfc3pal0aDz/+FMX6KO7ZAc41nsP84INk6K1s3lyLEplIMMCkw8e2vU+SZVEScs/hkkzs
      e3IbZp0aQY4TjUaR4iAqlaiUIrIcR5JkBOLE4qBWKZHjEtFoDFlQoFar3lsXSHDrJAxgOZEw
      kt6EXqVCp1cx7nUw5prDaLZyoa2TwnXrSF5hwUUQVdiyyinLmWBwbIH07Agvnhjk1x+p5dK5
      k3T0DjPlfQt7fjaRmXH6puZwLARYV7+ZXOUMrZeG8YbCiIZsHnhoO6rQAM2nFxBVDhzKHB5u
      KGKkq5n+cSeRuERO2U4aqjJRJ2zgtkgYwHJMSVg8bQzNWHBMBVDbHAR0ahZnXGTYRBrb+9m3
      tYLrOaDobEmI7hDyu4MapZn1Ox5kMRKkcuczpBkg5CrG1DvI+o1b0IkRmg+0kFu/jQwtzHWe
      pXnYw9b0KONjk9Tv28XmnBT8s/04wma27V6PGPPT3NjEfP5jZJsSoTq3Q8IAlqNKpmFjPmcb
      2zBk5yNKCpI0AZT2cqryZIZODCLDdZfcQx43MXUOAqsNCnIy3D0O4Rj9AAqR/DxAUGEvqaLI
      nopKAL9rnMHeGTyuqaVsmtPRCmt6CecDIWEAK2BILeKhfXYGLpwjlt2AbvESjmAEKSaAYuWA
      HFmOE1qcY2wqTN62FAR+1b65V2IiLTeJrG17KE7SIEVDxFAjhWYRRfG9jkZjSCIj38ru+9ej
      FSEcCqFUJ17f7ZIowRWJ4xnrZCSayf0ZeqLqTHrONPHWiIgtv+aqM6NhF+cPv0W/RgAZsiu3
      kmsRwbvaexkoLs3g7LH99Om0KFVqSuq2kb5MJdaamo+t9zgH9s+gViowpmRTV1NFZKKLuXgW
      FQVJzA+141DZKbXbErNKq2TNu0JIkrTCSrBMLBwiKqjQqZVLrbt/kWAUDCYTauW7vUCc4KIX
      fzgGggKNzoBBp16anYnHWAxGMeq1gEwoGECtNSIqIC5JRKJR1BotCgHkeIyAb5FgJI5SrcVk
      1CMQJRwW0OpUS/eSZaRoCK8vgCQL6Awm9Bol0bCfiKzBqFMRCfqIChr02qVrhkZGMSbdunDs
      WiBhACsawL1BwgBuTKKnTLCmWbEHmJycXDPSiLIsI0nSnc7Gh4LP70epvnbxLsH7rGgA96p7
      8FpjeHiYgoJbkwtZK6w4C6RQJEZG9wKCICTe5Q1Y/TSoHGWovYm+CSdKcw7rN1SQbFihe435
      6W5pRle6E7vRR+vpNrLrGsiy6PA7hmhs7gZTIZu3lXNz+/m9T1yK0nHmJMaKTRQmf1jqxyGG
      O/qQk/PIz7QkPpauhxwnNtpFeGThCmlEI9otNSi1ywP1ZeLuGcL9YygrNqMygBz1E+7oIOYJ
      I2YWoCnOQSEKyOFFwp1dxBbDKNIL0BZno1BeKY0oIU2PEBqYANGAuqISpU130zHBq3qvcjxA
      x5vf43sHuhDNSciOKcbc15nojrg48uK/0zwNUtTFGz/5Gf3zPsDLge9/i+ZpGZvVcFtam/FY
      hKM/+wFtU+4bn3yr93CPcaKlh87OTsKxNT1RdkMEnRExKWnpx6gk3NVFPHztSrgsRQk1N+E/
      +RYRF8hSkNCxA4RmwohWC9H2E/jaRpCjbvwHDhHxKRAtRmJtxwkMLlyVVmykncVTHQgmKwpV
      mHDfGLfyllanCzR2if94vYff/frfU2p818Zkgq5xGs+1Mu0OYc4sZuvmOq7UIFCqMnj82SdI
      tyrpOvcWB870krKthKlpF8XlmYxfOEXbwCymnEq21Fdg0Qa5dKIJTekGpIEWvLZSTP4ewoZs
      vKNdzPq03LdvD9k6NQ986vOoM8wgBem/0MjFoWlklZmKhq2U59hQ3JaTmMRk/zgFG+qITI7i
      DUbQmTQsTA0T1WWQbtNBPMbE2DDWzEJUoTk6O/vxxrWU19SRYVbjdkwSU1rxjV/CYyymOkvL
      YG8XE/M+tElZVFeWYlQLyJFFOtsvMecJo7NlUFycT6pZi29umItdo2BIoaKqApvuLvX5ERSI
      6fmI6Ut/xkbbUBaVoDSuIIw71kwkmo2ucGzpUMhP2Cti2LMFlUmN2ibj7ZiE2mz0ez6GQqsC
      ZNQaF95ZF5SmAhKxwQ68r7+FnFqFNDOPsmoDRvutTfeuqgeYm+4haKugxHDl0Tiu2RkkXRoV
      FUWMn/gpL53o4cr5lHgswjuv/Ije+SCpOXZSjEayC8spKUhh+uSP+c6BfjJKylhofpn/fK2R
      OF7O/OJF3njjDX769hlmXH5a3vwWPzzQhiWnEHH0AN97u5uIFOXMqz+jdcIFYRfjCxJ56ypI
      ksf5t2+9hC9ye7M6cjTEiCdGflYmReY4Q44AAAHnJJ0Dk0sqaMEZOi5OEIn6aGu9iGjLJNsq
      0XTsPAsRmfnJHtpOHqHDoSLZoiPocbIYV2HPz0PlH6O5fYxY1MeFE+8wETGSV5DL4mgnw3OL
      RJwjnL00SYo9F5Ps4Mz5S4T+K/RC8RCRzj5UlbUI4tUtkOydJNDqwbCrFsW7za7WiCYJgh39
      RKenCHUPo8y2g6haqvxynLhzhkCPC21+6uWLBBQ2K4Lahra2EnVxIUqzjltlVQYgSREUiuUu
      wCJp9gI04Wlamttw+hYZHplGWuk9KcT3DCCnqJySLAVH9p+n9vFPs31DHfse2cXwiaPMAfFo
      BBeZfPkP/ycf37YOpcrIuuo6aqrrqMg3sTDrutrNTJ/GuhwNg+0t9I86mR0ZZuE2pzXDQReB
      sBKryUhOcToTPeOEgYzsHFyz08QA98AFKKhFHRyjr2eG8aE++keduB2djM1HIBLApS3g0fs3
      kJNkQJ+UjFkI09/bw/iUg7n5WXwuJ9NiKrs3V1NUWERmqgEhLjM9NMzs/BQDPT2MTy/QPzJE
      YIUhxd2FjDR1iUisEG3O8rG4TOjCBcTKDaj07w86BEFEmZGFPNWJ//gJoiEDyiQTICDLEtGe
      83gPnEKsuR+t3fb+feYmic3PE+68ROhSF1Gn/5ZzvaohkNlqR/K14JbA9u4VsQAnfvafnJOq
      eHr3A0xq3Zz0rfKukkQwCpmXu3VRVKIIhQkBgkpLWXUNSfrVKZ0t9p/gmz86x55PPU1dbJLu
      0ZOrzMT18Y2109Y5wNj0MIIcJRAxMumppNCSRmG8hZ4FJ84hFbWP2ZDnB9GmFFK7vgSVAIK4
      GYtNxcSChdKCrMvSiBLD7U0M+83U1G0g6BylYzRCLCaj06iXDddkIuEoKbll1BakAbBBqcOi
      u7vdtuRYiNClKTR1O1doVR2EzrYT04wQPCQgTfYhd34b9t1HbHAc/cOfQGlSEZ/sxH2+Da19
      F9JgI/7eKPq9j6Gy6a8wKAViVhma0ouQV4Eux4RgM91yvlfVA6Tk17DTOs333mzDG5FwDg8x
      5nQxO+0ibV05BRlG5qdmf+X+r1ehS2JTdQpNx5vxRGJ0X2hELK0iiyU3Y1EUV/0173fOsqhK
      o6a8ADE8j9O76lxchyDD/T4ef/73eP6553ju+d/hsc0pTIzNIyv0VNVn0Pb2ORwpWWSpBTTm
      TBTBKaJqCxlpySgiHoIRBQggvKv8Kcu4fSHSsnLJSDURcs7ji4HGoCEwO8WUO4IU8TE95SCG
      grQMC47peTS2NNKSTISDfqT43T0Ekr2TxIJG1OmWFf6biu0P/ojU//5lUr78e5i3r8P0a19C
      X5CE7PMQ8wRBkIk7ZpAlBYTm8DXPY9i7A/VVlR9AQGFOQldRRmxkBEVqBqIQJDI0eUt7B69K
      GlGhNlLW0IC75TVefu0A7RMhSqqrKM/Wc2r/a5zrdVFQlInalENNcRLTwyMkV+0izywxNjSA
      vWozWRaB8b5J0qsbyE3Wk1lai9R/mJd+8SazujJ+49OPkmaQmeqfwFq+kcKUJXfIudFeNPb1
      rMuyEJwbYk5VSH1pKnPDQ9jK11NVXEho8BS/eOscQnIBJp2a2voaTNcR3b0Rsm+OLo+e9aWZ
      KC+XvFJU4HQHyUxPQWVKZaarheyqDWRa9YgqA6mmGI0njnK2tYuwLoMCewqxoBtRm4zNrAEE
      zDpoO3uMc5dG0aVlYzMYyS0owG6ROHbwIE2d44haJZb0PAoL8rHFZ3jn4FEu9IygTc4lO9WM
      eNk3er7rKI3zRgpStAxdOMVw0ECm7dpJ5Y9OGlEm2n8Bwb4ZdYr2/VghRzee4+OoSq6OeY47
      JiCtHKVVhzrVSPDEAXzHzhET0jDt2owYcRO62EywsYlAYyOBxkZiinQ02db30lAkZ6CUZ/G+
      +hbBjnHEglJUScuN5caseWe4O0okwOj0AimZWeiEEEfefI3MhsepzLn1Lv1KEtKIN+buHlje
      64giisUxXjl6kDAaKrc8yLqsxLamHyWJHuAeJtED3Jg13wPcy/EAgVCYkZnZO52Nu5qEi0uC
      NU3CABKsadb8EOga5DiOkTaOnuklqXwTO+uKUBJl7GIrUsF6Cq1XesCGaD/0Bi1TQVRKNSl5
      pWzeUIlVr7paGhGZ6b4mzrYOYcyvY2d9ITM952m8NEteQ0Ia8U6SMIDlhGdp6fLz0NOfYOrc
      YXrm7RSKUwwFtWwzLV+djhP2K9j+1G9QpA0x3tPIiePN7HpwC1ZdEtu3LzloxaNh+oYn2Lzv
      k+RYlYTcs/TPhtn39NOYtYmqfydJGMByAj7C1lRsWh2hZB29Thda/xgp6cW4XS7MFgsa1bUr
      1QqVlryq+/B7DzIw6aU+LcxbLRM8uqWQxiNHaL7YQ/90iNxCO5HpMfqn55madlG2eQdVKVEu
      NLYw6gyRVrSeXRvLiAdH6e4MoVdO0uU2sXdbNZ6xDs609hFS6Nm442GKMgyIt+X1miBhAMvR
      GVB7hnCFQ7icQTSmWeYkHYHuZsZQoMuuYHddwcrSiIISW0YqHrcXOVmB0+sDlYWND+wjKEtU
      7vzkZWnEeZLfk0aUuHTiCBkb97DNAv1njtAymUutJUB/ezs5GxvYt6sAyTXGgENk3zOfQRma
      4djx01h3P0SaPtGD3A4JA1iONp36dVMcevkXmHOLSZLBZoii1DfQUACvnxkHrh9nGwsGkUQR
      Vh2e4aSntQvv6AznWIp2y00NgEVBUnYpG6oL0IkKpheG6WruY3iwAwGIa61URiRIGMBtkTCA
      5QgiqcUNfKq4nume88yqctDHevHFVShEGUGWr68NKoeYnXSStD4ZBY5V3lCFLXK56QQAACAA
      SURBVKuA7U98jEzt+6n6vU50BgNKcamCK5QGiurvZ/d9pYlhzwdIwgBWRCY030fnnIFt221E
      55Lobe+kbVGJznr1nreSFGR8sBdJE2NhYohoRgN1qRpYXO29LOTmCJw/eZYyexKRgBtdVg1Z
      y3zbrKk5RNrP0HwxhkUL/lCMotIaVOE5/LKJNJsev3MGv8JCqvXmY2PXKqvyBr2XuZ4uUDgY
      xZaVhVWnQq0zY1RF8cR0VJYVoVMrL1cwAaVaSWBxkUhUJqWgitridJQKAQQRg9FEktm4tLm4
      3oTFYkUlgqAQ0en1GA0GFIKANT0Hg+xnwRtAbVryJlWJKvQGI0ajBgFQagzYs5LwLCwQiMRJ
      txeTYlYT8s7ji+mwGjUE3HP4ZB1mw9I1LrcHte7Wo6XWAmveF+hedoVISCPemMQXVII1zYrf
      AC6X656VC1xOPB4nFrvb421vDSkWJeS/9XjZtcCKBqBSqdaUophGo7nxSf8FWVxcJCMl+U5n
      465mRQMwGhNBGfcCCwsLWCwrxegmeJdVTYPGY2GcCwugsZFk1aEgjs/lRNJYsKxSvWF1fFjp
      3goSPrcXWWPAqLt2V8gEl5FlgsEQ3qB0xdKfAqtVh/aKBQuv10fgCr0ChUpJklEDUgyPP0JU
      klGqVVgMapQKAUGWkaQYiwEJo1l7bUWVZSLhCK5AFAQFJqMWnWrl7at+FasygNBMF3/1p38B
      xR/nD776OdK1ft761//F7Mav8uWHP0j14Q8r3VsgMMErLx7CuG49j95fj2btjAhvEpm56VnO
      DnmRAFmK0TMW4tnPNFBpft9ztr9niB7P0u/RSJgJv4rfeqyCuaER2qdCxBUQCcXILS/iwSIz
      wUU3R5oHudAHn/vtBnKX3dXndnKsdQKXJKCQZVKys9lVlcJyPbobsfqFMGsdpZZxmruneGy9
      +Yrnlwn7XEzOOogJGjKyszGrwoxPekjNykSrFPAvTLEoWEg2wvz0LL5wDFFjJDs7A61SQSzs
      Y25mFl/Ej9O/tC+BLMVwO6ZxeALIgoqULDs2g+ojaoll5odHSKltQPA68IWiaPQqgn4PcdGA
      XqsEOY5v0YPGYEERC7Kw4CaKiC0lFYNaJBz0EVdoiC46CKuspBhFPC4ni8EoSo2B5GQbalFA
      liI4HQ4CEQmlxoDFakavFokEvDicXlDpSEpORqu8S/sgQUFeUT55RUt/Li440Brc5Oqu7sHr
      N9VQD4DM7PAgp11WrDolxuI8SspVqJUCrolJXh5w8mCRloERH0WVdhaviWiTCSwGONU6iM+Q
      yVa7CbNZi0EpcitjhtUbgKBm6+YKXmts4ZH1u987HPHN8uoLLzCnTkLrn8Vr3cIXn87nG3/9
      f/nUH/4VDXnwzrf/jvGa3+UzpQvsP3gJUR1npLObdc98jWe35ND06n/wRo/EuqJUxhYCZAIR
      v5vTh19nPqwnNNPLXNIuvvzFvSR9FCMjKczQTJjiKjuRrhkmPCGS9SqmepqZVJawoyYXKeLi
      7NHz1D2wi9mOU0x6BeJRH7K+mPvvr2FqoAWHU2bS4SGvdiv6cIDWi51EJJFIOERG6TYa1pkZ
      vXCSxvEwVr2ShTkXJfc9QH0mNJ5rIxCTiYQCGLJr2b6+ENVd3wvFGR+ZJjmnGIPqOgYbDdA0
      EGLDtmTUCgG1TgOyTMjvp33EhT0jG1BTXWMHfPRc4/chs+haoH14kZRCE+2DAfJL7GzIvNm2
      f4mbKtLM6k2UuNo5OR5679h873HODgtUV9dSt6WW2aa3GHBlsqlIzaWRKWLzA7ROG9i6sQBr
      ZjkP3L+V2tp6NhbrOH+ui2C0n1cPjfH4r/03PvfZp6i1L2m/qAwWNm1/mPr1NTRsr8HZeowP
      UQz6KiJBL96oTIrFRmGhlYG+JTnEzBw7C7NTxJEJjF0klFaNLjbN6GScnLw8iopLUTgvMjwf
      haCLvgUVex97jIaiVHTWdCrKKykqKiQnzcz85Dh+9zwdCwJ79z7Cnj17qMozgyQzOzCEV6En
      L7+AotxMxkd68Yfu9qlamYjHQbtTz/o87coVS5aZHJkhkppGrv7dih3gzTea+b+vXsKhtlCZ
      aeT6uzADCBjMRtJMOvKzkym1J5FhvHWPnpu6UlCnc/+eQr775hnSL7+P4MwEkz4Pk6OjaES4
      74mPkWNRYlhfwgsdfUyrFwlk1lCRLDJ++i2+dWiMyopCYothJIWE7J7GJRhItpoRhMX3vIz9
      jm5+8O8vYy0vx6ZzI0sxPipxtOB8LxdaOplyOFBKXmY9ycxvXkdmcjpWdyeT4SDz3V5Kd+cg
      u88x41zEMDuDAjDZK0nTg0djo7a6DINWiSDHmRvpoKl3HrPZQHjRhTeuJhyMY7KY0WuUCAII
      CgGI4/Us4F2IMyMsrcXk5RegvV6LercQj9Pd7yCjxI71OtLccSlG16SPimr7FQai57GPNbA3
      GmWgd5T97dP81vZcrm8EMkF/hEAsSP+Yi4hZhWwwknWLUko3bTqpFXtJO/o3dI67yd8KBnsh
      VuEi63c+QlmaDrfLgUqtwFbRgOLt/exHoLLhGXRA36UmUuu/wNN7Cuh9c4jmYQEsmdhibqYc
      LoqMUXzBpakCz0QXc+pivvjUU+A8R9PB4Vt7wpsmymjPBLt+47eoSV1SlxtsOcjImJOMdTY2
      rTfx1jstYLDztFEgLKWTZFqgvH4r6XoR36ILUaPCoxAQhcuzEnKcyXkPRdVbKLMbmOhuomkE
      VFoFvgUnnmCMJI2E1+tHmaYgKdmMMqhl47Z6tERxL4ZQ3uXrMuGAjwGvwM4qw3XP8TkmWRDT
      2G5bGsfGYzEcniAGswG9SkVWsh7v6CISv6piKkjNzuDhWjdNi3p2NeSgjsdY8ASxWHQ3XaFv
      2gBEjYVNZfm8cbSNfCClZCdP1nTwzb/5M6xmM9llDTyxbw/Z6QWst0zzw0tW/viJDABKqht4
      44Vv8rc9tRRo3UvTZupCHn8kn5e++RecX1eC3xkiFbBmV2D1/Ct/9/9NUF6bRvQjav5l3xR9
      vnT25BjRXa5z6Vl2JsbHkYqTMOSvx//Kd8h59DMoBNAYsyjN7eLtn72AhEhafjnb7ku5OlFB
      QXaKkUNHX+G8Uk+yRYskpKI2p1KdpeTVn3wfVAbUiiglxQLJBVXkjL/Dj7/XjkKlIbusgfvr
      TbzrgjffdZQOqthdnsTQhdO4rRVsKFx2z48UmZmxCVRpdmxXTpe5ZnmpO8be+7IxSSFaLnoo
      31qF7nIPIcclRgZGaBr3EZRArdFQX1WEGFzklVN9DLkCTIz6ufTTRbIz7Ty70867rn15hXam
      W/r5l5cnUCiUVFYXsesWDGBVznBXniIIcOUVAiuHflxzniCw4q2Wn/irs7tiINYHyXt5FIT3
      OuH38y0gCDLvn7KU92tz/36pCMLS7ys+ohTF5fVjMFtQCVHOHnoTU/kD1ORZVjxfuPzw7+bn
      yrIXViiYj04Ya1mZvHf4ctkIwntxFFe+w5v2w7zinaxY7lf+f5WsymCWF+7ysr7eTa8573q1
      98Ou1TfBSnm8+tgyI7xuof+Ka95FjjLb28j57nEklKQX1VKdYbr++Svk5+4ouevk98qyWaGc
      rlsfVnXLm6/sKyaz1t2h72US0og3Zs1HhEmSRDR6u3sK3J2EIhGmF5x3Oht3NWveAODe3Rg8
      HpcJ36PG/UFxd8+tJUjwIZPoAVYgsDDM+eYBbOvWU1uQgoDEwvAA4dRCsoxX+mJEGWlrpGvK
      g6BQk5q/jpqSHNSiAsJe2rqnKKstRQt4ZgZo6xhGk1HC+opcfJO9tHVPk15WS0VeSqIlukMk
      yn05USctjUNkV5YR6mtk0C0R8c7TMeHGdI0zTpS54QnSqjZRX1eGMNvO4fN9hCQZVHqKiuyo
      gLgUobOjg5TiGsoLMpD9Tlq6hymqqiU/zXyXzOSsTRI9wHIWF3Cas9mRY2fa1UffjAdNbBCb
      vQKj+tp9xwRBhcWWQpoJ0tJSaDl8gL7ZXGqSIvSMLdCwLpULp0/T0tFPkktgIS+LyMw4/ZOz
      eHxQvH4jVVlqulubGXJEsFc0UF+cRjg0x+QEGBWTXJwR2bGxEsk5zOmmTkJKK/ft3EFKQhTr
      tkkYwHLUGsTgHMFYlFAwiooZxhc1RMaO8KNzAqX122goTlt5DluhJcOeysick7hRoGd4koaK
      fMo2bGbe46J060Okm5WE7BmI1mGq6xow6dUMthxHSq/igXKZrrNnaDc/RpHGSee5LjR5edTV
      lhFfnKa5d4667btR+sc5e/QM9z28DZs60X/cDgkDWI4hnTJTL6/89CV0tkyyUsPoTFE86vU8
      s0XB/pZRGorTrnu5IIqXV7bfrZgKNFodavWSzo9OC4JOh0ajwWA0oBHd9F7oxmWZp0eAmG8e
      Y/oCRUUykjqVzZtqsWiUzA6MMtjRzeTkKALgDUZxL27Clqy+bl4S3JiEASxH0FC08UHy6yWc
      411MBFMwK0aJqMxo9HFESSIOrLgJqxxlYXIOQ3EVAqv13Y6hsxaz6RMPkXrZ41NQiIR8XlLS
      M9Crl15RPK4gb/1OtjcUXpZGFBDFxBDodkmU4AoICgEx6qRnOEBuUSYGnQ6PYwb3ghO0mmWF
      thS7Gg37GGg5wUjcTkmG4SY+bG0kWZx09k4Tl+N450cYd7wfb/FuQiZrCgtjXSwEoshSmPHR
      AbyhJYeydzfRjl/+PbG0v3oS0ogrSiPKuCYnUGQUYrfq0ButxOZ7OT/gpb5hAxb9u6GZMj7n
      JBeaW+juG0WRUcmujaXolALEJfwxAXt6MiATDodJSstGowQ5Hicmg82WhCgoSMvOwTPYwqmm
      dhxhI2XrclAJMWKSluQUIwpArbeRmyRw9sQJLnaPYMouJSdVx/xgC/0ONVkpBmZ6GhlY1JKR
      ZEhII66SNe8LlJBGXNskhkAJ1jSJj2Bu0y33LkYQQCmu+Lme4DJr3gBEUUR3j46TdRoNOal3
      MlLs7icxBEqwpll9DyD5Obv/l7SNONFnVbLnoW1kmu9NUdkl/LQfP4+UU01NUerK8/4JQI4z
      PDDC6QEv7wu36Nh9fxF5uiurl0zA7eKdlgk8spK6qgIqM3QQCXCmdYQhT4yS0gI25plQCuCZ
      HOeV9oXL1ypZ31BMbeoV2j+yxNz4DIe655GVWhrqCliXvHyK+sasThs07OTt//wH2ow7+cwn
      djF5/pf84z+P8tWvfJ70e9QfJTo7yMW5EEmRLtbl7ry+0NOaRyDLns2+tAxkQAoFeLt1CuWy
      EAu/Y55ftsxRv74QqxDDF40RiYQ4dbIXwZ7L3lIFJ8/0ckouZVe+gbGhGbIqK9lgWbqHXn/1
      ivfY4Cgnx+Ps2liCMhJkwuEjnKzhZgezqzIA5/AFftEJf/mPD5GhEShIeYaetv/NW62P8NQ6
      B/uPzrNrayaHX21lx/OfxDTeyo9+eZyIJo1HPvUslRk65PACx998nca+OTIKKsgrLmb7+jKE
      wCQv/fBFRhdFGvY8w46aHHwDZ9nf7qM4yc3p5glyNz/CJ7aXL2099JEgMTE0T1F1KeHhITzB
      MAaVlqnBS4SNBeSnG5GlKH3d7aQX1qL2j3HqTAtOycCWXbspSNYxN9lPVJ2Gq/sEDtsGdhTr
      aWs8S9+EC0NGMTu2bcKmFYiHnZw5eoKxhSDGtALWb6jEnmzENdbOsbNdYMnmvu33kX4b4k8f
      KoKARqtBc7lxnl90YExKJkV3dZ/ZP+Ygp9hOWdr7yuMBtxufxsCDBUmYVALbK1PYP+FiV76S
      Ga+e0iw9Kdc8dpyx3mF+cLyfmMGGx+Oloq6E+0tvTRhoVc230zGCwlpC+mUjFLTpVBaYGR0c
      xeMd5eThw7z+8ms4NRYCI+f5hx+cYd9v/g7PPpzDj77xL4w6vLzz/X/m5EI6v/k7/40ifytv
      tkwQ9gzzL3/5t1D3NF/63GO0vvB13m6bwDfTy6EDh4nn7+SZves5/NKPmQt/dMpo8XCQYV+U
      /IwsSlNleqaWdrwTY0F6B8dAlon5RhgYjiLEPbS0DVKx/REe215C17FjTAVkPHNDNB05hMNc
      w8bSdEKBEOb8ap548kmq0yI0N/cRCbs4eeAQYsEWPv7kE6RJ00w5gwSmejk/HOX+x59ga7GB
      M6ca8Uf/C0StSWE6+lyUl2WiXtZYORZcDPaP8M2XzvIPLzXydo8TSVAQDYVwhyRkWUYpiniC
      EYjFkVUhfvbzM3z9Z+f43tEBpv3vvn+B7KIsarLS+OzjG/jC3mrus19fi+hGrLJZiV+jjKBQ
      KJAvL7sHvX4q9n2FreVp9Bz8J/p7OvjuP/wtshShezbK/OwcLd2zbP/yRtIsFqZ0IrIXnBP9
      tAQy+dfNeeiIcd96GwdaRqgrBUPGOioK0mF0GlUsRPgjXK8LhxaIhLWYjFr0hVmcOTVOsCyV
      5IxMfD2DRCjH2X8JbfHDiP5+LrVcond0yUktEAyQ6dyNSYqjyq5lV23ukiSMyYC/4yQ/e2ea
      cCiEPrcBn0tH0GJna3E6alHAYNQSkuPMTgwzdGmQif42kCJMx5PZFW7AoLqbHd9kPNPTTOvS
      2Ga5VqY8KkF+SQG7Ck1EF9389Ow43sxS1mdqef1gEwFJIFWvYlFhBqWePXvq2QNI0QgXm7o4
      PujhMzXJQJzxvlFOD8zQ5g1hEJVUN5Sxp8i8Qp5uzKoMICmlEMlzAkcUUtUgh2e4NOCl6PFC
      NCygS82nzJ6EyJL8naVqL3/xp596rxAi3jn2S9INhzB3y6K0u7+ZjiEnE98bAECSREYc1ZQn
      p1OjPc+F8WlcYxa2fMIIswL22gfY80gtmiseb8BlINeacln3SKKr5RxeUzmf+81HCcz3c7J1
      7r1WbzlxSUXV7k+woyL7o3rk2yYejXB+0MeG6kxWMtMki4FFGURBQKE3kGpUEZMFiipK+J2K
      EgBmR8c4Ma9ElpfqgkIhIKpUFGQYaFt4111FQV55KU+5g0SyS9mee3tT2KsaAtnyang0P8i3
      f36aWZeL1kO/pEes5qGatGssPatoPerRdzjUOcOi10Vb20W8YSjNMXDubDdOj4Ph0SXJ66Sc
      Eur107x2fgzH3AhnLjipr8+/rQe6XWR5kaFh+PgXv8Rzzz3Hc889xyOb7cyOzxJHTeGGfLrf
      Pk0kMwObQkBjyiTmuET/xALBgJfRgQ7mfct1e2RisTgajYqQz0H3hTbmw6A16onNTdA/7cHv
      mWd4ZJooCjKykxhtv8CEO4Df66Crb4hI7P3GIR6LEInFQZaRohGi0p0eHsn4F1144gayr9gT
      gHiccHTJe7Yo20Zv1yjji2Hm5xw4giJGjcD4lJPZxTA+r5vTPS5K7MlEvW7eOj/IqCuM17vI
      yW4XOSnvVnQBQRDIy0qi49IQk4tRvJ5FOoYWCN5CzlflDKdQGSjfshWp7xj73znJvKaUL3z+
      SbJNKuKxMGHJRGVlAWqlAn1yLlsq0jj6xqucbulEk1pMaXEeldVlTF84ztHWcQyKRRz6Eh7c
      sp7NW2voPPgzjjb10/Dk8zxYlwORAFF1MpWluYhSlGBUoKyqHP1H4f4bcDNJElW5ye+1DmqN
      llA4QmqyDaUxjcjCKDllNaQYNYgqA7mZRjobz9DaOYQyqYjCbAuyFEFjsGI2qEEQSLYZGGpv
      pLVvlrSSCrKTzKRl2SnKNtB68jjtgw4MJg2mFDv5hYXkmsOcOX6S7uE5UuwlZCTpUVwehjr7
      z9HuMpKbrGG8s5mJiJF067UtocvlwmazffhlBrhmnBhzc8gxXtGjeRy81blITrYJq8VCsTnG
      wTOD9HoUPHxfEek6BRGvm0ONQ7SO+6mrL6UmXYtSqyVdHeVI4yDNwx7sZUVsLzAjXjEMN1rM
      FJsk9p8d4NKUH3tBBpkG5U2Hl340znDRIF3tF5CTcklW+nn1e9/FuPu3eHZbIR/ZxM7dSMRH
      39A4hqQ0tEKI8yfPULLtMUrS9Te+dhUkhLFuzEcztyaqsBkUHD7yOgtBmZIHvsDurWu88gMo
      NVhVERrPHCeCmtKND1OY9sFU/gSrY827Q8uyfNd8fH/QDA0Pk5uXd6ezcVdzl66ufHTE4/F7
      Nh4gFI4w5Vi48YlrmHvTjyFBglWSMIAEa5o1PwS6BjnKWPtZTrWPYc6tYve2OvRCkO5z59FU
      bqXIeqUHbJDzv3iRNo8SvVLEmJrFhoaN5KYYEIJOTrUMs2HbBnSyxGDbMZq7ZrEVbWDH+lwG
      Wo7RMRSgcNN2NpVmJlqiO0TCAJYTnKVjRs0Tn/4U082H6Zsro1icxCGmstW8fI1TRqGw8MAz
      T1Gkj+AY76TxTCP6PfeTqkti+/aleFwpFmNi1s3OJz5Dllkk5J5jPqLnY5/eh0mdqPp3koQB
      LCcUJGa0YlSrMZrUTLoXGPVMYbVl0Nc3RHZu7hWqEO+jENWk5dVR7jjIwOgCKVlhfnJymGcf
      qqLpyBGa23vpn3mR3EI7kekx+qfnGR+fp2zzDkoMLppbOplbDGNMK+Gh3ZtRBPtpPe9Bo5pm
      NJbBo1vLmept4ULvBGFZQXn9Q9SuSyXhpX17JAxgOUYLelcnM4tZzMz40Vjn8aq0+EZGMRtE
      znui7NlUuvK2ToKAITkFwR1ElhVI8TioLGx8YB9BWaJy5ydJM0DINU9y7yDrN25BJ/7/7Z15
      dBzXdae/Wrqq9wYa3Y3GvgNcAII7RXGRRCqSLDnabMdxEidOxrHPSTzJJDmZM3Nm5swkM4mT
      45M5ThwryUSxFS+xLCmxLdFaqIWiJFLcF5AASGLfgcbSe3d1dVfV/AGam0gRohyLJvv7r4Hu
      eq9e1X3Lfff+XoGTe07Tsu1Bdrhg/NibHB1JsiGQZ2RggPad23iksYLs/CCzeikPPX4nUj7G
      vrcPM1f1ABXu4gjyYSgawJUoIe5YP88bL+3G19iKQxQpVTModatZV2/x/FuDXCp8eCVaIk7B
      VoXAlVpD12KeM8fOkJ2aXQwiE2VaygsgyNS0rGJFcyWKAHNzQ3QdGWZ48PRiNUurkCyDoh/j
      w1E0gKvgDi/n4U+1MNJ1gGRZJ45MN9G8gWVyzQP9LMuikIsxOZGmYnMZApElluYkVFdF430P
      U+uRsMwCJhK59CySLF8ozuYopaE9xD3bOrCJi+sKUba9/6WLXJeiAVwVi+R4N+fSQe7u9KDP
      lXPm4FFeH5fwlrde1vsX9ARdB95iSjHR0ilKW++ksdQGiaWW5aGp2cehN3Yz7HeDZVK5bBOV
      V8S2lYTqsfe8yRt75nEqIqLDR0fHKsyFAebNEM3VPhbGzhKVwzRU+IrjwhK57UMhrq4MZ5FL
      JchJDrwOBcsskIzOE9cs/IEgTlU6bwQGidkIC+kcgijh9Jbi97kWoxYNndmERqDEA5ZFMhHF
      4SnDJoFZyJPOarjcHkQBzEKO2Pw8CS2PYvcQDJYiWhqZtIDbaz9/2rxFPpskMh+lYIl4/UF8
      LpVcaoGs5cLvtZONz5EV3ZR6Fn9TVIa7PkUDKEoj3tYUR8oitzVXXQNMT0/fsmfnXsnV1aFv
      DfK6Tjq21HMKbk+uagBlZWW3bIjw7YRhGNTW1n7U1bipuaoB2GxF99qtgCiKKMrNrCTx0bMk
      N2h8qo+xrJeVDSGwDIZ7DpN0t7CqPoCpZxk4N0SgpYVSdWmGk41P0D9RYMWyWqQLaWEmsalB
      hhIO1rTdDGoIOpMDo1glYSrK3MXF0rWwLBbmFxia07iYmm+juamMUtvF/OCxkQmmL8lalx0u
      llf5UMkzPBFlXjMJBP3UlqrnPWM6w+NRFnIGLq+HppAbRbrEAW2ZpGJJzkVSWKKNmko/wRvI
      CV7Sc53o2c1ff/M1AAp6jOef+F985dmDmEA2OsqTTz7FdEpfcqGRobd44hsvkytcOs0yObfv
      Wf7vt9/6IPVfrFN6nh/+0z/TE8t84N9ek+QYu/e8y9ET3ei35hLhp4ZRMMhqeTJankwqzZtH
      h5nVLm80XS8s/l/LE4/Heev4KCk9T9fxft4dSZDMpHj17V565nNYRpZ9+89wZCJFMqNx4lgf
      h6cu13yIRSLsOjjCfDpPIhbjRN/CDalCLGkECNd0IMy8yizgiZ/FCN5LU2yC8QIoC2cpOBso
      dygkpwc40TNIWrcINqygvbkKxcoy0H2SwakkjkAVq9qXLV7ULDDae5jxmThljZ20N4ZYtvVT
      fGm5DdAZ6DpJ3hUgOTVEVHewZvNGgg4JPT3Hma5uptIWwVApvlAtRt/bvPzyywy6PIzWtbFz
      43LIznLkcBdJQ6G5Yx31ISeJiXOci8kErXn6p9NUtnWyvKbsKrnJJuPnhqnfsIH81BiJrI7d
      rRCbnaCgBijzqmAazExP4A1UI+cW6B8cJWMq1Le0EXDbSMYiGJKHzHQfKWctzUGF8ZFBZqIZ
      VG+Q5qZ6nDYBK59msK+fhZSO6glQU1tBqUslszDBucEpcJTQ2NyEV71JxyBBIBgOEQwvfozO
      TDGrK9Q4L58NNLXU0QSAxWhPL1l3PfZ8lr6syMfvaMZjgxbPIG+cm2XlxjCrN61g6/lzmeMl
      A/xoJs2WaidgsjAzz/PvnMUsq6JCkqioq6XFf2NCzUtqVZ8/RMiaZyAGyaF+jNXbWFUywUjE
      Ij06gVJVj10tMHy2n2Rewq7keO7vv87hoXmmu9/gqeffRVRVFiZ66RmOApAcG2AkpqOIkzz1
      t99iJJpn8vTrPPnD/UCWvf/yBE/9+BC6YNG/53s8/c4wYLLnu1/jR4dHUFWD/f/2DV45NYtN
      UbFJEnanE5dDxUpN8sw/fJ2jMyaCPsE3vv5PnIskGTv2El/7h6cZThhkI6f4u6eeR8u/t3u3
      ChojUYO6ygrqXAaj0cW+JT7Zz6m+yUVpxNwsJw+dJaOnOXnsMPG8iJCbYf/eo8QLFtOj3Zzc
      t4cDfTEESSATjTAxF8emqsQmejjaPYFhZOnZ/zqnJ7MoqsLI6cP0TSUoR/gllAAAGN1JREFU
      xMd592gfpk0hOzfA/sO95IyfA6eEZTAyFKGyvgK7dLXJiIWpJTk8IbChxYMIiFgXpk4+j5OM
      lgNJwqMuTmfyOY2jI+lLlDIEJAl0TSLsd+BUZRRpUSvoRgJjl2QAkj/E+hqDnr4og72DtC5f
      Q2ubh4HhaYZGx6lrbUaV7LR1rsQpZFiI6tjS8/ROzVHQUiTSORRPOdvve4TNyxYPbPDUtbFt
      8xa237sJKTJJMnuF21Vx0rZmM1u2bGFtg4exqQXIdvPSgRSPfPLT3L1tIyHFxMBGVetKwj4/
      yzfcwbbVzUz3H2TPdIgvfvo+7r3/E2wsGWf38VEAvI2d3LPlTjatX0lqYfrCCYuXksvGSOki
      fp+XhpYggz1j6EBFTS3zMxMUgET/MQp1q1FzYwwMJtEyCdK6jVz0FEMzedASTJiVPPqxbbSE
      fbjKyqnyu0nF42jZPLMzU6QWZhkslPLA3Zvo7OykvsKDYFpM9Q8SzaZIxePoeYvBkX4y2s9O
      G/XGsMjMT3M6W8rqSvXqL6MFQwPTqFXlhBUBh8tBlVzgxXfP8vKhAd7qnmY2s9ghWZbFzMQk
      P3jzLEpdIxurXBcuks/ppPU8sWSW+XiWlH7jwmBLiwUSfazoqOabp95FGPOz6TMqAb2Z5Mmj
      9I1oNN1VhZCO8NyTf8983d1sbqxkpswDiFSseoDf5giH9/2Il3+kc/9nv8QN6xRk4miSHVVR
      gGuvOXQ9hax4zt+cgOowSSd0sF/zJ5cXM9HN8ROnGJkcRjQ1krlSpresoNYXpDp3nMFEgrkB
      i/b7A1gLQxhqCeXhMDJQWVNPeZnE9HwJK1tqFjVVLZOxnqN0zwo0VofJqgbJ2Rz5PLidKuJl
      3ZBFNptFdQcIh8sAqGjx4rbf3CcUWIbBqb4YLa31XEvYxSjkODujsWLdoo6nINtYv76V8kiS
      VN7CyghEootPLRmZ5LUzaTZsWEZLmZ1LtfZUl5uqMhuC4qA6oFDquPG2WeLEUqKxo5P5va9x
      2FlOox2cFQ1IPa9yOl5NY62TQjbJufEcG7dvpr0xQDatASbR2VncVev43O/9ER+ry7P3UC83
      vMXmqyVoRugbnyafiTOfXAxhkCQZp6PA/LyGYZqEKtpwJrs5FdHQ01Oc7DNY2RZcYiEaQ2cX
      eOiLv88XPv95Pv+FL/GLm0oZGZnDktysWR/gyEsHmCqtos4hoHjCqGYCV7CGluYGSh1gWhII
      AqJwXiTWMpmLZ6huXEZLYzV2S0c3QXXaSEdmmEnkMfU0kUgUA4FguY9kUidU10xTfTVOReBm
      P/xXSycYzdhoDV5bqzM+NUbSVUm193y/a5pE03mC5X6WV7mZmU3TWl0Geordx6PctbWF1ste
      fgABT4mPjW3lJBJZaqsDlCsmYzPJ9+kSr82So0Hl+naqhe9jVFbjAHRHJQ57GjXcRrUdbHIl
      H7+7ie9/9S/Z37yGiuZ6ZKeCaETZ84N/ZTCSwuYJ8+Avr8SZjVERks6H+qqUV5VjlwVUVykV
      ATcgUhIMIzhtgICjJEhIcoBczWd+fQfPPPM39NY2oWcNSkUByR3g4V+6l29972841bCF//pr
      9/D7n4vx3Sf+nGcsG8vv+3XuWRZmat5P2L+oIy8rLirL37sAtlJzzDgauMd/sVcJVDUyNTGH
      YYZQK9fiTv8L5dWrAVBdFWxaU8H+XU/zWkGium0Nd24Am+rE+km6oyDR1FDF62/t4ojppLYm
      RMDnxOYOsrmjgpd/+F1ykhuPXcItCJTUd7Iu+g4/+u5TmDYnTZ13UB66WNHZnj2cpp17lvsZ
      PL6PWMkK1jZ+lGeBWcxNzRJsrMFnu6RPjc7wbG+BB+6swmNo9AyZbNjkR7mkzdOzEZ59Y4Ys
      Mh0rGllb4yKfmCeSiPL0j9698PI3tC/n8ZUXZR5rGmrZnBvmqR8cwJQU1q9rIXwDNf85C4bL
      0tc9TkVLI7ZUP098+eu0/vaXeaj1xvXhP1LyWSZmY/iDIVQhx96XdhFc/QDtNTcm9X0lRWnE
      6/Nzlg8gMntuL88+922ypo3Wnb/Bjqaf05cfQBTQI+d4bveL6JZC85qtNFfc2EknRW6Mn7MR
      oMgHoTgCXJ+fsxHgp8+tnA+QzeUYnVlqaubtyW1vALcylgVmcYB/X27S/fUiRX42FEeAK7Es
      4pPdvL73NIFVW9m6shqBAtM9XWjV7TT4Lg0vztGzdzdHRmKIkkpF6yo2r27BYZMul0bEYm74
      JPsOncFRu5rt65uJDhzlnWPj1K7bUpRG/AgpGsCV6DMcPD7H9sceZnL/6/SUl9MkTdEbE9iy
      7MrmMkhH82x+7LM02bMMdb3D7jeS7NyxHs8l0ohmPkfP2UHW3fdJakptaLEZukbj3P/4Y/hu
      8h3eW52iAVxJOolWGibgcJIPOTk7F8OpjRCsWk4+l0NSVSTpvceAijYHTWvvJvPWK/RNpVgT
      yPH6qSl2rqnh0BtvcPjkGc5NaZdJI05Px1m2aRudFQInDhxgYC5H9YpNbF1VTyE7Tl9fAY80
      xvGIg/u3riI72cveQ91okpetO+6jplS5lkxRkSVSNIArsTuxJUdI6DkS8Ryqe5qpnIPsqb2c
      1UWCLWvZ3lF7DWlEG2WVQYbnY1glIlOzUbC1X0ca0eD0269T0rmTX/FDz97XOToZpt2T5OzR
      LgKrOrlveytWfIzTE3nuf/zT2LITvLb3LZz37iDgKE6ePgxFA7gSRzmraoZ58Znn8FQ2ECiY
      +Nw6omMTdzXAjw9OQMe182zNQh5L/CAvZYyzx3uJDc9wBDD1DOFQAjwCrmAjG9a04pJFpueH
      OXv8DCNDvQiALjnJaAYUDeBDUTSAKxFkqlZu4ZdX3slM3xEmqcRt9pGRVWTFQjBNTOCqM3cr
      R2R8Hl/HekSWejSRiK+8ma2PPkj5JSdtpxMxPL4SFPn8Cy7aaVq/g7vvaOGqofZFboiiAVwV
      Cz06TPekzIYtAYzILOd6++nLyygez2UeG9PUmZuewBHTmRnsJVrSzvaQHVJLLctHRXmOwwdP
      0NkYQEvOIZa2Eb4iprgkUEm66xDd/Tb8dojGU9Q0rcRuxNBwUuJW0ZJRcqITr+sa8fhF3sOS
      Dsq+lbmWLlAmnsBdUUPQraA6vaiFKGNxkVXty3DZLyZfW6bOzOQkC7E03tp21q2oQREFQEBW
      HQRLvSAIyLKCzx9AkVj8rKh4PR5EQaCsogoxOcPwRARDCdBUX44iitgUFz6fAwGQ7R5qQh7G
      hoaILKQoq26hvFQhNTvKbNZOmc9OfHqYubzjgjRiNBZHcVw7PLlIMRbolg6FKEojXp/iCqrI
      bc1V1wDJZPKWlQu8EtM0b1kZSMMooGdvRCzk9uGqBmAYxm1jAACyfGv6AhRZpsxbzC94P676
      5EtKSn7W9Sjy70A8HqesrOyjrsZNzQfo+iwKeg49b2AhINsUFJv8U9uKtyyLfC6HYFOwSeKF
      8nJX6PbIih3VduPxM5ZpktN1bIp6iSzjVb9JPqeDJCPLUtGteC0si4JhkC9Yl+XtK4qMfEn7
      WqZJLm/wExUaURJRZAkBEz1vYFggSxI2SUQQLnrn8oYFgoAiS5c/L8vCME30gokF2GQZWfrg
      2kBLNACT6OBRvv3sS8TzErIo4g608Pivf5KqJUqNXA8rn+Wb//2P8P7qf+Eza+oAnb59L7Lr
      3S76jx8mXraKVbUeVj7wWzyy9urpz+OnDjDraqSzMXTN1X1mdpA/+dO/5rN/8mU6Au5rV0gb
      5/vfeBHHso18/O413KzCbB89FsN9Q+w5GyMP6Nk0x/uzfPGLO7gzdFGtLTIyzFde7KOxatEr
      5a+o4KHVYSL9g7zYG0UUCmhSKZ/Y0UKd10Z6LsKzbw+QFGyossKmO9pYHbz4smUSMV7Ze5Zh
      Q0IFapsa+IVVAT6oPtySDECfH+Sbf/cd6n7lj/nt9kpUIU90bgFVgkI2Saog47QZJLIWfq+D
      TDpBRisgiDIeXwmqDJlkAlNWMLQMeUvC4/Wh2kQo5IjGEui6hpa3uJgOrrL8nsdZfs9Odv3F
      /+Dsqi/wRw82LDa5ZZBJxMnkCsgON16XA0NLcujH3+NE+UOUe9fj9/mQDI1kKkPBtLDZ3fg8
      11KsuRKL6PAwvpXrkLV5MrkCqkMmn8tiiQo2mwSWRS6XRVYciKZOOp3FQMTpcqPIIoV8DkuQ
      MbQ0BcmBSxXJZtLk8gaSTcXldCCJApZZIJNOoxcsJNmG3WFHkUUMXSOV0UCy4XS6sN2s27+C
      SPPyFpqXA1gMn+piyvTT5rtcGjGeTOKqaOR3Hm258DctGWPXsWnuun8jq8pEdr90gBdOlfKl
      TT7efOccrmWd/EqbB7GgkxN+cj0LLatz4N1uukw//+HueryqRKFgXX13/josyQCmho5x2mrh
      91ZXIQsCoFIWrgCg/+Un+euzQbbYzrBrtpGvfnEbr+3exUwCUpExPBt/lc/f38Szf/Wf6Qvf
      Q4cjTndXL/Uf/10+t62CY7v+mWeOJqgMeBmY0QhdtzYWkdOv84/P7cfuc5NKGdz9S5+jWTvN
      4bNjjIzu4fvmAh978ONwbhcvHZuGQpzxeZXf+IM/PK9PeR2MHH0TGm0rl5PrPspEPEupw8PI
      qX1MKcvY2lGNocd4+5V9rLpnBwtn9nFuIoVeyOEJd3LXluWMnznAQsLGxPgYgY7trA/m2H/o
      KLGshYlI8+q7Wd3oZvL0u7zdO4tNEkildNq372RthcSRg0eYWkiRNy3CLRvZ3FGLfLOPQnqa
      N7vmWL96PSVXDJnJeIpUNMu/vW3g9fnYsDyMoOss6CJBp4woyaxoDbL36AJ6q8DxWVjfNMvL
      +yfxBMq4o+Unsi8G44PDvHBqHn+tymsHBmhtb+DOmvcZzd+HJRlATotjU3xIwOyJ5/nq9/YS
      z/n53T/9b9iwmD/Xg/xrv8RfrmjA57Zx132PoRVMkhPv8OS/vsn81ibARrh5NZ/Y0UbL03/O
      0wNjROujfPfVcX7nL/6ERrXAk6Pd16+MNsmup5+n4ZH/yafXldD36pM8+cLb/Okff5Kda17h
      cMVj/MdPbUQGUupdPFarYRbS7P7O19jfM0PTiusXkdfSxPMGTd5S7PUudg/MsiLsIVxZxene
      KSyq0Ca7yfhX4LQinJgW6Vi/EZUcPUcOMjzfgqxF6Z3w8YsPPkqpW8HUM6xafyeGaRGfHmJ4
      dJRMWZATExq/8ODDlLltdL31IrmCxdzQEAnFz/o7OjCTEfadOUO6tRKf4yb2VlkW08PjDOa9
      /FaT9z298bLVnXypKY9R0Dnd1c8/TWX5zTvL6fCbvNE9w/Z6F2OzaaKaTFrTyRZ07E4vzSUm
      hw/38kO9nc90+hEQqagNUukdoamtlg2VDlyeG5+HL6lFbYobPbeAAQRXP8yfhcL8p//9HBkD
      fFg46ldx3x2deBWB+aH9fOsbr+Ktq0TQJ8kbyvmFj4TL7cImieeHfotEdIqIvZwWj4KVNxCW
      0sMlF+hfkHmkKYgsQWVVFdoLA1cJPTM59ON/Zt+EQjjgZSyaIVxYmr5mdu4s3acGiWu7sBkx
      xqYjzK5vpDxYgfudvUzqGnPdEVq2bcFKHmBoZBxd0hAByVeDT7FIKyV0rm7H71ERLJOFiT4O
      do0g2mRy6SgZtR4t48dd6sfnWozrFyURAYvo/BSTIxn06GJCu9dfdbk2/k2IUdA50DVJTccq
      6u3vravL46bhvEe23GNw5LlhUptrePgXOnnn1CQHexOg5SnzeFFtEqrNQXNDkBrJwp6c48kz
      M2idfhyYRCYTGIUc+08Pk1/w0risFv8Ndg5Lk0ev66RJ/1te7J7h/mUhbJZ1iVSfiNPhRDy/
      Qp/sPUasbC1/+JsPsDDyOoNnjl/zug5XKZ7cYSYyBcKChpYzuK4klKeM1rICfX0zrPOVMjo8
      gr2hjgAwpMjktBymaWEJCQ4fG2bLF/4PW+tkXkieZHIpN0uB8XMjrH7ocVYGF/uxyq63GR6P
      EWrysmGlyp53TlFQqnnUK6CbAcrLk2y+ZwdlDgEtk0ZUbaRFEVmULkgjjk3P0bBqCyvqfEwP
      HOdgn46sCqTjCdI5A59ikslogICvxEuJUcvObatQKJDO6hejQm9SUtEIR+ZUPrvz4hPMpVNM
      pyEccJOYjyK6PPgdIql4Ckm1o0gCedHB9k3LEAydV3cfoa2pFGepnWWeHIcHUoSb7Cwksjg9
      ARaTUWUa2up5PBvnmUEbD25fhhODWDKHx6N+4HXAkgzAEWrhtz7/CZ569m857fBht7I4qpoJ
      2t8rUVve0Ir58kt87YkJygM5tPe5bmltB59c+xZf+bOv0NpYw1SicP01gL2Chz7zKP/4zNf5
      q70OsjmJR355O06g5Y47efHbz/PV9CgPP/IQyxq9vPidJ+hvayU2k8HRfv17tTJTnIkG2bEz
      TMn5d86qr+P4xBhGQwe+lrVEf/xtqj/2KWQBRHc19cFuXvnhs8iyjDdYzYZNmy+/qCBS7nPw
      1oHd9B53YpfyaFIFqjdIW2kPL/zbsyiKHT2ToLleINS4gpKRPTz3zBkUWaakdgXb17ZdcAMu
      9B3gLK1sbvYx2n2UhLeF9tpSPjry9JwYxddcQ433Ys70ZO8Z/uakxR/86gbSk5PsG8liCpBN
      Fdi2dQV+xaSrq5/jU1kMXcfyVfBYmx9BFbl3axPfe+ck/69HQTdE7t8WvuzlbmxrZtNsN0++
      cAyXZFFVV8/Ozg9uAEsPhrMstEwKTS9gCSKK6sBhV7D0DBlDwu1QF/23570aeUNAdSqYuond
      aSefzWApDhw2iYKWRrNsuOw2zEKOZCqLICvImEgOJ3b50tswyWUyGJIDpyqdr8riqexa3kBW
      HbgcKqJwiUfFFHG5XIiGRjqbQ7DZUQQDS3ZglyGdzmB3uS/zU1+4TbNALm+hqrYLPmXTKJA3
      LBSbDUGw0DIZRMWx2CtbFqZZQNNyGCbYFBVVsWEYOggy8vk9Dcs00LIaBUtAURY1TxUJEskk
      iDICJqfe3YOr9S5WN5Ri5HWymn6+rRc9Q8L5TRdDz6Kj4LCJ5PUcpmi76t7Iz04YyyKn5TEl
      GbvtYrqokc+TLYDDbkOwDLRcgbxpIYkSDruMBOQLBbL64t6SXVVQ5EVfvmVZ5HJ5dMNCkmUc
      ioh42aaThVEwyOQKmAjYVdtiG33Amt/20aAfKfkUpw+9w7GBaSxLwlvZwt1bN3woue9LKSrD
      XZ+iAXyUWBamZWIaJhYCoiQhCsJPbXe9aADX5yb2q/1suJmiQU3zpxuAqGkaE5NLW/rfrtz2
      BnArnxRvIpAXi7pD78fN7VsrUuTfmdt+BLga2dg4p7pH8dYtp626FAGT2PgIur+GkPPSJssz
      0XuKgdkUgmijtLKetrrwYtyOnuLMYISGtgZUIDk3ypm+cZRAPcubwmQiQ/QOzBFobKOpsrTY
      E31EFNv9SowYJw/2ogT8RE4fZDRhUkjP0zU4he09rZVnvOcsYrCW6nAZ8YFD7D0+jG5aICmU
      lZUiAaaRp7vrOKIvTHmZBzMd5cjJXnyhCvyeK8/AKvKzpDgCXElilhlXNY+0LWNKn6BvKo5k
      9OOtasWnvre5REmlvLqeBg80NNZwaPcrnIuEaS/NMx1LEii10XP0CCfPDBHS3Jj5FP2RCYYn
      I+jCEDjc+JQ8A92nGY3qVDR30F5Xhp6bZ2YanOIMZ2Yl1q9qxoiNc+xUPznZw5oNG/BfJeSg
      yAejOAJciWRD1DV0w0DXDaR8hPGoTHJgH08/9zwnh+e5pudYdFBZW0ZsZgEzl+TE2WEQVSrr
      W6gIldG2ooOm+joam5qorq5hZccKqstcDJ06SlwN095WzULXPs4sFMhrc5x+dx9H+uNUVYcx
      UhGO9oxS3bqClrDIgb2HSeSLHuwPS3EEuBJPmBb1HLteeAHZ5iYUTOPwFsjZVvLoWpFXTgyw
      qu7aUiOSoiLmTC70LYKMt9SPx+0gECrH7wLNyuOdjRIqD+GQErx94hyZUJJpoJCYZGFonpom
      g4zpYefmDZTYZSIDvYwOjBKNRQGYjyeYT6zBW2a7Zl2KXJ+iAVyJYKdl43YqMxrJ+TGmMz58
      0jh5bwkOt4lUmHkfacQCC9OzqDXLEEguscAcolrJui3b+MnJrIrTg6XFCVVW4To/7SoUDAIN
      HWxYXYsICJKMy1l8fB+W4hToKkg2O167wchInOqmapx2O4noHOl4AkuxXbXRTENj5NR+BrMh
      Wiq9H2BhW4q/JM7otIbX60EqxJlPLIYYCoLATy7k8QWIR0Yp2Fx4PQ6SCzNk88U1wIel2IVc
      FZP5iUm8TSsIOUSsqlZCk++waz+sv3PrJd+TcPok9v/g2xyUVaraOtlxVzNOG5C3UxVanCoJ
      okRZsGJRFhEQbQqlJSXnRW5lVt91L8cOHOC7x9P4ws1s21aDZLjw+4ULxuYONbFzg8beF54h
      Yyq0rdtKSDGZOnuIcbORDctDTHbvZ1JpZm3LtXOii1zObR8LVJRGvL35/1Yc8BKaNjDoAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UE per Vehicle Class' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
